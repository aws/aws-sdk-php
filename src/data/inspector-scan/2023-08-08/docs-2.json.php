<?php
// This file was auto-generated from sdk-root/src/data/inspector-scan/2023-08-08/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>Amazon Inspector Scan is a vulnerability discovery service that scans a provided Software Bill of Materials (SBOM) for security vulnerabilities.</p>', 'operations' => [ 'ScanSbom' => '<p>Scans a provided CycloneDX 1.5 SBOM and reports on any vulnerabilities discovered in that SBOM. You can generate compatible SBOMs for your resources using the <a href="">Amazon Inspector SBOM generator</a>.</p>', ], 'shapes' => [ 'AccessDeniedException' => [ 'base' => '<p>You do not have sufficient access to perform this action. </p>', 'refs' => [], ], 'Integer' => [ 'base' => NULL, 'refs' => [ 'InternalServerException$retryAfterSeconds' => '<p>The number of seconds to wait before retrying the request.</p>', 'ThrottlingException$retryAfterSeconds' => '<p>The number of seconds to wait before retrying the request.</p>', ], ], 'InternalServerException' => [ 'base' => '<p>The request processing has failed because of an unknown error, exception or failure. </p>', 'refs' => [], ], 'InternalServerExceptionReason' => [ 'base' => NULL, 'refs' => [ 'InternalServerException$reason' => '<p>The reason for the validation failure.</p>', ], ], 'OutputFormat' => [ 'base' => NULL, 'refs' => [ 'ScanSbomRequest$outputFormat' => '<p>The output format for the vulnerability report.</p>', ], ], 'Sbom' => [ 'base' => NULL, 'refs' => [ 'ScanSbomRequest$sbom' => '<p>The JSON file for the SBOM you want to scan. The SBOM must be in CycloneDX 1.5 format.</p>', 'ScanSbomResponse$sbom' => '<p>The vulnerability report for the scanned SBOM.</p>', ], ], 'ScanSbomRequest' => [ 'base' => NULL, 'refs' => [], ], 'ScanSbomResponse' => [ 'base' => NULL, 'refs' => [], ], 'String' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$message' => NULL, 'InternalServerException$message' => NULL, 'ThrottlingException$message' => NULL, 'ValidationException$message' => NULL, 'ValidationExceptionField$name' => '<p>The name of the validation exception. </p>', 'ValidationExceptionField$message' => '<p>The validation exception message. </p>', ], ], 'ThrottlingException' => [ 'base' => '<p>The request was denied due to request throttling. </p>', 'refs' => [], ], 'ValidationException' => [ 'base' => '<p>The request has failed validation due to missing required fields or having invalid inputs.</p>', 'refs' => [], ], 'ValidationExceptionField' => [ 'base' => '<p>The request has failed validation due to missing required fields or having invalid inputs. </p>', 'refs' => [ 'ValidationExceptionFields$member' => NULL, ], ], 'ValidationExceptionFields' => [ 'base' => NULL, 'refs' => [ 'ValidationException$fields' => '<p>The fields that failed validation.</p>', ], ], 'ValidationExceptionReason' => [ 'base' => NULL, 'refs' => [ 'ValidationException$reason' => '<p>The reason for the validation failure.</p>', ], ], ],];
