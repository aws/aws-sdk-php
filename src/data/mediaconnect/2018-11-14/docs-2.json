{
  "version": "2.0",
  "service": "<p>Welcome to the Elemental MediaConnect API reference. </p> <p>MediaConnect is a service that lets you ingest live video content into the cloud and distribute it to destinations all over the world, both inside and outside the Amazon Web Services cloud. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types that are supported by MediaConnect. </p> <p>Use the following links to get started with the MediaConnect API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/API_Operations.html\">Actions</a>: An alphabetical list of all MediaConnect API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/API_Types.html\">Data types</a>: An alphabetical list of all MediaConnect data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul>",
  "operations": {
    "AddBridgeOutputs": "<p> Adds outputs to an existing bridge.</p>",
    "AddBridgeSources": "<p> Adds sources to an existing bridge.</p>",
    "AddFlowMediaStreams": "<p> Adds media streams to an existing flow. After you add a media stream to a flow, you can associate it with a source and/or an output that uses the ST 2110 JPEG XS or CDI protocol.</p>",
    "AddFlowOutputs": "<p> Adds outputs to an existing flow. You can create up to 50 outputs per flow.</p>",
    "AddFlowSources": "<p> Adds sources to a flow.</p>",
    "AddFlowVpcInterfaces": "<p> Adds VPC interfaces to a flow.</p>",
    "CreateBridge": "<p> Creates a new bridge. The request must include one source.</p>",
    "CreateFlow": "<p> Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).</p>",
    "CreateGateway": "<p> Creates a new gateway. The request must include at least one network (up to four).</p>",
    "DeleteBridge": "<p> Deletes a bridge. Before you can delete a bridge, you must stop the bridge.</p>",
    "DeleteFlow": "<p> Deletes a flow. Before you can delete a flow, you must stop the flow.</p>",
    "DeleteGateway": "<p> Deletes a gateway. Before you can delete a gateway, you must deregister its instances and delete its bridges.</p>",
    "DeregisterGatewayInstance": "<p> Deregisters an instance. Before you deregister an instance, all bridges running on the instance must be stopped. If you want to deregister an instance without stopping the bridges, you must use the --force option.</p>",
    "DescribeBridge": "<p> Displays the details of a bridge.</p>",
    "DescribeFlow": "<p> Displays the details of a flow. The response includes the flow Amazon Resource Name (ARN), name, and Availability Zone, as well as details about the source, outputs, and entitlements.</p>",
    "DescribeFlowSourceMetadata": "<p> The <code>DescribeFlowSourceMetadata</code> API is used to view information about the flow's source transport stream and programs. This API displays status messages about the flow's source as well as details about the program's video, audio, and other data. </p>",
    "DescribeFlowSourceThumbnail": "<p> Describes the thumbnail for the flow source. </p>",
    "DescribeGateway": "<p> Displays the details of a gateway. The response includes the gateway Amazon Resource Name (ARN), name, and CIDR blocks, as well as details about the networks.</p>",
    "DescribeGatewayInstance": "<p> Displays the details of an instance. </p>",
    "DescribeOffering": "<p> Displays the details of an offering. The response includes the offering description, duration, outbound bandwidth, price, and Amazon Resource Name (ARN).</p>",
    "DescribeReservation": "<p> Displays the details of a reservation. The response includes the reservation name, state, start date and time, and the details of the offering that make up the rest of the reservation (such as price, duration, and outbound bandwidth).</p>",
    "GrantFlowEntitlements": "<p> Grants entitlements to an existing flow.</p>",
    "ListBridges": "<p> Displays a list of bridges that are associated with this account and an optionally specified Amazon Resource Name (ARN). This request returns a paginated result.</p>",
    "ListEntitlements": "<p> Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.</p>",
    "ListFlows": "<p> Displays a list of flows that are associated with this account. This request returns a paginated result.</p>",
    "ListGatewayInstances": "<p> Displays a list of instances associated with the Amazon Web Services account. This request returns a paginated result. You can use the filterArn property to display only the instances associated with the selected Gateway Amazon Resource Name (ARN).</p>",
    "ListGateways": "<p> Displays a list of gateways that are associated with this account. This request returns a paginated result.</p>",
    "ListOfferings": "<p> Displays a list of all offerings that are available to this account in the current Amazon Web Services Region. If you have an active reservation (which means you've purchased an offering that has already started and hasn't expired yet), your account isn't eligible for other offerings.</p>",
    "ListReservations": "<p> Displays a list of all reservations that have been purchased by this account in the current Amazon Web Services Region. This list includes all reservations in all states (such as active and expired).</p>",
    "ListTagsForResource": "<p> List all tags on a MediaConnect resource.</p>",
    "PurchaseOffering": "<p> Submits a request to purchase an offering. If you already have an active reservation, you can't purchase another offering.</p>",
    "RemoveBridgeOutput": "<p> Removes an output from a bridge.</p>",
    "RemoveBridgeSource": "<p> Removes a source from a bridge.</p>",
    "RemoveFlowMediaStream": "<p> Removes a media stream from a flow. This action is only available if the media stream is not associated with a source or output.</p>",
    "RemoveFlowOutput": "<p> Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.</p>",
    "RemoveFlowSource": "<p> Removes a source from an existing flow. This request can be made only if there is more than one source on the flow. </p>",
    "RemoveFlowVpcInterface": "<p> Removes a VPC Interface from an existing flow. This request can be made only on a VPC interface that does not have a Source or Output associated with it. If the VPC interface is referenced by a Source or Output, you must first delete or update the Source or Output to no longer reference the VPC interface.</p>",
    "RevokeFlowEntitlement": "<p> Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.</p>",
    "StartFlow": "<p> Starts a flow.</p>",
    "StopFlow": "<p> Stops a flow.</p>",
    "TagResource": "<p> Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.</p>",
    "UntagResource": "<p> Deletes specified tags from a resource.</p>",
    "UpdateBridge": "<p> Updates the bridge.</p>",
    "UpdateBridgeOutput": "<p> Updates an existing bridge output.</p>",
    "UpdateBridgeSource": "<p> Updates an existing bridge source.</p>",
    "UpdateBridgeState": "<p> Updates the bridge state. </p>",
    "UpdateFlow": "<p> Updates an existing flow.</p>",
    "UpdateFlowEntitlement": "<p> Updates an entitlement. You can change an entitlement's description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.</p>",
    "UpdateFlowMediaStream": "<p> Updates an existing media stream.</p>",
    "UpdateFlowOutput": "<p> Updates an existing flow output.</p>",
    "UpdateFlowSource": "<p> Updates the source of a flow.</p>",
    "UpdateGatewayInstance": "<p>Updates an existing gateway instance. </p>"
  },
  "shapes": {
    "AddBridgeFlowSourceRequest": {
      "base": "<p> Add a flow source to an existing bridge. </p>",
      "refs": {
        "AddBridgeSourceRequest$FlowSource": "<p> The source of the flow. </p>"
      }
    },
    "AddBridgeFlowSourceRequestFlowArnString": {
      "base": null,
      "refs": {
        "AddBridgeFlowSourceRequest$FlowArn": "<p> The Amazon Resource Number (ARN) of the flow to use as a source of this bridge. </p>"
      }
    },
    "AddBridgeNetworkOutputRequest": {
      "base": "<p>Add a network output to an existing bridge. </p>",
      "refs": {
        "AddBridgeOutputRequest$NetworkOutput": "<p> The network output of the bridge. A network output is delivered to your premises. </p>"
      }
    },
    "AddBridgeNetworkSourceRequest": {
      "base": "<p> Add a network source to an existing bridge. </p>",
      "refs": {
        "AddBridgeSourceRequest$NetworkSource": "<p> The source of the network. </p>"
      }
    },
    "AddBridgeOutputRequest": {
      "base": "<p> Add outputs to the specified bridge.</p>",
      "refs": {
        "__listOfAddBridgeOutputRequest$member": null
      }
    },
    "AddBridgeOutputsRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddBridgeOutputsRequestBridgeArnString": {
      "base": null,
      "refs": {
        "AddBridgeOutputsRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>"
      }
    },
    "AddBridgeOutputsResponse": {
      "base": null,
      "refs": {
      }
    },
    "AddBridgeSourceRequest": {
      "base": "<p> Add an output to a bridge. </p>",
      "refs": {
        "__listOfAddBridgeSourceRequest$member": null
      }
    },
    "AddBridgeSourcesRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddBridgeSourcesResponse": {
      "base": null,
      "refs": {
      }
    },
    "AddEgressGatewayBridgeRequest": {
      "base": "<p> Create a bridge with the egress bridge type. An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>",
      "refs": {
        "CreateBridgeRequest$EgressGatewayBridge": "<p>An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>"
      }
    },
    "AddFlowMediaStreamsRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddFlowMediaStreamsRequestFlowArnString": {
      "base": null,
      "refs": {
        "AddFlowMediaStreamsRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow.</p>"
      }
    },
    "AddFlowMediaStreamsResponse": {
      "base": null,
      "refs": {
      }
    },
    "AddFlowOutputs420Exception": {
      "base": "<p>Exception raised by Elemental MediaConnect when adding the flow output. See the error message for the operation for more information on the cause of this exception. </p>",
      "refs": {
      }
    },
    "AddFlowOutputsRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddFlowOutputsRequestFlowArnString": {
      "base": null,
      "refs": {
        "AddFlowOutputsRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to add outputs to.</p>"
      }
    },
    "AddFlowOutputsResponse": {
      "base": null,
      "refs": {
      }
    },
    "AddFlowSourcesRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddFlowSourcesRequestFlowArnString": {
      "base": null,
      "refs": {
        "AddFlowSourcesRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>"
      }
    },
    "AddFlowSourcesResponse": {
      "base": null,
      "refs": {
      }
    },
    "AddFlowVpcInterfacesRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddFlowVpcInterfacesRequestFlowArnString": {
      "base": null,
      "refs": {
        "AddFlowVpcInterfacesRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>"
      }
    },
    "AddFlowVpcInterfacesResponse": {
      "base": null,
      "refs": {
      }
    },
    "AddIngressGatewayBridgeRequest": {
      "base": "<p>Create a bridge with the ingress bridge type. An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>",
      "refs": {
        "CreateBridgeRequest$IngressGatewayBridge": "<p>An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>"
      }
    },
    "AddMaintenance": {
      "base": "<p> Create a maintenance setting for a flow.</p>",
      "refs": {
        "CreateFlowRequest$Maintenance": "<p> The maintenance settings you want to use for the flow. </p>"
      }
    },
    "AddMediaStreamRequest": {
      "base": "<p> The media stream that you want to add to the flow. </p>",
      "refs": {
        "__listOfAddMediaStreamRequest$member": null
      }
    },
    "AddOutputRequest": {
      "base": "<p> A request to add an output to a flow.</p>",
      "refs": {
        "__listOfAddOutputRequest$member": null
      }
    },
    "Algorithm": {
      "base": null,
      "refs": {
        "Encryption$Algorithm": "<p> The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).</p>",
        "UpdateEncryption$Algorithm": "<p> The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).</p>"
      }
    },
    "AudioMonitoringSetting": {
      "base": "<p> Specifies the configuration for audio stream metrics monitoring.</p>",
      "refs": {
        "__listOfAudioMonitoringSetting$member": null
      }
    },
    "BadRequestException": {
      "base": "<p>This exception is thrown if the request contains a semantic error. The precise meaning depends on the API, and is documented in the error message. </p>",
      "refs": {
      }
    },
    "BlackFrames": {
      "base": "<p> Configures settings for the <code>BlackFrames</code> metric.</p>",
      "refs": {
        "VideoMonitoringSetting$BlackFrames": "<p>Detects video frames that are black. </p>"
      }
    },
    "Boolean": {
      "base": null,
      "refs": {
        "DeregisterGatewayInstanceRequest$Force": "<p> Force the deregistration of an instance. Force will deregister an instance, even if there are bridges running on it.</p>"
      }
    },
    "Bridge": {
      "base": "<p> A Bridge is the connection between your data center's Instances and the Amazon Web Services cloud. A bridge can be used to send video from the Amazon Web Services cloud to your data center or from your data center to the Amazon Web Services cloud.</p>",
      "refs": {
        "CreateBridgeResponse$Bridge": "<p> The name of the bridge that was created.</p>",
        "DescribeBridgeResponse$Bridge": "<p>The bridge that you requested a description of. </p>",
        "UpdateBridgeResponse$Bridge": "<p> The bridge that was updated. </p>"
      }
    },
    "BridgeArn": {
      "base": null,
      "refs": {
        "AddBridgeSourcesRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>"
      }
    },
    "BridgeFlowOutput": {
      "base": "<p> The output of the bridge. A flow output is delivered to the Amazon Web Services cloud. </p>",
      "refs": {
        "BridgeOutput$FlowOutput": "<p> The output of the associated flow. </p>"
      }
    },
    "BridgeFlowSource": {
      "base": "<p> The source of the bridge. A flow source originates in MediaConnect as an existing cloud flow.</p>",
      "refs": {
        "BridgeSource$FlowSource": "<p> The source of the associated flow. </p>"
      }
    },
    "BridgeNetworkOutput": {
      "base": "<p> The output of the bridge. A network output is delivered to your premises.</p>",
      "refs": {
        "BridgeOutput$NetworkOutput": "<p> The network output for the bridge. </p>"
      }
    },
    "BridgeNetworkSource": {
      "base": "<p> The source of the bridge. A network source originates at your premises.</p>",
      "refs": {
        "BridgeSource$NetworkSource": "<p> The network source for the bridge. </p>"
      }
    },
    "BridgeOutput": {
      "base": "<p> The output of the bridge.</p>",
      "refs": {
        "UpdateBridgeOutputResponse$Output": "<p> The bridge output that was updated. </p>",
        "__listOfBridgeOutput$member": null
      }
    },
    "BridgePlacement": {
      "base": null,
      "refs": {
        "GatewayInstance$BridgePlacement": "<p>The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be deployed to this instance. </p>",
        "UpdateGatewayInstanceRequest$BridgePlacement": "<p>The state of the instance. <code>ACTIVE</code> or <code>INACTIVE</code>. </p>",
        "UpdateGatewayInstanceResponse$BridgePlacement": "<p>The state of the instance. <code>ACTIVE</code> or <code>INACTIVE</code>. </p>"
      }
    },
    "BridgeSource": {
      "base": "<p> The bridge's source.</p>",
      "refs": {
        "UpdateBridgeSourceResponse$Source": "<p> The updated bridge source. </p>",
        "__listOfBridgeSource$member": null
      }
    },
    "BridgeState": {
      "base": null,
      "refs": {
        "Bridge$BridgeState": "<p>The state of the bridge. </p>",
        "ListedBridge$BridgeState": "<p>The state of the bridge. </p>"
      }
    },
    "Colorimetry": {
      "base": null,
      "refs": {
        "Fmtp$Colorimetry": "<p>The format used for the representation of color. </p>",
        "FmtpRequest$Colorimetry": "<p> The format that is used for the representation of color.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>The requested operation would cause a conflict with the current state of a service resource associated with the request. Resolve the conflict before retrying this request. </p>",
      "refs": {
      }
    },
    "ConnectionStatus": {
      "base": null,
      "refs": {
        "GatewayInstance$ConnectionStatus": "<p>The connection state of the instance. </p>"
      }
    },
    "ContentQualityAnalysisState": {
      "base": null,
      "refs": {
        "MonitoringConfig$ContentQualityAnalysisState": "<p> Indicates whether content quality analysis is enabled or disabled.</p>"
      }
    },
    "CreateBridge420Exception": {
      "base": "<p>Exception raised by Elemental MediaConnect when creating the bridge. See the error message for the operation for more information on the cause of this exception. </p>",
      "refs": {
      }
    },
    "CreateBridgeRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateBridgeResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateFlow420Exception": {
      "base": "<p>Exception raised by Elemental MediaConnect when creating the flow. See the error message for the operation for more information on the cause of this exception. </p>",
      "refs": {
      }
    },
    "CreateFlowRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateFlowResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateGateway420Exception": {
      "base": "<p>Exception raised by Elemental MediaConnect when creating the gateway. See the error message for the operation for more information on the cause of this exception. </p>",
      "refs": {
      }
    },
    "CreateGatewayRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateGatewayResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteBridgeRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteBridgeRequestBridgeArnString": {
      "base": null,
      "refs": {
        "DeleteBridgeRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to delete.</p>"
      }
    },
    "DeleteBridgeResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteFlowRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteFlowRequestFlowArnString": {
      "base": null,
      "refs": {
        "DeleteFlowRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to delete.</p>"
      }
    },
    "DeleteFlowResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteGatewayRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteGatewayRequestGatewayArnString": {
      "base": null,
      "refs": {
        "DeleteGatewayRequest$GatewayArn": "<p> The Amazon Resource Name (ARN) of the gateway that you want to delete.</p>"
      }
    },
    "DeleteGatewayResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterGatewayInstanceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterGatewayInstanceRequestGatewayInstanceArnString": {
      "base": null,
      "refs": {
        "DeregisterGatewayInstanceRequest$GatewayInstanceArn": "<p> The Amazon Resource Name (ARN) of the gateway that contains the instance that you want to deregister.</p>"
      }
    },
    "DeregisterGatewayInstanceResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeBridgeRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeBridgeRequestBridgeArnString": {
      "base": null,
      "refs": {
        "DescribeBridgeRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to describe.</p>"
      }
    },
    "DescribeBridgeResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFlowRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFlowRequestFlowArnString": {
      "base": null,
      "refs": {
        "DescribeFlowRequest$FlowArn": "<p> The ARN of the flow that you want to describe.</p>"
      }
    },
    "DescribeFlowResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFlowSourceMetadataRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFlowSourceMetadataResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFlowSourceThumbnailRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFlowSourceThumbnailResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeGatewayInstanceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeGatewayInstanceRequestGatewayInstanceArnString": {
      "base": null,
      "refs": {
        "DescribeGatewayInstanceRequest$GatewayInstanceArn": "<p> The Amazon Resource Name (ARN) of the gateway instance that you want to describe.</p>"
      }
    },
    "DescribeGatewayInstanceResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeGatewayRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeGatewayRequestGatewayArnString": {
      "base": null,
      "refs": {
        "DescribeGatewayRequest$GatewayArn": "<p> The ARN of the gateway that you want to describe.</p>"
      }
    },
    "DescribeGatewayResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeOfferingRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeOfferingResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeReservationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeReservationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DesiredState": {
      "base": null,
      "refs": {
        "UpdateBridgeStateRequest$DesiredState": "<p> The desired state for the bridge. </p>",
        "UpdateBridgeStateResponse$DesiredState": "<p> The new state of the bridge. </p>"
      }
    },
    "DestinationConfiguration": {
      "base": "<p> The transport parameters that you want to associate with an outbound media stream.</p>",
      "refs": {
        "__listOfDestinationConfiguration$member": null
      }
    },
    "DestinationConfigurationRequest": {
      "base": "<p>The definition of a media stream that you want to associate with the output. </p>",
      "refs": {
        "__listOfDestinationConfigurationRequest$member": null
      }
    },
    "Double": {
      "base": null,
      "refs": {
        "EncodingParameters$CompressionFactor": "<p> A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.</p>",
        "EncodingParametersRequest$CompressionFactor": "<p> A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.</p>"
      }
    },
    "DurationUnits": {
      "base": null,
      "refs": {
        "Offering$DurationUnits": "<p> The unit of measurement for the duration of the offering.</p>",
        "Reservation$DurationUnits": "<p> The unit of measurement for the duration of the reservation. MediaConnect defines this value in the offering.</p>"
      }
    },
    "EgressGatewayBridge": {
      "base": "<p> Create a bridge with the egress bridge type. An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>",
      "refs": {
        "Bridge$EgressGatewayBridge": "<p> An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>"
      }
    },
    "EncoderProfile": {
      "base": null,
      "refs": {
        "EncodingParameters$EncoderProfile": "<p> A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.</p>",
        "EncodingParametersRequest$EncoderProfile": "<p> A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, if at least one source on the flow uses the CDI protocol.</p>"
      }
    },
    "EncodingName": {
      "base": null,
      "refs": {
        "MediaStreamOutputConfiguration$EncodingName": "<p> The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.</p>",
        "MediaStreamOutputConfigurationRequest$EncodingName": "<p> The format that will be used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.</p>",
        "MediaStreamSourceConfiguration$EncodingName": "<p> The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv. </p>",
        "MediaStreamSourceConfigurationRequest$EncodingName": "<p>The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv. </p>"
      }
    },
    "EncodingParameters": {
      "base": "<p> A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.</p>",
      "refs": {
        "MediaStreamOutputConfiguration$EncodingParameters": "<p>A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source. </p>"
      }
    },
    "EncodingParametersRequest": {
      "base": "<p> A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.</p>",
      "refs": {
        "MediaStreamOutputConfigurationRequest$EncodingParameters": "<p> A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source. </p>"
      }
    },
    "Encryption": {
      "base": "<p> Information about the encryption of the flow.</p>",
      "refs": {
        "AddOutputRequest$Encryption": "<p> The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key). Allowable encryption types: static-key.</p>",
        "Entitlement$Encryption": "<p> The type of encryption that will be used on the output that is associated with this entitlement.</p>",
        "GrantEntitlementRequest$Encryption": "<p> The type of encryption that will be used on the output that is associated with this entitlement. Allowable encryption types: static-key, speke.</p>",
        "Output$Encryption": "<p> The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).</p>",
        "SetSourceRequest$Decryption": "<p> The type of encryption that is used on the content ingested from this source. Allowable encryption types: static-key.</p>",
        "Source$Decryption": "<p> The type of encryption that is used on the content ingested from this source.</p>"
      }
    },
    "Entitlement": {
      "base": "<p> The settings for a flow entitlement.</p>",
      "refs": {
        "UpdateFlowEntitlementResponse$Entitlement": "<p> The new configuration of the entitlement that you updated.</p>",
        "__listOfEntitlement$member": null
      }
    },
    "EntitlementStatus": {
      "base": null,
      "refs": {
        "Entitlement$EntitlementStatus": "<p> An indication of whether the entitlement is enabled. </p>",
        "GrantEntitlementRequest$EntitlementStatus": "<p> An indication of whether the new entitlement should be enabled or disabled as soon as it is created. If you don’t specify the entitlementStatus field in your request, MediaConnect sets it to ENABLED.</p>",
        "UpdateFlowEntitlementRequest$EntitlementStatus": "<p> An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the <code>entitlementStatus</code> field in your request, MediaConnect leaves the value unchanged.</p>"
      }
    },
    "FailoverConfig": {
      "base": "<p> The settings for source failover.</p>",
      "refs": {
        "Bridge$SourceFailoverConfig": "<p> The settings for source failover. </p>",
        "CreateBridgeRequest$SourceFailoverConfig": "<p> The settings for source failover.</p>",
        "CreateFlowRequest$SourceFailoverConfig": "<p> The settings for source failover. </p>",
        "Flow$SourceFailoverConfig": "<p> The settings for the source failover. </p>"
      }
    },
    "FailoverMode": {
      "base": null,
      "refs": {
        "FailoverConfig$FailoverMode": "<p> The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.</p>",
        "UpdateFailoverConfig$FailoverMode": "<p> The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.</p>"
      }
    },
    "Flow": {
      "base": "<p> The settings for a flow, including its source, outputs, and entitlements.</p>",
      "refs": {
        "CreateFlowResponse$Flow": "<p> The flow that you created. </p>",
        "DescribeFlowResponse$Flow": "<p>The flow that you requested a description of. </p>",
        "UpdateFlowResponse$Flow": "<p> The updated flow. </p>"
      }
    },
    "FlowArn": {
      "base": null,
      "refs": {
        "DescribeFlowSourceMetadataRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow.</p>",
        "DescribeFlowSourceThumbnailRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow.</p>"
      }
    },
    "FlowSize": {
      "base": null,
      "refs": {
        "CreateFlowRequest$FlowSize": "<p> Determines the processing capacity and feature set of the flow. Set this optional parameter to <code>LARGE</code> if you want to enable NDI outputs on the flow. </p>",
        "Flow$FlowSize": "<p> Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow. </p>"
      }
    },
    "Fmtp": {
      "base": "<p> A set of parameters that define the media stream. </p>",
      "refs": {
        "MediaStreamAttributes$Fmtp": "<p>The settings that you want to use to define the media stream. </p>"
      }
    },
    "FmtpRequest": {
      "base": "<p> The settings that you want to use to define the media stream.</p>",
      "refs": {
        "MediaStreamAttributesRequest$Fmtp": "<p>The settings that you want to use to define the media stream. </p>"
      }
    },
    "ForbiddenException": {
      "base": "<p>You do not have sufficient access to perform this action. </p>",
      "refs": {
      }
    },
    "FrameResolution": {
      "base": "<p> The frame resolution used by the video stream.</p>",
      "refs": {
        "TransportStream$FrameResolution": "<p>The frame resolution used by the video stream. </p>"
      }
    },
    "FrozenFrames": {
      "base": "<p> Configures settings for the <code>FrozenFrames</code> metric.</p>",
      "refs": {
        "VideoMonitoringSetting$FrozenFrames": "<p>Detects video frames that have not changed. </p>"
      }
    },
    "Gateway": {
      "base": "<p>The settings for a gateway, including its networks. </p>",
      "refs": {
        "CreateGatewayResponse$Gateway": "<p> The gateway that you created. </p>",
        "DescribeGatewayResponse$Gateway": "<p>The gateway that you wanted to describe. </p>"
      }
    },
    "GatewayBridgeSource": {
      "base": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>",
      "refs": {
        "Source$GatewayBridgeSource": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>"
      }
    },
    "GatewayInstance": {
      "base": "<p> The settings for an instance in a gateway.</p>",
      "refs": {
        "DescribeGatewayInstanceResponse$GatewayInstance": "<p>The gateway instance that you requested a description of. </p>"
      }
    },
    "GatewayNetwork": {
      "base": "<p>The network settings for a gateway. </p>",
      "refs": {
        "__listOfGatewayNetwork$member": null
      }
    },
    "GatewayState": {
      "base": null,
      "refs": {
        "Gateway$GatewayState": "<p> The current status of the gateway.</p>",
        "ListedGateway$GatewayState": "<p> The status of the gateway.</p>"
      }
    },
    "GrantEntitlementRequest": {
      "base": "<p> The entitlements that you want to grant on a flow.</p>",
      "refs": {
        "__listOfGrantEntitlementRequest$member": null
      }
    },
    "GrantFlowEntitlements420Exception": {
      "base": "<p>Exception raised by Elemental MediaConnect when granting the entitlement. See the error message for the operation for more information on the cause of this exception. </p>",
      "refs": {
      }
    },
    "GrantFlowEntitlementsRequest": {
      "base": null,
      "refs": {
      }
    },
    "GrantFlowEntitlementsRequestFlowArnString": {
      "base": null,
      "refs": {
        "GrantFlowEntitlementsRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to grant entitlements on.</p>"
      }
    },
    "GrantFlowEntitlementsResponse": {
      "base": null,
      "refs": {
      }
    },
    "IngressGatewayBridge": {
      "base": "<p>Create a bridge with the ingress bridge type. An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>",
      "refs": {
        "Bridge$IngressGatewayBridge": "<p> An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>"
      }
    },
    "InputConfiguration": {
      "base": "<p> The transport parameters that are associated with an incoming media stream.</p>",
      "refs": {
        "__listOfInputConfiguration$member": null
      }
    },
    "InputConfigurationRequest": {
      "base": "<p> The transport parameters that you want to associate with an incoming media stream.</p>",
      "refs": {
        "__listOfInputConfigurationRequest$member": null
      }
    },
    "InstanceState": {
      "base": null,
      "refs": {
        "DeregisterGatewayInstanceResponse$InstanceState": "<p> The status of the instance.</p>",
        "GatewayInstance$InstanceState": "<p>The status of the instance. </p>",
        "ListedGatewayInstance$InstanceState": "<p> The status of the instance.</p>"
      }
    },
    "Integer": {
      "base": null,
      "refs": {
        "AddBridgeNetworkOutputRequest$Port": "<p> The network output port. </p>",
        "AddBridgeNetworkOutputRequest$Ttl": "<p> The network output TTL. </p>",
        "AddBridgeNetworkSourceRequest$Port": "<p> The network source port.</p>",
        "AddEgressGatewayBridgeRequest$MaxBitrate": "<p> The maximum expected bitrate (in bps) of the egress bridge.</p>",
        "AddIngressGatewayBridgeRequest$MaxBitrate": "<p> The maximum expected bitrate (in bps) of the ingress bridge. </p>",
        "AddIngressGatewayBridgeRequest$MaxOutputs": "<p> The maximum number of expected outputs on the ingress bridge. </p>",
        "AddMediaStreamRequest$ClockRate": "<p> The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.</p>",
        "AddMediaStreamRequest$MediaStreamId": "<p> A unique identifier for the media stream. </p>",
        "AddOutputRequest$MaxLatency": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
        "AddOutputRequest$MinLatency": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
        "AddOutputRequest$Port": "<p> The port to use when content is distributed to this output.</p>",
        "AddOutputRequest$SenderControlPort": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
        "AddOutputRequest$SmoothingLatency": "<p> The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.</p>",
        "AddOutputRequest$NdiSpeedHqQuality": "<p>A quality setting for the NDI Speed HQ encoder. </p>",
        "BlackFrames$ThresholdSeconds": "<p> Specifies the number of consecutive seconds of black frames that triggers an event or alert.</p>",
        "BridgeNetworkOutput$Port": "<p> The network output's port.</p>",
        "BridgeNetworkOutput$Ttl": "<p> The network output TTL.</p>",
        "BridgeNetworkSource$Port": "<p> The network source port.</p>",
        "DestinationConfiguration$DestinationPort": "<p> The port that you want MediaConnect to use when it distributes the media stream to the output.</p>",
        "DestinationConfigurationRequest$DestinationPort": "<p> The port that you want MediaConnect to use when it distributes the media stream to the output.</p>",
        "EgressGatewayBridge$MaxBitrate": "<p> The maximum expected bitrate (in bps) of the egress bridge.</p>",
        "Entitlement$DataTransferSubscriberFeePercent": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
        "FailoverConfig$RecoveryWindow": "<p> Search window time to look for dash-7 packets.</p>",
        "FrameResolution$FrameHeight": "<p> The number of pixels in the height of the video frame.</p>",
        "FrameResolution$FrameWidth": "<p> The number of pixels in the width of the video frame.</p>",
        "FrozenFrames$ThresholdSeconds": "<p> Specifies the number of consecutive seconds of a static image that triggers an event or alert.</p>",
        "GatewayInstance$RunningBridgeCount": "<p> The running bridge count. </p>",
        "GrantEntitlementRequest$DataTransferSubscriberFeePercent": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
        "IngressGatewayBridge$MaxBitrate": "<p>The maximum expected bitrate (in bps) of the ingress bridge. </p>",
        "IngressGatewayBridge$MaxOutputs": "<p>The maximum number of outputs on the ingress bridge. </p>",
        "InputConfiguration$InputPort": "<p> The port that the flow listens on for an incoming media stream.</p>",
        "InputConfigurationRequest$InputPort": "<p> The port that you want the flow to listen on for an incoming media stream.</p>",
        "ListedEntitlement$DataTransferSubscriberFeePercent": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
        "MediaStream$ClockRate": "<p> The sample rate for the stream. This value is measured in Hz.</p>",
        "MediaStream$Fmt": "<p> The format type number (sometimes referred to as RTP payload type) of the media stream. MediaConnect assigns this value to the media stream. For ST 2110 JPEG XS outputs, you need to provide this value to the receiver.</p>",
        "MediaStream$MediaStreamId": "<p> A unique identifier for the media stream. </p>",
        "NdiDiscoveryServerConfig$DiscoveryServerPort": "<p>The port for the NDI discovery server. Defaults to 5959 if a custom port isn't specified. </p>",
        "Offering$Duration": "<p> The length of time that your reservation would be active.</p>",
        "Output$DataTransferSubscriberFeePercent": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
        "Output$Port": "<p> The port to use when content is distributed to this output.</p>",
        "Reservation$Duration": "<p> The length of time that this reservation is active. MediaConnect defines this value in the offering.</p>",
        "ResourceSpecification$ReservedBitrate": "<p> The amount of outbound bandwidth that is discounted in the offering.</p>",
        "SetSourceRequest$IngestPort": "<p> The port that the flow will be listening on for incoming content.</p>",
        "SetSourceRequest$MaxBitrate": "<p> The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC streams.</p>",
        "SetSourceRequest$MaxLatency": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
        "SetSourceRequest$MaxSyncBuffer": "<p> The size of the buffer (in milliseconds) to use to sync incoming source data.</p>",
        "SetSourceRequest$MinLatency": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
        "SetSourceRequest$SenderControlPort": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
        "SetSourceRequest$SourceListenerPort": "<p> Source port for SRT-caller protocol.</p>",
        "SilentAudio$ThresholdSeconds": "<p>Specifies the number of consecutive seconds of silence that triggers an event or alert. </p>",
        "Source$DataTransferSubscriberFeePercent": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
        "Source$IngestPort": "<p> The port that the flow will be listening on for incoming content.</p>",
        "Source$SenderControlPort": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
        "Transport$MaxBitrate": "<p> The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC streams.</p>",
        "Transport$MaxLatency": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
        "Transport$MaxSyncBuffer": "<p> The size of the buffer (in milliseconds) to use to sync incoming source data.</p>",
        "Transport$MinLatency": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
        "Transport$SenderControlPort": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
        "Transport$SmoothingLatency": "<p> The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.</p>",
        "Transport$SourceListenerPort": "<p> Source port for SRT-caller protocol.</p>",
        "Transport$NdiSpeedHqQuality": "<p>A quality setting for the NDI Speed HQ encoder. </p>",
        "TransportStream$Channels": "<p> The number of channels in the audio stream.</p>",
        "TransportStream$Pid": "<p> The Packet ID (PID) as it is reported in the Program Map Table.</p>",
        "TransportStream$SampleRate": "<p> The sample rate used by the audio stream.</p>",
        "TransportStream$SampleSize": "<p> The sample bit size used by the audio stream.</p>",
        "TransportStreamProgram$PcrPid": "<p> The Program Clock Reference (PCR) Packet ID (PID) as it is reported in the Program Association Table.</p>",
        "TransportStreamProgram$ProgramNumber": "<p> The program number as it is reported in the Program Association Table.</p>",
        "TransportStreamProgram$ProgramPid": "<p> The program Packet ID (PID) as it is reported in the Program Association Table.</p>",
        "UpdateBridgeNetworkOutputRequest$Port": "<p>The network output port. </p>",
        "UpdateBridgeNetworkOutputRequest$Ttl": "<p>The network output TTL. </p>",
        "UpdateBridgeNetworkSourceRequest$Port": "<p>The network source port. </p>",
        "UpdateEgressGatewayBridgeRequest$MaxBitrate": "<p>The maximum expected bitrate (in bps). </p>",
        "UpdateFailoverConfig$RecoveryWindow": "<p> Recovery window time to look for dash-7 packets.</p>",
        "UpdateFlowMediaStreamRequest$ClockRate": "<p>The sample rate for the stream. This value in measured in kHz. </p>",
        "UpdateFlowOutputRequest$MaxLatency": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
        "UpdateFlowOutputRequest$MinLatency": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
        "UpdateFlowOutputRequest$Port": "<p> The port to use when content is distributed to this output.</p>",
        "UpdateFlowOutputRequest$SenderControlPort": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
        "UpdateFlowOutputRequest$SmoothingLatency": "<p> The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.</p>",
        "UpdateFlowOutputRequest$NdiSpeedHqQuality": "<p>A quality setting for the NDI Speed HQ encoder. </p>",
        "UpdateFlowSourceRequest$IngestPort": "<p>The port that the flow listens on for incoming content. If the protocol of the source is Zixi, the port must be set to 2088. </p>",
        "UpdateFlowSourceRequest$MaxBitrate": "<p>The maximum bitrate for RIST, RTP, and RTP-FEC streams. </p>",
        "UpdateFlowSourceRequest$MaxLatency": "<p>The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams. </p>",
        "UpdateFlowSourceRequest$MaxSyncBuffer": "<p>The size of the buffer (in milliseconds) to use to sync incoming source data. </p>",
        "UpdateFlowSourceRequest$MinLatency": "<p>The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency. </p>",
        "UpdateFlowSourceRequest$SenderControlPort": "<p>The port that the flow uses to send outbound requests to initiate connection with the sender. </p>",
        "UpdateFlowSourceRequest$SourceListenerPort": "<p>Source port for SRT-caller protocol. </p>",
        "UpdateIngressGatewayBridgeRequest$MaxBitrate": "<p> The maximum expected bitrate (in bps).</p>",
        "UpdateIngressGatewayBridgeRequest$MaxOutputs": "<p> The maximum number of expected outputs.</p>",
        "__listOfInteger$member": null
      }
    },
    "Interface": {
      "base": "<p> The VPC interface that is used for the media stream associated with the source or output.</p>",
      "refs": {
        "DestinationConfiguration$Interface": "<p> The VPC interface that you want to use for the media stream associated with the output.</p>",
        "InputConfiguration$Interface": "<p> The VPC interface where the media stream comes in from.</p>"
      }
    },
    "InterfaceRequest": {
      "base": "<p> The VPC interface that you want to designate where the media stream is coming from or going to.</p>",
      "refs": {
        "DestinationConfigurationRequest$Interface": "<p> The VPC interface that you want to use for the media stream associated with the output.</p>",
        "InputConfigurationRequest$Interface": "<p> The VPC interface that you want to use for the incoming media stream.</p>"
      }
    },
    "InternalServerErrorException": {
      "base": "<p>The server encountered an internal error and is unable to complete the request. </p>",
      "refs": {
      }
    },
    "KeyType": {
      "base": null,
      "refs": {
        "Encryption$KeyType": "<p> The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).</p>",
        "UpdateEncryption$KeyType": "<p> The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).</p>"
      }
    },
    "ListBridgesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListBridgesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListEntitlementsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEntitlementsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListFlowsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListFlowsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListGatewayInstancesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListGatewayInstancesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListGatewaysRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListGatewaysResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListOfferingsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListOfferingsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListReservationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListReservationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListedBridge": {
      "base": "<p> Displays details of the selected bridge.</p>",
      "refs": {
        "__listOfListedBridge$member": null
      }
    },
    "ListedEntitlement": {
      "base": "<p> An entitlement that has been granted to you from other Amazon Web Services accounts.</p>",
      "refs": {
        "__listOfListedEntitlement$member": null
      }
    },
    "ListedFlow": {
      "base": "<p> A summary of a flow, including its ARN, Availability Zone, and source type.</p>",
      "refs": {
        "__listOfListedFlow$member": null
      }
    },
    "ListedGateway": {
      "base": "<p> A summary of a gateway, including its name, ARN, and status.</p>",
      "refs": {
        "__listOfListedGateway$member": null
      }
    },
    "ListedGatewayInstance": {
      "base": "<p> A summary of an instance. </p>",
      "refs": {
        "__listOfListedGatewayInstance$member": null
      }
    },
    "Maintenance": {
      "base": "<p> The maintenance setting of a flow.</p>",
      "refs": {
        "Flow$Maintenance": "<p> The maintenance settings for the flow. </p>",
        "ListedFlow$Maintenance": "<p> The maintenance settings for the flow. </p>"
      }
    },
    "MaintenanceDay": {
      "base": null,
      "refs": {
        "AddMaintenance$MaintenanceDay": "<p> A day of a week when the maintenance will happen. </p>",
        "Maintenance$MaintenanceDay": "<p> A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.</p>",
        "UpdateMaintenance$MaintenanceDay": "<p> A day of a week when the maintenance will happen.</p>"
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListBridgesRequest$MaxResults": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListBridges</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
        "ListEntitlementsRequest$MaxResults": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListEntitlements</code> request with set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 20 results per page.</p>",
        "ListFlowsRequest$MaxResults": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListFlows</code> request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
        "ListGatewayInstancesRequest$MaxResults": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a ListInstances request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
        "ListGatewaysRequest$MaxResults": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListGateways</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
        "ListOfferingsRequest$MaxResults": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListOfferings</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
        "ListReservationsRequest$MaxResults": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListReservations</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>"
      }
    },
    "MediaStream": {
      "base": "<p> A media stream represents one component of your content, such as video, audio, or ancillary data. After you add a media stream to your flow, you can associate it with sources and outputs that use the ST 2110 JPEG XS or CDI protocol. </p>",
      "refs": {
        "UpdateFlowMediaStreamResponse$MediaStream": "<p>The media stream that you updated. </p>",
        "__listOfMediaStream$member": null
      }
    },
    "MediaStreamAttributes": {
      "base": "<p>Attributes that are related to the media stream. </p>",
      "refs": {
        "MediaStream$Attributes": "<p> Attributes that are related to the media stream.</p>"
      }
    },
    "MediaStreamAttributesRequest": {
      "base": "<p>Attributes that are related to the media stream. </p>",
      "refs": {
        "AddMediaStreamRequest$Attributes": "<p> The attributes that you want to assign to the new media stream.</p>",
        "UpdateFlowMediaStreamRequest$Attributes": "<p> The attributes that you want to assign to the media stream.</p>"
      }
    },
    "MediaStreamOutputConfiguration": {
      "base": "<p> The media stream that is associated with the output, and the parameters for that association.</p>",
      "refs": {
        "__listOfMediaStreamOutputConfiguration$member": null
      }
    },
    "MediaStreamOutputConfigurationRequest": {
      "base": "<p> The media stream that you want to associate with the output, and the parameters for that association.</p>",
      "refs": {
        "__listOfMediaStreamOutputConfigurationRequest$member": null
      }
    },
    "MediaStreamSourceConfiguration": {
      "base": "<p>The media stream that is associated with the source, and the parameters for that association. </p>",
      "refs": {
        "__listOfMediaStreamSourceConfiguration$member": null
      }
    },
    "MediaStreamSourceConfigurationRequest": {
      "base": "<p>The media stream that you want to associate with the source, and the parameters for that association. </p>",
      "refs": {
        "__listOfMediaStreamSourceConfigurationRequest$member": null
      }
    },
    "MediaStreamType": {
      "base": null,
      "refs": {
        "AddMediaStreamRequest$MediaStreamType": "<p> The type of media stream.</p>",
        "MediaStream$MediaStreamType": "<p> The type of media stream. </p>",
        "UpdateFlowMediaStreamRequest$MediaStreamType": "<p>The type of media stream. </p>"
      }
    },
    "MessageDetail": {
      "base": "<p>The details of an error message. </p>",
      "refs": {
        "__listOfMessageDetail$member": null
      }
    },
    "Messages": {
      "base": "<p> Messages that provide the state of the flow.</p>",
      "refs": {
        "DescribeFlowResponse$Messages": "<p> Any errors that apply currently to the flow. If there are no errors, MediaConnect will not include this field in the response. </p>"
      }
    },
    "MonitoringConfig": {
      "base": "<p> The settings for source monitoring. </p>",
      "refs": {
        "CreateFlowRequest$SourceMonitoringConfig": "<p> The settings for source monitoring. </p>",
        "Flow$SourceMonitoringConfig": "<p> The settings for source monitoring. </p>",
        "UpdateFlowRequest$SourceMonitoringConfig": "<p> The settings for source monitoring. </p>"
      }
    },
    "MulticastSourceSettings": {
      "base": "<p> The settings related to the multicast source. </p>",
      "refs": {
        "AddBridgeNetworkSourceRequest$MulticastSourceSettings": "<p> The settings related to the multicast source. </p>",
        "BridgeNetworkSource$MulticastSourceSettings": "<p>The settings related to the multicast source. </p>",
        "UpdateBridgeNetworkSourceRequest$MulticastSourceSettings": "<p>The settings related to the multicast source. </p>"
      }
    },
    "NdiConfig": {
      "base": "<p>Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>",
      "refs": {
        "CreateFlowRequest$NdiConfig": "<p> Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>",
        "Flow$NdiConfig": "<p>Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>",
        "UpdateFlowRequest$NdiConfig": "<p> Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>"
      }
    },
    "NdiDiscoveryServerConfig": {
      "base": "<p>Specifies the configuration settings for individual NDI discovery servers. A maximum of 3 servers is allowed. </p>",
      "refs": {
        "__listOfNdiDiscoveryServerConfig$member": null
      }
    },
    "NdiState": {
      "base": null,
      "refs": {
        "NdiConfig$NdiState": "<p>A setting that controls whether NDI outputs can be used in the flow. Must be ENABLED to add NDI outputs. Default is DISABLED. </p>"
      }
    },
    "NetworkInterfaceType": {
      "base": null,
      "refs": {
        "VpcInterface$NetworkInterfaceType": "<p> The type of network interface.</p>",
        "VpcInterfaceRequest$NetworkInterfaceType": "<p>The type of network interface. </p>"
      }
    },
    "NotFoundException": {
      "base": "<p>One or more of the resources in the request does not exist in the system. </p>",
      "refs": {
      }
    },
    "Offering": {
      "base": "<p> A savings plan that reserves a certain amount of outbound bandwidth usage at a discounted rate each month over a period of time. </p>",
      "refs": {
        "DescribeOfferingResponse$Offering": "<p>The offering that you requested a description of. </p>",
        "__listOfOffering$member": null
      }
    },
    "OfferingArn": {
      "base": null,
      "refs": {
        "DescribeOfferingRequest$OfferingArn": "<p> The ARN of the offering.</p>"
      }
    },
    "Output": {
      "base": "<p>The settings for an output. </p>",
      "refs": {
        "UpdateFlowOutputResponse$Output": "<p> The new settings of the output that you updated.</p>",
        "__listOfOutput$member": null
      }
    },
    "OutputStatus": {
      "base": null,
      "refs": {
        "AddOutputRequest$OutputStatus": "<p> An indication of whether the new output should be enabled or disabled as soon as it is created. If you don't specify the outputStatus field in your request, MediaConnect sets it to ENABLED.</p>",
        "Output$OutputStatus": "<p> An indication of whether the output is transmitting data or not.</p>",
        "UpdateFlowOutputRequest$OutputStatus": "<p> An indication of whether the output should transmit data or not. If you don't specify the <code>outputStatus</code> field in your request, MediaConnect leaves the value unchanged.</p>"
      }
    },
    "PriceUnits": {
      "base": null,
      "refs": {
        "Offering$PriceUnits": "<p> The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate.</p>",
        "Reservation$PriceUnits": "<p> The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate. MediaConnect defines this value in the offering.</p>"
      }
    },
    "Protocol": {
      "base": null,
      "refs": {
        "AddBridgeNetworkOutputRequest$Protocol": "<p> The network output protocol. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "AddBridgeNetworkSourceRequest$Protocol": "<p> The network source protocol.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "AddOutputRequest$Protocol": "<p> The protocol to use for the output.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "BridgeNetworkOutput$Protocol": "<p> The network output protocol.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "BridgeNetworkSource$Protocol": "<p> The network source protocol.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "SetSourceRequest$Protocol": "<p> The protocol that is used by the source.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "Transport$Protocol": "<p> The protocol that is used by the source or output.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "UpdateBridgeNetworkOutputRequest$Protocol": "<p>The network output protocol. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "UpdateBridgeNetworkSourceRequest$Protocol": "<p>The network source protocol. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "UpdateFlowOutputRequest$Protocol": "<p> The protocol to use for the output.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
        "UpdateFlowSourceRequest$Protocol": "<p>The protocol that the source uses to deliver the content to MediaConnect. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>"
      }
    },
    "PurchaseOfferingRequest": {
      "base": null,
      "refs": {
      }
    },
    "PurchaseOfferingResponse": {
      "base": null,
      "refs": {
      }
    },
    "Range": {
      "base": null,
      "refs": {
        "Fmtp$Range": "<p>The encoding range of the video. </p>",
        "FmtpRequest$Range": "<p> The encoding range of the video.</p>"
      }
    },
    "RemoveBridgeOutputRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveBridgeOutputRequestBridgeArnString": {
      "base": null,
      "refs": {
        "RemoveBridgeOutputRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>"
      }
    },
    "RemoveBridgeOutputResponse": {
      "base": null,
      "refs": {
      }
    },
    "RemoveBridgeSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveBridgeSourceRequestBridgeArnString": {
      "base": null,
      "refs": {
        "RemoveBridgeSourceRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>"
      }
    },
    "RemoveBridgeSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowMediaStreamRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowMediaStreamRequestFlowArnString": {
      "base": null,
      "refs": {
        "RemoveFlowMediaStreamRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>"
      }
    },
    "RemoveFlowMediaStreamResponse": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowOutputRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowOutputRequestFlowArnString": {
      "base": null,
      "refs": {
        "RemoveFlowOutputRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to remove an output from.</p>"
      }
    },
    "RemoveFlowOutputRequestOutputArnString": {
      "base": null,
      "refs": {
        "RemoveFlowOutputRequest$OutputArn": "<p> The ARN of the output that you want to remove. </p>"
      }
    },
    "RemoveFlowOutputResponse": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowSourceRequestFlowArnString": {
      "base": null,
      "refs": {
        "RemoveFlowSourceRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to remove a source from.</p>"
      }
    },
    "RemoveFlowSourceRequestSourceArnString": {
      "base": null,
      "refs": {
        "RemoveFlowSourceRequest$SourceArn": "<p> The ARN of the source that you want to remove.</p>"
      }
    },
    "RemoveFlowSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowVpcInterfaceRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFlowVpcInterfaceRequestFlowArnString": {
      "base": null,
      "refs": {
        "RemoveFlowVpcInterfaceRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to remove a VPC interface from.</p>"
      }
    },
    "RemoveFlowVpcInterfaceResponse": {
      "base": null,
      "refs": {
      }
    },
    "Reservation": {
      "base": "<p> A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate.</p>",
      "refs": {
        "DescribeReservationResponse$Reservation": "<p> A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate. </p>",
        "PurchaseOfferingResponse$Reservation": "<p>The details of the reservation that you just created when you purchased the offering. </p>",
        "__listOfReservation$member": null
      }
    },
    "ReservationArn": {
      "base": null,
      "refs": {
        "DescribeReservationRequest$ReservationArn": "<p>The Amazon Resource Name (ARN) of the offering. </p>"
      }
    },
    "ReservationState": {
      "base": null,
      "refs": {
        "Reservation$ReservationState": "<p> The status of your reservation.</p>"
      }
    },
    "ResourceSpecification": {
      "base": "<p> A definition of what is being billed for, including the type and amount.</p>",
      "refs": {
        "Offering$ResourceSpecification": "<p> A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering.</p>",
        "Reservation$ResourceSpecification": "<p> A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering. MediaConnect defines the values that make up the resourceSpecification in the offering.</p>"
      }
    },
    "ResourceType": {
      "base": null,
      "refs": {
        "ResourceSpecification$ResourceType": "<p> The type of resource and the unit that is being billed for.</p>"
      }
    },
    "RevokeFlowEntitlementRequest": {
      "base": null,
      "refs": {
      }
    },
    "RevokeFlowEntitlementRequestEntitlementArnString": {
      "base": null,
      "refs": {
        "RevokeFlowEntitlementRequest$EntitlementArn": "<p> The Amazon Resource Name (ARN) of the entitlement that you want to revoke.</p>"
      }
    },
    "RevokeFlowEntitlementRequestFlowArnString": {
      "base": null,
      "refs": {
        "RevokeFlowEntitlementRequest$FlowArn": "<p> The flow that you want to revoke an entitlement from.</p>"
      }
    },
    "RevokeFlowEntitlementResponse": {
      "base": null,
      "refs": {
      }
    },
    "ScanMode": {
      "base": null,
      "refs": {
        "Fmtp$ScanMode": "<p>The type of compression that was used to smooth the video’s appearance. </p>",
        "FmtpRequest$ScanMode": "<p> The type of compression that was used to smooth the video’s appearance.</p>"
      }
    },
    "ServiceUnavailableException": {
      "base": "<p>The service is currently unavailable or busy. </p>",
      "refs": {
      }
    },
    "SetGatewayBridgeSourceRequest": {
      "base": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>",
      "refs": {
        "SetSourceRequest$GatewayBridgeSource": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>"
      }
    },
    "SetGatewayBridgeSourceRequestBridgeArnString": {
      "base": null,
      "refs": {
        "SetGatewayBridgeSourceRequest$BridgeArn": "<p> The ARN of the bridge feeding this flow.</p>"
      }
    },
    "SetSourceRequest": {
      "base": "<p> The settings for the source of the flow.</p>",
      "refs": {
        "CreateFlowRequest$Source": "<p> The settings for the source that you want to use for the new flow. </p>",
        "__listOfSetSourceRequest$member": null
      }
    },
    "SetSourceRequestEntitlementArnString": {
      "base": null,
      "refs": {
        "SetSourceRequest$EntitlementArn": "<p> The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator's flow.</p>"
      }
    },
    "SilentAudio": {
      "base": "<p>Configures settings for the <code>SilentAudio</code> metric. </p>",
      "refs": {
        "AudioMonitoringSetting$SilentAudio": "<p> Detects periods of silence. </p>"
      }
    },
    "Source": {
      "base": "<p> The settings for the source of the flow.</p>",
      "refs": {
        "Flow$Source": "<p> The source for the flow. </p>",
        "UpdateFlowSourceResponse$Source": "<p>The details of the sources that are assigned to the flow. </p>",
        "__listOfSource$member": null
      }
    },
    "SourcePriority": {
      "base": "<p> The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams. </p>",
      "refs": {
        "FailoverConfig$SourcePriority": "<p> The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.</p>",
        "UpdateFailoverConfig$SourcePriority": "<p> The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.</p>"
      }
    },
    "SourceType": {
      "base": null,
      "refs": {
        "ListedFlow$SourceType": "<p> The type of source. This value is either owned (originated somewhere other than an MediaConnect flow owned by another Amazon Web Services account) or entitled (originated at a MediaConnect flow owned by another Amazon Web Services account).</p>"
      }
    },
    "StartFlowRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartFlowRequestFlowArnString": {
      "base": null,
      "refs": {
        "StartFlowRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to start.</p>"
      }
    },
    "StartFlowResponse": {
      "base": null,
      "refs": {
      }
    },
    "State": {
      "base": null,
      "refs": {
        "BlackFrames$State": "<p> Indicates whether the <code>BlackFrames</code> metric is enabled or disabled..</p>",
        "FailoverConfig$State": "<p>The state of source failover on the flow. If the state is inactive, the flow can have only one source. If the state is active, the flow can have one or two sources. </p>",
        "FrozenFrames$State": "<p>Indicates whether the <code>FrozenFrames</code> metric is enabled or disabled.</p>",
        "SilentAudio$State": "<p>Indicates whether the <code>SilentAudio</code> metric is enabled or disabled. </p>",
        "UpdateFailoverConfig$State": "<p>The state of source failover on the flow. If the state is inactive, the flow can have only one source. If the state is active, the flow can have one or two sources. </p>"
      }
    },
    "Status": {
      "base": null,
      "refs": {
        "DeleteFlowResponse$Status": "<p> The status of the flow when the <code>DeleteFlow</code> process begins.</p>",
        "Flow$Status": "<p> The current status of the flow.</p>",
        "ListedFlow$Status": "<p> The current status of the flow.</p>",
        "StartFlowResponse$Status": "<p> The status of the flow when the <code>StartFlow</code> process begins.</p>",
        "StopFlowResponse$Status": "<p> The status of the flow when the <code>StopFlow</code> process begins.</p>"
      }
    },
    "StopFlowRequest": {
      "base": null,
      "refs": {
      }
    },
    "StopFlowRequestFlowArnString": {
      "base": null,
      "refs": {
        "StopFlowRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to stop.</p>"
      }
    },
    "StopFlowResponse": {
      "base": null,
      "refs": {
      }
    },
    "String": {
      "base": null,
      "refs": {
        "AddBridgeFlowSourceRequest$Name": "<p> The name of the flow source. This name is used to reference the source and must be unique among sources in this bridge. </p>",
        "AddBridgeNetworkOutputRequest$IpAddress": "<p> The network output IP Address. </p>",
        "AddBridgeNetworkOutputRequest$Name": "<p> The network output name. This name is used to reference the output and must be unique among outputs in this bridge. </p>",
        "AddBridgeNetworkOutputRequest$NetworkName": "<p> The network output's gateway network name. </p>",
        "AddBridgeNetworkSourceRequest$MulticastIp": "<p> The network source multicast IP.</p>",
        "AddBridgeNetworkSourceRequest$Name": "<p> The name of the network source. This name is used to reference the source and must be unique among sources in this bridge.</p>",
        "AddBridgeNetworkSourceRequest$NetworkName": "<p> The network source's gateway network name.</p>",
        "AddBridgeOutputsResponse$BridgeArn": "<p> The ARN of the bridge that you added outputs to.</p>",
        "AddBridgeSourcesResponse$BridgeArn": "<p> The ARN of the bridge that you added sources to.</p>",
        "AddFlowMediaStreamsResponse$FlowArn": "<p> The ARN of the flow that you added media streams to.</p>",
        "AddFlowOutputs420Exception$Message": null,
        "AddFlowOutputsResponse$FlowArn": "<p> The ARN of the flow that these outputs were added to.</p>",
        "AddFlowSourcesResponse$FlowArn": "<p> The ARN of the flow that these sources were added to.</p>",
        "AddFlowVpcInterfacesResponse$FlowArn": "<p> The ARN of the flow that these VPC interfaces were added to.</p>",
        "AddMaintenance$MaintenanceStartHour": "<p> UTC time when the maintenance will happen. </p> <p>Use 24-hour HH:MM format. </p> <p>Minutes must be 00. </p> <p>Example: 13:00. </p> <p>The default value is 02:00.</p>",
        "AddMediaStreamRequest$Description": "<p> A description that can help you quickly identify what your media stream is used for.</p>",
        "AddMediaStreamRequest$MediaStreamName": "<p> A name that helps you distinguish one media stream from another.</p>",
        "AddMediaStreamRequest$VideoFormat": "<p> The resolution of the video.</p>",
        "AddOutputRequest$Description": "<p> A description of the output. This description appears only on the Audit Manager console and will not be seen by the end user.</p>",
        "AddOutputRequest$Destination": "<p> The IP address from which video will be sent to output destinations.</p>",
        "AddOutputRequest$Name": "<p> The name of the output. This value must be unique within the current flow.</p>",
        "AddOutputRequest$RemoteId": "<p> The remote ID for the Zixi-pull output stream.</p>",
        "AddOutputRequest$StreamId": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
        "AddOutputRequest$NdiProgramName": "<p> A suffix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect uses the output name. </p>",
        "BadRequestException$Message": null,
        "Bridge$BridgeArn": "<p> The Amazon Resource Number (ARN) of the bridge.</p>",
        "Bridge$Name": "<p> The name of the bridge.</p>",
        "Bridge$PlacementArn": "<p> The placement Amazon Resource Number (ARN) of the bridge.</p>",
        "BridgeFlowOutput$FlowArn": "<p> The Amazon Resource Number (ARN) of the cloud flow.</p>",
        "BridgeFlowOutput$FlowSourceArn": "<p> The Amazon Resource Number (ARN) of the flow source.</p>",
        "BridgeFlowOutput$Name": "<p> The name of the bridge's output.</p>",
        "BridgeFlowSource$FlowArn": "<p> The ARN of the cloud flow used as a source of this bridge.</p>",
        "BridgeFlowSource$Name": "<p> The name of the flow source.</p>",
        "BridgeFlowSource$OutputArn": "<p> The Amazon Resource Number (ARN) of the output.</p>",
        "BridgeNetworkOutput$IpAddress": "<p> The network output IP address.</p>",
        "BridgeNetworkOutput$Name": "<p> The network output name.</p>",
        "BridgeNetworkOutput$NetworkName": "<p> The network output's gateway network name.</p>",
        "BridgeNetworkSource$MulticastIp": "<p> The network source multicast IP.</p>",
        "BridgeNetworkSource$Name": "<p> The name of the network source.</p>",
        "BridgeNetworkSource$NetworkName": "<p> The network source's gateway network name.</p>",
        "ConflictException$Message": null,
        "CreateBridge420Exception$Message": null,
        "CreateBridgeRequest$Name": "<p> The name of the bridge. This name can not be modified after the bridge is created.</p>",
        "CreateBridgeRequest$PlacementArn": "<p> The bridge placement Amazon Resource Number (ARN).</p>",
        "CreateFlow420Exception$Message": null,
        "CreateFlowRequest$AvailabilityZone": "<p> The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current Amazon Web Services Region.</p>",
        "CreateFlowRequest$Name": "<p> The name of the flow.</p>",
        "CreateGateway420Exception$Message": null,
        "CreateGatewayRequest$Name": "<p> The name of the gateway. This name can not be modified after the gateway is created.</p>",
        "DeleteBridgeResponse$BridgeArn": "<p> The ARN of the deleted bridge.</p>",
        "DeleteFlowResponse$FlowArn": "<p> The ARN of the flow that was deleted.</p>",
        "DeleteGatewayResponse$GatewayArn": "<p> The ARN of the gateway that was deleted.</p>",
        "DeregisterGatewayInstanceResponse$GatewayInstanceArn": "<p> The ARN of the instance.</p>",
        "DescribeFlowSourceMetadataResponse$FlowArn": "<p> The ARN of the flow that DescribeFlowSourceMetadata was performed on.</p>",
        "DestinationConfiguration$DestinationIp": "<p>The IP address where you want MediaConnect to send contents of the media stream.</p>",
        "DestinationConfiguration$OutboundIp": "<p>The IP address that the receiver requires in order to establish a connection with the flow. This value is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the CDI or ST 2110 JPEG XS or protocol. </p>",
        "DestinationConfigurationRequest$DestinationIp": "<p>The IP address where you want MediaConnect to send contents of the media stream.</p>",
        "EgressGatewayBridge$InstanceId": "<p> The ID of the instance running this bridge.</p>",
        "Encryption$ConstantInitializationVector": "<p> A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.</p>",
        "Encryption$DeviceId": "<p> The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
        "Encryption$Region": "<p> The Amazon Web Services Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
        "Encryption$ResourceId": "<p> An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
        "Encryption$RoleArn": "<p> The ARN of the role that you created during setup (when you set up MediaConnect as a trusted entity).</p>",
        "Encryption$SecretArn": "<p> The ARN of the secret that you created in Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.</p>",
        "Encryption$Url": "<p> The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
        "Entitlement$Description": "<p> A description of the entitlement.</p>",
        "Entitlement$EntitlementArn": "<p> The ARN of the entitlement. </p>",
        "Entitlement$Name": "<p> The name of the entitlement. </p>",
        "Flow$AvailabilityZone": "<p> The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current Amazon Web Services Region.</p>",
        "Flow$Description": "<p> A description of the flow. This value is not used or seen outside of the current MediaConnect account.</p>",
        "Flow$EgressIp": "<p> The IP address from which video will be sent to output destinations.</p>",
        "Flow$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow.</p>",
        "Flow$Name": "<p> The name of the flow.</p>",
        "Fmtp$ChannelOrder": "<p> The format of the audio channel. </p>",
        "Fmtp$ExactFramerate": "<p>The frame rate for the video stream, in frames/second. For example: 60000/1001. </p>",
        "Fmtp$Par": "<p>The pixel aspect ratio (PAR) of the video. </p>",
        "FmtpRequest$ChannelOrder": "<p> The format of the audio channel.</p>",
        "FmtpRequest$ExactFramerate": "<p> The frame rate for the video stream, in frames/second. For example: 60000/1001. If you specify a whole number, MediaConnect uses a ratio of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the <code>exactFramerate</code>.</p>",
        "FmtpRequest$Par": "<p> The pixel aspect ratio (PAR) of the video.</p>",
        "ForbiddenException$Message": null,
        "Gateway$GatewayArn": "<p> The Amazon Resource Name (ARN) of the gateway.</p>",
        "Gateway$Name": "<p> The name of the gateway. This name can not be modified after the gateway is created.</p>",
        "GatewayBridgeSource$BridgeArn": "<p> The ARN of the bridge feeding this flow.</p>",
        "GatewayInstance$GatewayArn": "<p>The Amazon Resource Name (ARN) of the instance. </p>",
        "GatewayInstance$GatewayInstanceArn": "<p>The ARN of the gateway. </p>",
        "GatewayInstance$InstanceId": "<p>The instance ID generated by the SSM install. This will begin with \"mi-\". </p>",
        "GatewayNetwork$CidrBlock": "<p>A unique IP address range to use for this network. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16. </p>",
        "GatewayNetwork$Name": "<p>The name of the network. This name is used to reference the network and must be unique among networks in this gateway. </p>",
        "GrantEntitlementRequest$Description": "<p> A description of the entitlement. This description appears only on the MediaConnect console and will not be seen by the subscriber or end user. </p>",
        "GrantEntitlementRequest$Name": "<p> The name of the entitlement. This value must be unique within the current flow.</p>",
        "GrantFlowEntitlements420Exception$Message": null,
        "GrantFlowEntitlementsResponse$FlowArn": "<p> The ARN of the flow that these entitlements were granted to.</p>",
        "IngressGatewayBridge$InstanceId": "<p>The ID of the instance running this bridge. </p>",
        "InputConfiguration$InputIp": "<p> The IP address that the flow listens on for incoming content for a media stream.</p>",
        "Interface$Name": "<p> The name of the VPC interface.</p>",
        "InterfaceRequest$Name": "<p> The name of the VPC interface.</p>",
        "InternalServerErrorException$Message": null,
        "ListBridgesRequest$FilterArn": "<p> Filter the list results to display only the bridges associated with the selected ARN.</p>",
        "ListBridgesRequest$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListBridges</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListBridges</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListBridgesResponse$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListBridges</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListBridges</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListEntitlementsRequest$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListEntitlements</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListEntitlements</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListEntitlementsResponse$NextToken": "<p>The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a ListEntitlements request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the <code>ListEntitlements</code> request a second time and specify the <code>NextToken</code> value. </p>",
        "ListFlowsRequest$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListFlows</code> request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListFlows</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListFlowsResponse$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListFlows</code> request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListFlows</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListGatewayInstancesRequest$FilterArn": "<p> Filter the list results to display only the instances associated with the selected Gateway ARN.</p>",
        "ListGatewayInstancesRequest$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListInstances</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListGatewayInstancesResponse$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListInstances</code> request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListGatewaysRequest$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListGateways</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListGateways</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListGatewaysResponse$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListGateways</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListGateways</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListOfferingsRequest$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListOfferings</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListOfferings</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListOfferingsResponse$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListOfferings</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListOfferings</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListReservationsRequest$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListReservations</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListOfferings</code> request a second time and specify the <code>NextToken</code> value. </p>",
        "ListReservationsResponse$NextToken": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListReservations</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListReservations</code> request a second time and specify the <code>NextToken</code> value.</p>",
        "ListTagsForResourceRequest$ResourceArn": "<p> The Amazon Resource Name (ARN) that identifies the MediaConnect resource for which to list the tags.</p>",
        "ListedBridge$BridgeArn": "<p> The ARN of the bridge.</p>",
        "ListedBridge$BridgeType": "<p> The type of the bridge.</p>",
        "ListedBridge$Name": "<p> The name of the bridge.</p>",
        "ListedBridge$PlacementArn": "<p> The ARN of the gateway associated with the bridge.</p>",
        "ListedEntitlement$EntitlementArn": "<p> The ARN of the entitlement.</p>",
        "ListedEntitlement$EntitlementName": "<p> The name of the entitlement.</p>",
        "ListedFlow$AvailabilityZone": "<p> The Availability Zone that the flow was created in.</p>",
        "ListedFlow$Description": "<p> A description of the flow.</p>",
        "ListedFlow$FlowArn": "<p> The ARN of the flow.</p>",
        "ListedFlow$Name": "<p> The name of the flow.</p>",
        "ListedGateway$GatewayArn": "<p> The Amazon Resource Name (ARN) of the gateway.</p>",
        "ListedGateway$Name": "<p> The name of the gateway.</p>",
        "ListedGatewayInstance$GatewayArn": "<p> The Amazon Resource Name (ARN) of the gateway.</p>",
        "ListedGatewayInstance$GatewayInstanceArn": "<p> The Amazon Resource Name (ARN) of the instance.</p>",
        "ListedGatewayInstance$InstanceId": "<p> The managed instance ID generated by the SSM install. This will begin with \"mi-\".</p>",
        "Maintenance$MaintenanceDeadline": "<p> The Maintenance has to be performed before this deadline in ISO UTC format. Example: 2021-01-30T08:30:00Z.</p>",
        "Maintenance$MaintenanceScheduledDate": "<p> A scheduled date in ISO UTC format when the maintenance will happen. Use YYYY-MM-DD format. Example: 2021-01-30.</p>",
        "Maintenance$MaintenanceStartHour": "<p> UTC time when the maintenance will happen. Use 24-hour HH:MM format. Minutes must be 00. Example: 13:00. The default value is 02:00.</p>",
        "MediaStream$Description": "<p> A description that can help you quickly identify what your media stream is used for.</p>",
        "MediaStream$MediaStreamName": "<p> A name that helps you distinguish one media stream from another. </p>",
        "MediaStream$VideoFormat": "<p> The resolution of the video. </p>",
        "MediaStreamAttributes$Lang": "<p>The audio language, in a format that is recognized by the receiver. </p>",
        "MediaStreamAttributesRequest$Lang": "<p>The audio language, in a format that is recognized by the receiver. </p>",
        "MediaStreamOutputConfiguration$MediaStreamName": "<p> The name of the media stream.</p>",
        "MediaStreamOutputConfigurationRequest$MediaStreamName": "<p> The name of the media stream that is associated with the output.</p>",
        "MediaStreamSourceConfiguration$MediaStreamName": "<p>A name that helps you distinguish one media stream from another. </p>",
        "MediaStreamSourceConfigurationRequest$MediaStreamName": "<p>The name of the media stream. </p>",
        "MessageDetail$Code": "<p> The error code.</p>",
        "MessageDetail$Message": "<p> The specific error message that MediaConnect returns to help you understand the reason that the request did not succeed.</p>",
        "MessageDetail$ResourceName": "<p> The name of the resource.</p>",
        "MulticastSourceSettings$MulticastSourceIp": "<p> The IP address of the source for source-specific multicast (SSM).</p>",
        "NdiConfig$MachineName": "<p>A prefix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect generates a unique 12-character ID as the prefix. </p>",
        "NdiDiscoveryServerConfig$DiscoveryServerAddress": "<p>The unique network address of the NDI discovery server. </p>",
        "NdiDiscoveryServerConfig$VpcInterfaceAdapter": "<p>The identifier for the Virtual Private Cloud (VPC) network interface used by the flow. </p>",
        "NotFoundException$Message": null,
        "Offering$CurrencyCode": "<p> The type of currency that is used for billing. The currencyCode used for all reservations is US dollars.</p>",
        "Offering$OfferingArn": "<p> The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.</p>",
        "Offering$OfferingDescription": "<p> A description of the offering.</p>",
        "Offering$PricePerUnit": "<p> The cost of a single unit. This value, in combination with priceUnits, makes up the rate.</p>",
        "Output$Description": "<p> A description of the output.</p>",
        "Output$Destination": "<p> The address where you want to send the output.</p>",
        "Output$EntitlementArn": "<p> The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.</p>",
        "Output$ListenerAddress": "<p> The IP address that the receiver requires in order to establish a connection with the flow. For public networking, the ListenerAddress is represented by the elastic IP address of the flow. For private networking, the ListenerAddress is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the Zixi pull or SRT listener protocol.</p>",
        "Output$MediaLiveInputArn": "<p> The input ARN of the MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.</p>",
        "Output$Name": "<p> The name of the output. This value must be unique within the current flow.</p>",
        "Output$OutputArn": "<p> The ARN of the output.</p>",
        "Output$BridgeArn": "<p> The ARN of the bridge added to this output.</p>",
        "Output$PeerIpAddress": "<p>The IP address of the device that is currently receiving content from this output.</p> <note> <ul> <li> <p>For outputs that use protocols where you specify the destination (such as SRT Caller or Zixi Push), this value matches the configured destination address.</p> </li> <li> <p>For outputs that use listener protocols (such as SRT Listener), this value shows the address of the connected receiver. </p> </li> <li> <p>Peer IP addresses aren't available for entitlements, managed MediaLive outputs, NDI outputs, and CDI/ST2110 outputs. </p> </li> <li> <p>The peer IP address might not be visible for flows that haven't been started yet, or flows that were started before May 2025. In these cases, restart your flow to see the peer IP address.</p> </li> </ul> </note>",
        "PurchaseOfferingRequest$OfferingArn": "<p> The Amazon Resource Name (ARN) of the offering.</p>",
        "PurchaseOfferingRequest$ReservationName": "<p> The name that you want to use for the reservation.</p>",
        "PurchaseOfferingRequest$Start": "<p> The date and time that you want the reservation to begin, in Coordinated Universal Time (UTC). </p> <p>You can specify any date and time between 12:00am on the first day of the current month to the current time on today's date, inclusive. Specify the start in a 24-hour notation. Use the following format: <code>YYYY-MM-DDTHH:mm:SSZ</code>, where <code>T</code> and <code>Z</code> are literal characters. For example, to specify 11:30pm on March 5, 2020, enter <code>2020-03-05T23:30:00Z</code>.</p>",
        "RemoveBridgeOutputRequest$OutputName": "<p> The name of the bridge output that you want to remove.</p>",
        "RemoveBridgeOutputResponse$BridgeArn": "<p> The ARN of the bridge from which the output was removed. </p>",
        "RemoveBridgeOutputResponse$OutputName": "<p> The name of the bridge output that was removed. </p>",
        "RemoveBridgeSourceRequest$SourceName": "<p> The name of the bridge source that you want to remove.</p>",
        "RemoveBridgeSourceResponse$BridgeArn": "<p> The ARN of the bridge from which the source was removed. </p>",
        "RemoveBridgeSourceResponse$SourceName": "<p> The name of the bridge source that was removed. </p>",
        "RemoveFlowMediaStreamRequest$MediaStreamName": "<p> The name of the media stream that you want to remove.</p>",
        "RemoveFlowMediaStreamResponse$FlowArn": "<p> The ARN of the flow that was updated.</p>",
        "RemoveFlowMediaStreamResponse$MediaStreamName": "<p> The name of the media stream that was removed.</p>",
        "RemoveFlowOutputResponse$FlowArn": "<p> The ARN of the flow that the output was removed from. </p>",
        "RemoveFlowOutputResponse$OutputArn": "<p> The ARN of the output that was removed. </p>",
        "RemoveFlowSourceResponse$FlowArn": "<p> The ARN of the flow that the source was removed from. </p>",
        "RemoveFlowSourceResponse$SourceArn": "<p> The ARN of the source that was removed. </p>",
        "RemoveFlowVpcInterfaceRequest$VpcInterfaceName": "<p> The name of the VPC interface that you want to remove.</p>",
        "RemoveFlowVpcInterfaceResponse$FlowArn": "<p> The ARN of the flow that is associated with the VPC interface you removed.</p>",
        "RemoveFlowVpcInterfaceResponse$VpcInterfaceName": "<p> The name of the VPC interface that was removed.</p>",
        "Reservation$CurrencyCode": "<p> The type of currency that is used for billing. The currencyCode used for your reservation is US dollars.</p>",
        "Reservation$End": "<p> The day and time that this reservation expires. This value is calculated based on the start date and time that you set and the offering's duration.</p>",
        "Reservation$OfferingArn": "<p> The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.</p>",
        "Reservation$OfferingDescription": "<p> A description of the offering. MediaConnect defines this value in the offering.</p>",
        "Reservation$PricePerUnit": "<p> The cost of a single unit. This value, in combination with priceUnits, makes up the rate. MediaConnect defines this value in the offering.</p>",
        "Reservation$ReservationArn": "<p> The Amazon Resource Name (ARN) that MediaConnect assigns to the reservation when you purchase an offering.</p>",
        "Reservation$ReservationName": "<p> The name that you assigned to the reservation when you purchased the offering.</p>",
        "Reservation$Start": "<p> The day and time that the reservation becomes active. You set this value when you purchase the offering.</p>",
        "RevokeFlowEntitlementResponse$EntitlementArn": "<p> The ARN of the entitlement that was revoked.</p>",
        "RevokeFlowEntitlementResponse$FlowArn": "<p> The ARN of the flow that the entitlement was revoked from.</p>",
        "ServiceUnavailableException$Message": null,
        "SetSourceRequest$Description": "<p> A description for the source. This value is not used or seen outside of the current MediaConnect account.</p>",
        "SetSourceRequest$Name": "<p> The name of the source.</p>",
        "SetSourceRequest$SenderIpAddress": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
        "SetSourceRequest$SourceListenerAddress": "<p> Source IP or domain name for SRT-caller protocol.</p>",
        "SetSourceRequest$StreamId": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
        "SetSourceRequest$VpcInterfaceName": "<p> The name of the VPC interface to use for this source.</p>",
        "SetSourceRequest$WhitelistCidr": "<p> The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
        "Source$Description": "<p> A description for the source. This value is not used or seen outside of the current MediaConnect account.</p>",
        "Source$EntitlementArn": "<p> The ARN of the entitlement that allows you to subscribe to content that comes from another Amazon Web Services account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.</p>",
        "Source$IngestIp": "<p> The IP address that the flow will be listening on for incoming content.</p>",
        "Source$Name": "<p> The name of the source.</p>",
        "Source$SenderIpAddress": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
        "Source$SourceArn": "<p> The ARN of the source.</p>",
        "Source$VpcInterfaceName": "<p> The name of the VPC interface that is used for this source.</p>",
        "Source$WhitelistCidr": "<p> The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
        "Source$PeerIpAddress": "<p>The IP address of the device that is currently sending content to this source. </p> <note> <ul> <li> <p>For sources that use protocols where you specify the origin (such as SRT Caller), this value matches the configured origin address. </p> </li> <li> <p>For sources that use listener protocols (such as SRT Listener or RTP), this value shows the address of the connected sender. </p> </li> <li> <p>Peer IP addresses aren't available for entitlements and CDI/ST2110 sources.</p> </li> <li> <p>The peer IP address might not be visible for flows that haven't been started yet, or flows that were started before May 2025. In these cases, restart your flow to see the peer IP address.</p> </li> </ul> </note>",
        "SourcePriority$PrimarySource": "<p> The name of the source you choose as the primary source for this flow.</p>",
        "StartFlowResponse$FlowArn": "<p> The ARN of the flow that you started.</p>",
        "StopFlowResponse$FlowArn": "<p> The ARN of the flow that you stopped.</p>",
        "TagResourceRequest$ResourceArn": "<p> The Amazon Resource Name (ARN) that identifies the MediaConnect resource to which to add tags.</p>",
        "ThumbnailDetails$FlowArn": "<p> The ARN of the flow that DescribeFlowSourceThumbnail was performed on.</p>",
        "ThumbnailDetails$Thumbnail": "<p>Thumbnail Base64 string. </p>",
        "ThumbnailDetails$Timecode": "<p> Timecode of thumbnail.</p>",
        "TooManyRequestsException$Message": null,
        "Transport$RemoteId": "<p> The remote ID for the Zixi-pull stream.</p>",
        "Transport$SenderIpAddress": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
        "Transport$SourceListenerAddress": "<p> Source IP or domain name for SRT-caller protocol.</p>",
        "Transport$StreamId": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
        "Transport$NdiProgramName": "<p>A suffix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect uses the output name. </p>",
        "TransportStream$Codec": "<p> The codec used by the stream.</p>",
        "TransportStream$FrameRate": "<p> The frame rate used by the video stream.</p>",
        "TransportStream$StreamType": "<p> The Stream Type as it is reported in the Program Map Table.</p>",
        "TransportStreamProgram$ProgramName": "<p> The program name as it is reported in the Program Association Table.</p>",
        "UntagResourceRequest$ResourceArn": "<p> The Amazon Resource Name (ARN) of the resource that you want to untag. </p>",
        "UpdateBridgeNetworkOutputRequest$IpAddress": "<p>The network output IP Address. </p>",
        "UpdateBridgeNetworkOutputRequest$NetworkName": "<p>The network output's gateway network name. </p>",
        "UpdateBridgeNetworkSourceRequest$MulticastIp": "<p> The network source multicast IP.</p>",
        "UpdateBridgeNetworkSourceRequest$NetworkName": "<p>The network source's gateway network name. </p>",
        "UpdateBridgeOutputRequest$OutputName": "<p> Tname of the output that you want to update. </p>",
        "UpdateBridgeOutputResponse$BridgeArn": "<p> The ARN of the bridge that was updated. </p>",
        "UpdateBridgeSourceRequest$SourceName": "<p> The name of the source that you want to update. </p>",
        "UpdateBridgeSourceResponse$BridgeArn": "<p> The ARN of the updated bridge source. </p>",
        "UpdateBridgeStateResponse$BridgeArn": "<p>The ARN of the updated bridge. </p>",
        "UpdateEncryption$ConstantInitializationVector": "<p> A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.</p>",
        "UpdateEncryption$DeviceId": "<p> The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
        "UpdateEncryption$Region": "<p> The Amazon Web Services Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
        "UpdateEncryption$ResourceId": "<p> An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption. </p>",
        "UpdateEncryption$RoleArn": "<p> The ARN of the role that you created during setup (when you set up MediaConnect as a trusted entity).</p>",
        "UpdateEncryption$SecretArn": "<p> The ARN of the secret that you created in Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.</p>",
        "UpdateEncryption$Url": "<p> The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
        "UpdateFlowEntitlementRequest$Description": "<p> A description of the entitlement. This description appears only on the MediaConnect console and will not be seen by the subscriber or end user.</p>",
        "UpdateFlowEntitlementResponse$FlowArn": "<p> The ARN of the flow that this entitlement was granted on.</p>",
        "UpdateFlowMediaStreamRequest$Description": "<p>A description that can help you quickly identify what your media stream is used for. </p>",
        "UpdateFlowMediaStreamRequest$MediaStreamName": "<p> The media stream that you updated.</p>",
        "UpdateFlowMediaStreamRequest$VideoFormat": "<p>The resolution of the video. </p>",
        "UpdateFlowMediaStreamResponse$FlowArn": "<p>The ARN of the flow that is associated with the media stream that you updated. </p>",
        "UpdateFlowOutputRequest$Description": "<p> A description of the output. This description appears only on the MediaConnect console and will not be seen by the end user.</p>",
        "UpdateFlowOutputRequest$Destination": "<p> The IP address where you want to send the output.</p>",
        "UpdateFlowOutputRequest$RemoteId": "<p> The remote ID for the Zixi-pull stream.</p>",
        "UpdateFlowOutputRequest$SenderIpAddress": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
        "UpdateFlowOutputRequest$StreamId": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
        "UpdateFlowOutputRequest$NdiProgramName": "<p> A suffix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect uses the output name. </p>",
        "UpdateFlowOutputResponse$FlowArn": "<p> The ARN of the flow that is associated with the updated output.</p>",
        "UpdateFlowSourceRequest$Description": "<p>A description of the source. This description is not visible outside of the current Amazon Web Services account. </p>",
        "UpdateFlowSourceRequest$SenderIpAddress": "<p>The IP address that the flow communicates with to initiate connection with the sender. </p>",
        "UpdateFlowSourceRequest$SourceListenerAddress": "<p>The source IP or domain name for SRT-caller protocol. </p>",
        "UpdateFlowSourceRequest$StreamId": "<p>The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams. </p>",
        "UpdateFlowSourceRequest$VpcInterfaceName": "<p>The name of the VPC interface that you want to send your output to.</p>",
        "UpdateFlowSourceRequest$WhitelistCidr": "<p>The range of IP addresses that are allowed to contribute content to your source. Format the IP addresses as a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16. </p>",
        "UpdateFlowSourceResponse$FlowArn": "<p>The ARN of the flow that you was updated. </p>",
        "UpdateGatewayInstanceResponse$GatewayInstanceArn": "<p>The ARN of the instance that was updated. </p>",
        "UpdateMaintenance$MaintenanceScheduledDate": "<p> A scheduled date in ISO UTC format when the maintenance will happen. Use YYYY-MM-DD format. Example: 2021-01-30.</p>",
        "UpdateMaintenance$MaintenanceStartHour": "<p> UTC time when the maintenance will happen. Use 24-hour HH:MM format. Minutes must be 00. Example: 13:00. The default value is 02:00.</p>",
        "VpcInterface$Name": "<p> Immutable and has to be a unique against other VpcInterfaces in this Flow.</p>",
        "VpcInterface$RoleArn": "<p> A role Arn MediaConnect can assume to create ENIs in your account.</p>",
        "VpcInterface$SubnetId": "<p> Subnet must be in the AZ of the Flow. </p>",
        "VpcInterfaceAttachment$VpcInterfaceName": "<p> The name of the VPC interface to use for this resource.</p>",
        "VpcInterfaceRequest$Name": "<p>The name for the VPC interface. This name must be unique within the flow. </p>",
        "VpcInterfaceRequest$RoleArn": "<p>The Amazon Resource Name (ARN) of the role that you created when you set up MediaConnect as a trusted service. </p>",
        "VpcInterfaceRequest$SubnetId": "<p> The subnet IDs that you want to use for your VPC interface. A range of IP addresses in your VPC. When you create your VPC, you specify a range of IPv4 addresses for the VPC in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16. This is the primary CIDR block for your VPC. When you create a subnet for your VPC, you specify the CIDR block for the subnet, which is a subset of the VPC CIDR block. The subnets that you use across all VPC interfaces on the flow must be in the same Availability Zone as the flow. </p>",
        "__listOfString$member": null,
        "__mapOfString$key": null,
        "__mapOfString$value": null
      }
    },
    "SyntheticTimestamp_date_time": {
      "base": null,
      "refs": {
        "DescribeFlowSourceMetadataResponse$Timestamp": "<p> The timestamp of the most recent change in metadata for this flow’s source.</p>",
        "ThumbnailDetails$Timestamp": "<p> The timestamp of when thumbnail was generated.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "Tcs": {
      "base": null,
      "refs": {
        "Fmtp$Tcs": "<p>The transfer characteristic system (TCS) that is used in the video. </p>",
        "FmtpRequest$Tcs": "<p> The transfer characteristic system (TCS) that is used in the video.</p>"
      }
    },
    "ThumbnailDetails": {
      "base": "<p> The details of the thumbnail, including thumbnail base64 string, timecode and the time when thumbnail was generated.</p>",
      "refs": {
        "DescribeFlowSourceThumbnailResponse$ThumbnailDetails": "<p>The details of the thumbnail, including thumbnail base64 string, timecode and the time when thumbnail was generated. </p>"
      }
    },
    "ThumbnailState": {
      "base": null,
      "refs": {
        "MonitoringConfig$ThumbnailState": "<p> Indicates whether thumbnails are enabled or disabled.</p>"
      }
    },
    "TooManyRequestsException": {
      "base": "<p>The request was denied due to request throttling. </p>",
      "refs": {
      }
    },
    "Transport": {
      "base": "<p> Attributes related to the transport stream that are used in a source or output.</p>",
      "refs": {
        "Output$Transport": "<p> Attributes related to the transport stream that are used in the output.</p>",
        "Source$Transport": "<p> Attributes related to the transport stream that are used in the source.</p>"
      }
    },
    "TransportMediaInfo": {
      "base": "<p> The metadata of the transport stream in the current flow's source.</p>",
      "refs": {
        "DescribeFlowSourceMetadataResponse$TransportMediaInfo": "<p> Information about the flow's transport media. </p>"
      }
    },
    "TransportStream": {
      "base": "<p> The metadata of an elementary transport stream.</p>",
      "refs": {
        "__listOfTransportStream$member": null
      }
    },
    "TransportStreamProgram": {
      "base": "<p> The metadata of a single transport stream program.</p>",
      "refs": {
        "__listOfTransportStreamProgram$member": null
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeFlowSourceRequest": {
      "base": "<p> Update the flow source of the bridge. </p>",
      "refs": {
        "UpdateBridgeSourceRequest$FlowSource": "<p> The name of the flow that you want to update.</p>"
      }
    },
    "UpdateBridgeFlowSourceRequestFlowArnString": {
      "base": null,
      "refs": {
        "UpdateBridgeFlowSourceRequest$FlowArn": "<p> The Amazon Resource Name (ARN) that identifies the MediaConnect resource from which to delete tags.</p>"
      }
    },
    "UpdateBridgeNetworkOutputRequest": {
      "base": "<p>Update an existing network output. </p>",
      "refs": {
        "UpdateBridgeOutputRequest$NetworkOutput": "<p> The network of the bridge output. </p>"
      }
    },
    "UpdateBridgeNetworkSourceRequest": {
      "base": "<p> Update the network source of the bridge.</p>",
      "refs": {
        "UpdateBridgeSourceRequest$NetworkSource": "<p> The network for the bridge source. </p>"
      }
    },
    "UpdateBridgeOutputRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeOutputRequestBridgeArnString": {
      "base": null,
      "refs": {
        "UpdateBridgeOutputRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>"
      }
    },
    "UpdateBridgeOutputResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeRequestBridgeArnString": {
      "base": null,
      "refs": {
        "UpdateBridgeRequest$BridgeArn": "<p> TheAmazon Resource Name (ARN) of the bridge that you want to update. </p>"
      }
    },
    "UpdateBridgeResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeSourceRequestBridgeArnString": {
      "base": null,
      "refs": {
        "UpdateBridgeSourceRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>"
      }
    },
    "UpdateBridgeSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeStateRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateBridgeStateRequestBridgeArnString": {
      "base": null,
      "refs": {
        "UpdateBridgeStateRequest$BridgeArn": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update the state of. </p>"
      }
    },
    "UpdateBridgeStateResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateEgressGatewayBridgeRequest": {
      "base": "<p> Update an existing egress-type bridge.</p>",
      "refs": {
        "UpdateBridgeRequest$EgressGatewayBridge": "<p> A cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>"
      }
    },
    "UpdateEncryption": {
      "base": "<p> Information about the encryption of the flow.</p>",
      "refs": {
        "UpdateFlowEntitlementRequest$Encryption": "<p> The type of encryption that will be used on the output associated with this entitlement. Allowable encryption types: static-key, speke.</p>",
        "UpdateFlowOutputRequest$Encryption": "<p> The type of key used for the encryption. If no <code>keyType</code> is provided, the service will use the default setting (static-key). Allowable encryption types: static-key.</p>",
        "UpdateFlowSourceRequest$Decryption": "<p>The type of encryption that is used on the content ingested from the source. </p>"
      }
    },
    "UpdateFailoverConfig": {
      "base": "<p> The settings for source failover.</p>",
      "refs": {
        "UpdateBridgeRequest$SourceFailoverConfig": "<p> The settings for source failover. </p>",
        "UpdateFlowRequest$SourceFailoverConfig": "<p> The settings for source failover. </p>"
      }
    },
    "UpdateFlowEntitlementRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowEntitlementRequestEntitlementArnString": {
      "base": null,
      "refs": {
        "UpdateFlowEntitlementRequest$EntitlementArn": "<p> The Amazon Resource Name (ARN) of the entitlement that you want to update.</p>"
      }
    },
    "UpdateFlowEntitlementRequestFlowArnString": {
      "base": null,
      "refs": {
        "UpdateFlowEntitlementRequest$FlowArn": "<p> The ARN of the flow that is associated with the entitlement that you want to update.</p>"
      }
    },
    "UpdateFlowEntitlementResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowMediaStreamRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowMediaStreamRequestFlowArnString": {
      "base": null,
      "refs": {
        "UpdateFlowMediaStreamRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that is associated with the media stream that you updated.</p>"
      }
    },
    "UpdateFlowMediaStreamResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowOutputRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowOutputRequestFlowArnString": {
      "base": null,
      "refs": {
        "UpdateFlowOutputRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that is associated with the output that you want to update.</p>"
      }
    },
    "UpdateFlowOutputRequestOutputArnString": {
      "base": null,
      "refs": {
        "UpdateFlowOutputRequest$OutputArn": "<p> The ARN of the output that you want to update.</p>"
      }
    },
    "UpdateFlowOutputResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowRequestFlowArnString": {
      "base": null,
      "refs": {
        "UpdateFlowRequest$FlowArn": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>"
      }
    },
    "UpdateFlowResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFlowSourceRequestEntitlementArnString": {
      "base": null,
      "refs": {
        "UpdateFlowSourceRequest$EntitlementArn": "<p>The Amazon Resource Name (ARN) of the entitlement that allows you to subscribe to the flow. The entitlement is set by the content originator, and the ARN is generated as part of the originator's flow. </p>"
      }
    },
    "UpdateFlowSourceRequestFlowArnString": {
      "base": null,
      "refs": {
        "UpdateFlowSourceRequest$FlowArn": "<p> The ARN of the flow that you want to update. </p>"
      }
    },
    "UpdateFlowSourceRequestSourceArnString": {
      "base": null,
      "refs": {
        "UpdateFlowSourceRequest$SourceArn": "<p>The ARN of the source that you want to update. </p>"
      }
    },
    "UpdateFlowSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateGatewayBridgeSourceRequest": {
      "base": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>",
      "refs": {
        "UpdateFlowSourceRequest$GatewayBridgeSource": "<p>The source configuration for cloud flows receiving a stream from a bridge. </p>"
      }
    },
    "UpdateGatewayBridgeSourceRequestBridgeArnString": {
      "base": null,
      "refs": {
        "UpdateGatewayBridgeSourceRequest$BridgeArn": "<p> The ARN of the bridge feeding this flow.</p>"
      }
    },
    "UpdateGatewayInstanceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateGatewayInstanceRequestGatewayInstanceArnString": {
      "base": null,
      "refs": {
        "UpdateGatewayInstanceRequest$GatewayInstanceArn": "<p>The Amazon Resource Name (ARN) of the gateway instance that you want to update. </p>"
      }
    },
    "UpdateGatewayInstanceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateIngressGatewayBridgeRequest": {
      "base": "<p> Update an existing ingress-type bridge. </p>",
      "refs": {
        "UpdateBridgeRequest$IngressGatewayBridge": "<p> A ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>"
      }
    },
    "UpdateMaintenance": {
      "base": "<p> Update maintenance setting for a flow.</p>",
      "refs": {
        "UpdateFlowRequest$Maintenance": "<p> The maintenance setting of the flow. </p>"
      }
    },
    "VideoMonitoringSetting": {
      "base": "<p>Specifies the configuration for video stream metrics monitoring.</p>",
      "refs": {
        "__listOfVideoMonitoringSetting$member": null
      }
    },
    "VpcInterface": {
      "base": "<p> The settings for a VPC source.</p>",
      "refs": {
        "__listOfVpcInterface$member": null
      }
    },
    "VpcInterfaceAttachment": {
      "base": "<p> The settings for attaching a VPC interface to an resource. </p>",
      "refs": {
        "AddBridgeFlowSourceRequest$FlowVpcInterfaceAttachment": "<p>The name of the VPC interface attachment to use for this source. </p>",
        "AddOutputRequest$VpcInterfaceAttachment": "<p> The name of the VPC interface attachment to use for this output.</p>",
        "BridgeFlowSource$FlowVpcInterfaceAttachment": "<p> The name of the VPC interface attachment to use for this source.</p>",
        "GatewayBridgeSource$VpcInterfaceAttachment": "<p> The name of the VPC interface attachment to use for this bridge source.</p>",
        "Output$VpcInterfaceAttachment": "<p> The name of the VPC interface attachment to use for this output.</p>",
        "SetGatewayBridgeSourceRequest$VpcInterfaceAttachment": "<p> The name of the VPC interface attachment to use for this bridge source.</p>",
        "UpdateBridgeFlowSourceRequest$FlowVpcInterfaceAttachment": "<p>The name of the VPC interface attachment to use for this source. </p>",
        "UpdateFlowOutputRequest$VpcInterfaceAttachment": "<p> The name of the VPC interface attachment to use for this output.</p>",
        "UpdateGatewayBridgeSourceRequest$VpcInterfaceAttachment": "<p> The name of the VPC interface attachment to use for this bridge source.</p>"
      }
    },
    "VpcInterfaceRequest": {
      "base": "<p>The details of the VPC interfaces that you want to add to the flow. </p>",
      "refs": {
        "__listOfVpcInterfaceRequest$member": null
      }
    },
    "__listOfAddBridgeOutputRequest": {
      "base": null,
      "refs": {
        "AddBridgeOutputsRequest$Outputs": "<p> The outputs that you want to add to this bridge.</p>",
        "CreateBridgeRequest$Outputs": "<p> The outputs that you want to add to this bridge.</p>"
      }
    },
    "__listOfAddBridgeSourceRequest": {
      "base": null,
      "refs": {
        "AddBridgeSourcesRequest$Sources": "<p> The sources that you want to add to this bridge.</p>",
        "CreateBridgeRequest$Sources": "<p> The sources that you want to add to this bridge.</p>"
      }
    },
    "__listOfAddMediaStreamRequest": {
      "base": null,
      "refs": {
        "AddFlowMediaStreamsRequest$MediaStreams": "<p> The media streams that you want to add to the flow.</p>",
        "CreateFlowRequest$MediaStreams": "<p> The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.</p>"
      }
    },
    "__listOfAddOutputRequest": {
      "base": null,
      "refs": {
        "AddFlowOutputsRequest$Outputs": "<p> A list of outputs that you want to add to the flow.</p>",
        "CreateFlowRequest$Outputs": "<p> The outputs that you want to add to this flow.</p>"
      }
    },
    "__listOfAudioMonitoringSetting": {
      "base": null,
      "refs": {
        "MonitoringConfig$AudioMonitoringSettings": "<p> Contains the settings for audio stream metrics monitoring.</p>"
      }
    },
    "__listOfBridgeOutput": {
      "base": null,
      "refs": {
        "AddBridgeOutputsResponse$Outputs": "<p> The outputs that you added to this bridge.</p>",
        "Bridge$Outputs": "<p> The outputs on this bridge.</p>"
      }
    },
    "__listOfBridgeSource": {
      "base": null,
      "refs": {
        "AddBridgeSourcesResponse$Sources": "<p> The sources that you added to this bridge.</p>",
        "Bridge$Sources": "<p> The sources on this bridge.</p>"
      }
    },
    "__listOfDestinationConfiguration": {
      "base": null,
      "refs": {
        "MediaStreamOutputConfiguration$DestinationConfigurations": "<p> The transport parameters that are associated with each outbound media stream.</p>"
      }
    },
    "__listOfDestinationConfigurationRequest": {
      "base": null,
      "refs": {
        "MediaStreamOutputConfigurationRequest$DestinationConfigurations": "<p> The media streams that you want to associate with the output. </p>"
      }
    },
    "__listOfEntitlement": {
      "base": null,
      "refs": {
        "Flow$Entitlements": "<p> The entitlements in this flow.</p>",
        "GrantFlowEntitlementsResponse$Entitlements": "<p> The entitlements that were just granted.</p>"
      }
    },
    "__listOfGatewayNetwork": {
      "base": null,
      "refs": {
        "CreateGatewayRequest$Networks": "<p> The list of networks that you want to add to the gateway.</p>",
        "Gateway$Networks": "<p> The list of networks in the gateway.</p>"
      }
    },
    "__listOfGrantEntitlementRequest": {
      "base": null,
      "refs": {
        "CreateFlowRequest$Entitlements": "<p> The entitlements that you want to grant on a flow.</p>",
        "GrantFlowEntitlementsRequest$Entitlements": "<p> The list of entitlements that you want to grant.</p>"
      }
    },
    "__listOfInputConfiguration": {
      "base": null,
      "refs": {
        "MediaStreamSourceConfiguration$InputConfigurations": "<p>The media streams that you want to associate with the source. </p>"
      }
    },
    "__listOfInputConfigurationRequest": {
      "base": null,
      "refs": {
        "MediaStreamSourceConfigurationRequest$InputConfigurations": "<p>The media streams that you want to associate with the source. </p>"
      }
    },
    "__listOfInteger": {
      "base": null,
      "refs": {
        "Output$BridgePorts": "<p> The bridge output ports currently in use.</p>"
      }
    },
    "__listOfListedBridge": {
      "base": null,
      "refs": {
        "ListBridgesResponse$Bridges": "<p> A list of bridge summaries.</p>"
      }
    },
    "__listOfListedEntitlement": {
      "base": null,
      "refs": {
        "ListEntitlementsResponse$Entitlements": "<p>A list of entitlements that have been granted to you from other Amazon Web Services accounts. </p>"
      }
    },
    "__listOfListedFlow": {
      "base": null,
      "refs": {
        "ListFlowsResponse$Flows": "<p> A list of flow summaries.</p>"
      }
    },
    "__listOfListedGateway": {
      "base": null,
      "refs": {
        "ListGatewaysResponse$Gateways": "<p> A list of gateway summaries.</p>"
      }
    },
    "__listOfListedGatewayInstance": {
      "base": null,
      "refs": {
        "ListGatewayInstancesResponse$Instances": "<p> A list of instance summaries.</p>"
      }
    },
    "__listOfMediaStream": {
      "base": null,
      "refs": {
        "AddFlowMediaStreamsResponse$MediaStreams": "<p> The media streams that you added to the flow.</p>",
        "Flow$MediaStreams": "<p> The media streams that are associated with the flow. After you associate a media stream with a source, you can also associate it with outputs on the flow.</p>"
      }
    },
    "__listOfMediaStreamOutputConfiguration": {
      "base": null,
      "refs": {
        "Output$MediaStreamOutputConfigurations": "<p> The configuration for each media stream that is associated with the output.</p>"
      }
    },
    "__listOfMediaStreamOutputConfigurationRequest": {
      "base": null,
      "refs": {
        "AddOutputRequest$MediaStreamOutputConfigurations": "<p> The media streams that are associated with the output, and the parameters for those associations.</p>",
        "UpdateFlowOutputRequest$MediaStreamOutputConfigurations": "<p> The media streams that are associated with the output, and the parameters for those associations.</p>"
      }
    },
    "__listOfMediaStreamSourceConfiguration": {
      "base": null,
      "refs": {
        "Source$MediaStreamSourceConfigurations": "<p> The media streams that are associated with the source, and the parameters for those associations.</p>"
      }
    },
    "__listOfMediaStreamSourceConfigurationRequest": {
      "base": null,
      "refs": {
        "SetSourceRequest$MediaStreamSourceConfigurations": "<p> The media streams that are associated with the source, and the parameters for those associations.</p>",
        "UpdateFlowSourceRequest$MediaStreamSourceConfigurations": "<p>The media stream that is associated with the source, and the parameters for that association. </p>"
      }
    },
    "__listOfMessageDetail": {
      "base": null,
      "refs": {
        "Bridge$BridgeMessages": "<p> Messages with details about the bridge. </p>",
        "DescribeFlowSourceMetadataResponse$Messages": "<p> Provides a status code and message regarding issues found with the flow source metadata.</p>",
        "Gateway$GatewayMessages": "<p>Messages with information about the gateway. </p>",
        "GatewayInstance$InstanceMessages": "<p> Messages with information about the gateway. </p>",
        "ThumbnailDetails$ThumbnailMessages": "<p> Status code and messages about the flow source thumbnail.</p>"
      }
    },
    "__listOfNdiDiscoveryServerConfig": {
      "base": null,
      "refs": {
        "NdiConfig$NdiDiscoveryServers": "<p>A list of up to three NDI discovery server configurations. While not required by the API, this configuration is necessary for NDI functionality to work properly. </p>"
      }
    },
    "__listOfOffering": {
      "base": null,
      "refs": {
        "ListOfferingsResponse$Offerings": "<p> A list of offerings that are available to this account in the current Amazon Web Services Region.</p>"
      }
    },
    "__listOfOutput": {
      "base": null,
      "refs": {
        "AddFlowOutputsResponse$Outputs": "<p> The details of the newly added outputs.</p>",
        "Flow$Outputs": "<p> The outputs in this flow.</p>"
      }
    },
    "__listOfReservation": {
      "base": null,
      "refs": {
        "ListReservationsResponse$Reservations": "<p> A list of all reservations that have been purchased by this account in the current Amazon Web Services Region. </p>"
      }
    },
    "__listOfSetSourceRequest": {
      "base": null,
      "refs": {
        "AddFlowSourcesRequest$Sources": "<p> A list of sources that you want to add to the flow.</p>",
        "CreateFlowRequest$Sources": "<p>The sources that are assigned to the flow. </p>"
      }
    },
    "__listOfSource": {
      "base": null,
      "refs": {
        "AddFlowSourcesResponse$Sources": "<p> The details of the newly added sources.</p>",
        "Flow$Sources": "<p>The settings for the sources that are assigned to the flow. </p>"
      }
    },
    "__listOfString": {
      "base": null,
      "refs": {
        "AddOutputRequest$CidrAllowList": "<p> The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
        "CreateGatewayRequest$EgressCidrBlocks": "<p> The range of IP addresses that are allowed to contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
        "Entitlement$Subscribers": "<p> The Amazon Web Services account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source. </p>",
        "Gateway$EgressCidrBlocks": "<p> The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
        "GrantEntitlementRequest$Subscribers": "<p> The Amazon Web Services account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.</p>",
        "Messages$Errors": "<p> A list of errors that might have been generated from processes on this flow.</p>",
        "RemoveFlowVpcInterfaceResponse$NonDeletedNetworkInterfaceIds": "<p> IDs of network interfaces associated with the removed VPC interface that MediaConnect was unable to remove.</p>",
        "Transport$CidrAllowList": "<p> The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16</p>",
        "UntagResourceRequest$TagKeys": "<p>The keys of the tags to be removed. </p>",
        "UpdateFlowEntitlementRequest$Subscribers": "<p> The Amazon Web Services account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.</p>",
        "UpdateFlowOutputRequest$CidrAllowList": "<p> The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
        "VpcInterface$NetworkInterfaceIds": "<p> IDs of the network interfaces created in customer's account by MediaConnect.</p>",
        "VpcInterface$SecurityGroupIds": "<p> Security Group IDs to be used on ENI.</p>",
        "VpcInterfaceRequest$SecurityGroupIds": "<p>A virtual firewall to control inbound and outbound traffic. </p>"
      }
    },
    "__listOfTransportStream": {
      "base": null,
      "refs": {
        "TransportStreamProgram$Streams": "<p> The list of elementary transport streams in the program. The list includes video, audio, and data streams.</p>"
      }
    },
    "__listOfTransportStreamProgram": {
      "base": null,
      "refs": {
        "TransportMediaInfo$Programs": "<p> The list of transport stream programs in the current flow's source.</p>"
      }
    },
    "__listOfVideoMonitoringSetting": {
      "base": null,
      "refs": {
        "MonitoringConfig$VideoMonitoringSettings": "<p> Contains the settings for video stream metrics monitoring.</p>"
      }
    },
    "__listOfVpcInterface": {
      "base": null,
      "refs": {
        "AddFlowVpcInterfacesResponse$VpcInterfaces": "<p> The details of the newly added VPC interfaces.</p>",
        "Flow$VpcInterfaces": "<p> The VPC Interfaces for this flow.</p>"
      }
    },
    "__listOfVpcInterfaceRequest": {
      "base": null,
      "refs": {
        "AddFlowVpcInterfacesRequest$VpcInterfaces": "<p> A list of VPC interfaces that you want to add to the flow.</p>",
        "CreateFlowRequest$VpcInterfaces": "<p> The VPC interfaces you want on the flow.</p>"
      }
    },
    "__mapOfString": {
      "base": null,
      "refs": {
        "ListTagsForResourceResponse$Tags": "<p> A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
        "TagResourceRequest$Tags": "<p> A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>"
      }
    }
  }
}
