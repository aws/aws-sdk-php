{
  "version": "2.0",
  "service": "<p><fullname>AWS Partner Central API for Selling</fullname> <p> <b>AWS Partner Central API for Selling Reference Guide</b> </p> <p>This Amazon Web Services (AWS) Partner Central API reference is designed to help <a href=\"http://aws.amazon.com/partners/programs/\">AWS Partners</a> integrate Customer Relationship Management (CRM) systems with AWS Partner Central. Partners can automate interactions with AWS Partner Central, which helps to ensure effective engagements in joint business activities.</p> <p>The API provides standard AWS API functionality. Access it by either using API <a href=\"https://docs.aws.amazon.com/partner-central/latest/selling-api/API_Operations.html\">Actions</a> or by using an AWS SDK that's tailored to your programming language or platform. For more information, see <a href=\"http://aws.amazon.com/getting-started\">Getting Started with AWS</a> and <a href=\"http://aws.amazon.com/developer/tools/\">Tools to Build on AWS</a>.</p> <p class=\"title\"> <b>Features offered by AWS Partner Central API</b> </p> <ol> <li> <p> <b>Opportunity management:</b> Manages coselling opportunities through API actions such as <code>CreateOpportunity</code>, <code>UpdateOpportunity</code>, <code>ListOpportunities</code>, <code>GetOpportunity</code>, and <code>AssignOpportunity</code>.</p> </li> <li> <p> <b>AWS referral management:</b> Manages referrals shared by AWS using actions such as <code>ListEngagementInvitations</code>, <code>GetEngagementInvitation</code>, <code>StartEngagementByAcceptingInvitation</code>, and <code>RejectEngagementInvitation</code>.</p> </li> <li> <p> <b>Entity association:</b> Associates related entities such as <i>AWS Products</i>, <i>Partner Solutions</i>, and <i>AWS Marketplace Private Offers</i> with opportunities using the actions <code>AssociateOpportunity</code>, and <code>DisassociateOpportunity</code>.</p> </li> <li> <p> <b>View AWS opportunity details:</b> Retrieves real-time summaries of AWS opportunities using the <code>GetAWSOpportunitySummary</code> action.</p> </li> <li> <p> <b>List solutions:</b> Provides list APIs for listing partner offers using <code>ListSolutions</code>.</p> </li> <li> <p> <b>Event subscription:</b> Subscribe to real-time opportunity updates through AWS EventBridge by using actions such as <i>Opportunity Created</i>, <i>Opportunity Updated</i>, <i>Engagement Invitation Accepted</i>, <i>Engagement Invitation Rejected</i>, and <i>Engagement Invitation Created</i>.</p> </li> </ol></p>",
  "operations": {
    "AcceptEngagementInvitation": "<p> Use the <code>AcceptEngagementInvitation</code> action to accept an engagement invitation shared by AWS. Accepting the invitation indicates your willingness to participate in the engagement, granting you access to all engagement-related data. </p>",
    "AssignOpportunity": "<p>Enables you to reassign an existing <code>Opportunity</code> to another user within your Partner Central account. The specified user receives the opportunity, and it appears on their Partner Central dashboard, allowing them to take necessary actions or proceed with the opportunity.</p> <p>This is useful for distributing opportunities to the appropriate team members or departments within your organization, ensuring that each opportunity is handled by the right person. By default, the opportunity owner is the one who creates it. Currently, there's no API to enumerate the list of available users.</p>",
    "AssociateOpportunity": "<p>Enables you to create a formal association between an <code>Opportunity</code> and various related entities, enriching the context and details of the opportunity for better collaboration and decision making. You can associate an opportunity with the following entity types:</p> <ul> <li> <p>Partner Solution: A software product or consulting practice created and delivered by Partners. Partner Solutions help customers address business challenges using Amazon Web Services services.</p> </li> <li> <p>Amazon Web Services Products: Amazon Web Services offers many products and services that provide scalable, reliable, and cost-effective infrastructure solutions. For the latest list of Amazon Web Services products, see <a href=\"https://github.com/aws-samples/partner-crm-integration-samples/blob/main/resources/aws_products.json\">Amazon Web Services products</a>.</p> </li> <li> <p>Amazon Web Services Marketplace private offer: Allows Amazon Web Services Marketplace sellers to extend custom pricing and terms to individual Amazon Web Services customers. Sellers can negotiate custom prices, payment schedules, and end user license terms through private offers, enabling Amazon Web Services customers to acquire software solutions tailored to their specific needs. For more information, see <a href=\"https://docs.aws.amazon.com/marketplace/latest/buyerguide/buyer-private-offers.html\">Private offers in Amazon Web Services Marketplace</a>.</p> </li> </ul> <p>To obtain identifiers for these entities, use the following methods:</p> <ul> <li> <p>Solution: Use the <code>ListSolutions</code> operation.</p> </li> <li> <p>AWS Products: For the latest list of Amazon Web Services products, see <a href=\"https://github.com/aws-samples/partner-crm-integration-samples/blob/main/resources/aws_products.json\">Amazon Web Services products</a>.</p> </li> <li> <p>Amazon Web Services Marketplace private offer: Use the <a href=\"https://docs.aws.amazon.com/marketplace/latest/APIReference/catalog-apis.html\">Using the Amazon Web Services Marketplace Catalog API</a> to list entities. Specifically, use the <code>ListEntities</code> operation to retrieve a list of private offers. The request returns the details of available private offers. For more information, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/API_ListEntities.html\">ListEntities</a>.</p> </li> </ul>",
    "CreateEngagement": "<p> The <code>CreateEngagement</code> action allows you to create an <code>Engagement</code>, which serves as a collaborative space between different parties such as AWS Partners and AWS Sellers. This action automatically adds the caller's AWS account as an active member of the newly created <code>Engagement</code>. </p>",
    "CreateEngagementInvitation": "<p> This action creates an invitation from a sender to a single receiver to join an engagement. </p>",
    "CreateOpportunity": "<p>Creates an <code>Opportunity</code> record in Partner Central. Use this operation to create a potential business opportunity for submission to Amazon Web Services. Creating an opportunity sets <code>Lifecycle.ReviewStatus</code> to <code>Pending Submission</code>.</p> <p>To submit an opportunity, follow these steps:</p> <ol> <li> <p>To create the opportunity, use <code>CreateOpportunity</code>.</p> </li> <li> <p>To associate a solution with the opportunity, use <code>AssociateOpportunity</code>.</p> </li> <li> <p>To submit the opportunity, use <code>StartEngagementFromOpportunityTask</code>.</p> </li> </ol> <p>After submission, you can't edit the opportunity until the review is complete. But opportunities in the <code>Pending Submission</code> state must have complete details. You can update the opportunity while it's in the <code>Pending Submission</code> state.</p> <p>There's a set of mandatory fields to create opportunities, but consider providing optional fields to enrich the opportunity record.</p>",
    "CreateResourceSnapshot": "<p> This action allows you to create an immutable snapshot of a specific resource, such as an opportunity, within the context of an engagement. The snapshot captures a subset of the resource's data based on the schema defined by the provided template.</p>",
    "CreateResourceSnapshotJob": "<p> Use this action to create a job to generate a snapshot of the specified resource within an engagement. It initiates an asynchronous process to create a resource snapshot. The job creates a new snapshot only if the resource state has changed, adhering to the same access control and immutability rules as direct snapshot creation. </p>",
    "DeleteResourceSnapshotJob": "<p> Use this action to deletes a previously created resource snapshot job. The job must be in a stopped state before it can be deleted. </p>",
    "DisassociateOpportunity": "<p>Allows you to remove an existing association between an <code>Opportunity</code> and related entities, such as a Partner Solution, Amazon Web Services product, or an Amazon Web Services Marketplace offer. This operation is the counterpart to <code>AssociateOpportunity</code>, and it provides flexibility to manage associations as business needs change.</p> <p>Use this operation to update the associations of an <code>Opportunity</code> due to changes in the related entities, or if an association was made in error. Ensuring accurate associations helps maintain clarity and accuracy to track and manage business opportunities. When you replace an entity, first attach the new entity and then disassociate the one to be removed, especially if it's the last remaining entity that's required.</p>",
    "GetAwsOpportunitySummary": "<p>Retrieves a summary of an AWS Opportunity. This summary includes high-level details about the opportunity sourced from AWS, such as lifecycle information, customer details, and involvement type. It is useful for tracking updates on the AWS opportunity corresponding to an opportunity in the partner's account.</p>",
    "GetEngagement": "<p> Use this action to retrieve the engagement record for a given <code>EngagementIdentifier</code>. </p>",
    "GetEngagementInvitation": "<p>Retrieves the details of an engagement invitation shared by AWS with a partner. The information includes aspects such as customer, project details, and lifecycle information. To connect an engagement invitation with an opportunity, match the invitationâ€™s <code>Payload.Project.Title</code> with opportunity <code>Project.Title</code>.</p>",
    "GetOpportunity": "<p>Fetches the <code>Opportunity</code> record from Partner Central by a given <code>Identifier</code>.</p> <p>Use the <code>ListOpportunities</code> action or the event notification (from Amazon EventBridge) to obtain this identifier.</p>",
    "GetResourceSnapshot": "<p>Use this action to retrieve a specific snapshot record.</p>",
    "GetResourceSnapshotJob": "<p> Use this action to retrieves information about a specific resource snapshot job. </p>",
    "GetSellingSystemSettings": "<p>Retrieves the currently set system settings, which include the IAM Role used for resource snapshot jobs.</p>",
    "ListEngagementByAcceptingInvitationTasks": "<p> Lists all in-progress, completed, or failed StartEngagementByAcceptingInvitationTask tasks that were initiated by the caller's account. </p>",
    "ListEngagementFromOpportunityTasks": "<p> Lists all in-progress, completed, or failed <code>EngagementFromOpportunity</code> tasks that were initiated by the caller's account. </p>",
    "ListEngagementInvitations": "<p>Retrieves a list of engagement invitations sent to the partner. This allows partners to view all pending or past engagement invitations, helping them track opportunities shared by AWS.</p>",
    "ListEngagementMembers": "<p> Retrieves the details of member partners in an engagement. This operation can only be invoked by members of the engagement. The <code>ListEngagementMembers</code> operation allows you to fetch information about the members of a specific engagement. This action is restricted to members of the engagement being queried. </p>",
    "ListEngagementResourceAssociations": "<p> Lists the associations between resources and engagements where the caller is a member and has at least one snapshot in the engagement. </p>",
    "ListEngagements": "<p> This action allows users to retrieve a list of engagement records from Partner Central. This action can be used to manage and track various engagements across different stages of the partner selling process. </p>",
    "ListOpportunities": "<p>This request accepts a list of filters that retrieve opportunity subsets as well as sort options. This feature is available to partners from <a href=\"https://partnercentral.awspartner.com/\">Partner Central</a> using the <code>ListOpportunities</code> API action.</p> <p>To synchronize your system with Amazon Web Services, only list the opportunities that were newly created or updated. We recommend you rely on events emitted by the service into your Amazon Web Services accountâ€™s Amazon EventBridge default event bus, you can also use the <code>ListOpportunities</code> action.</p> <p>We recommend the following approach:</p> <ol> <li> <p>Find the latest <code>LastModifiedDate</code> that you stored, and only use the values that came from Amazon Web Services. Donâ€™t use values generated by your system.</p> </li> <li> <p>When you send a <code>ListOpportunities</code> request, submit the date in ISO 8601 format in the <code>AfterLastModifiedDate</code> filter.</p> </li> <li> <p>Amazon Web Services only returns opportunities created or updated on or after that date and time. Use <code>NextToken</code> to iterate over all pages.</p> </li> </ol>",
    "ListResourceSnapshotJobs": "<p> Lists resource snapshot jobs owned by the customer. This operation supports various filtering scenarios, including listing all jobs owned by the caller, jobs for a specific engagement, jobs with a specific status, or any combination of these filters. </p>",
    "ListResourceSnapshots": "<p> Retrieves a list of resource view snapshots based on specified criteria. </p>",
    "ListSolutions": "<p>Retrieves a list of Partner Solutions that the partner registered on Partner Central. This API is used to generate a list of solutions that an end user selects from for association with an opportunity.</p>",
    "PutSellingSystemSettings": "<p>Updates the currently set system settings, which include the IAM Role used for resource snapshot jobs.</p>",
    "RejectEngagementInvitation": "<p>This action rejects an <code>EngagementInvitation</code> that AWS shared. Rejecting an invitation indicates that the partner doesn't want to pursue the opportunity, and all related data will become inaccessible thereafter.</p>",
    "StartEngagementByAcceptingInvitationTask": "<p>This action starts the engagement by accepting an <code>EngagementInvitation</code>. The task is asynchronous and involves the following steps: accepting the invitation, creating an opportunity in the partnerâ€™s account from the AWS opportunity, and copying details for tracking. When completed, an <code>Opportunity Created</code> event is generated, indicating that the opportunity has been successfully created in the partner's account.</p>",
    "StartEngagementFromOpportunityTask": "<p>This action initiates the engagement process from an existing opportunity by accepting the engagement invitation and creating a corresponding opportunity in the partnerâ€™s system. Similar to <code>StartEngagementByAcceptingInvitationTask</code>, this action is asynchronous and performs multiple steps before completion.</p>",
    "StartResourceSnapshotJob": "<p> Starts a resource snapshot job that has been previously created. </p>",
    "StopResourceSnapshotJob": "<p> Stops a resource snapshot job. The job must be started prior to being stopped. </p>",
    "SubmitOpportunity": "<p> Use this action to submit an opportunity that was previously created by partner for AWS review. After you perform this action, the opportunity becomes non-editable until it is reviewed by AWS and has <code> LifeCycle.ReviewStatus </code> as either <code>Approved</code> or <code>Action Required</code>. </p>",
    "UpdateOpportunity": "<p>Updates the <code>Opportunity</code> record identified by a given <code>Identifier</code>. This operation allows you to modify the details of an existing opportunity to reflect the latest information and progress. Use this action to keep the opportunity record up-to-date and accurate.</p> <p>When you perform updates, include the entire payload with each request. If any field is omitted, the API assumes that the field is set to <code>null</code>. The best practice is to always perform a <code>GetOpportunity</code> to retrieve the latest values, then send the complete payload with the updated values to be changed.</p>"
  },
  "shapes": {
    "AcceptEngagementInvitationRequest": {
      "base": null,
      "refs": {
      }
    },
    "AccessDeniedException": {
      "base": "<p>This error occurs when you don't have permission to perform the requested action.</p> <p>You donâ€™t have access to this action or resource. Review IAM policies or contact your AWS administrator for assistance.</p>",
      "refs": {
      }
    },
    "Account": {
      "base": "<p>Specifies the <code>Customer</code>'s account details associated with the <code>Opportunity</code>.</p>",
      "refs": {
        "Customer$Account": "<p>An object that contains the customer's account details.</p>"
      }
    },
    "AccountCompanyNameString": {
      "base": null,
      "refs": {
        "Account$CompanyName": "<p>Specifies the end <code>Customer</code>'s company name associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AccountOtherIndustryString": {
      "base": null,
      "refs": {
        "Account$OtherIndustry": "<p>Specifies the end <code>Customer</code>'s industry associated with the <code>Opportunity</code>, when the selected value in the <code>Industry</code> field is <code>Other</code>.</p>"
      }
    },
    "AccountReceiver": {
      "base": "<p>Contains the account details of the partner who received the Engagement Invitation, including the AWS account ID and company name.</p>",
      "refs": {
        "Receiver$Account": "<p>Specifies the AWS account of the partner who received the Engagement Invitation. This field is used to track the invitation recipient within the AWS ecosystem.</p>"
      }
    },
    "AccountSummary": {
      "base": "<p>An object that contains an <code>Account</code>'s subset of fields.</p>",
      "refs": {
        "CustomerSummary$Account": "<p>An object that contains a customer's account details.</p>"
      }
    },
    "AccountSummaryCompanyNameString": {
      "base": null,
      "refs": {
        "AccountSummary$CompanyName": "<p>Specifies the end <code>Customer</code>'s company name associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AccountSummaryOtherIndustryString": {
      "base": null,
      "refs": {
        "AccountSummary$OtherIndustry": "<p>Specifies the end <code>Customer</code>'s industry associated with the <code> Opportunity</code>, when the selected value in the <code>Industry</code> field is <code>Other</code>. This field is relevant when the customer's industry doesn't fall under the predefined picklist values and requires a custom description.</p>"
      }
    },
    "Address": {
      "base": "<p>Specifies the end <code>Customer</code>'s address details associated with the <code>Opportunity</code>.</p>",
      "refs": {
        "Account$Address": "<p>Specifies the end <code>Customer</code>'s address details associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AddressCityString": {
      "base": null,
      "refs": {
        "Address$City": "<p>Specifies the end <code>Customer</code>'s city associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AddressPart": {
      "base": null,
      "refs": {
        "Address$StateOrRegion": "<p>Specifies the end <code>Customer</code>'s state or region associated with the <code>Opportunity</code>.</p> <p>Valid values: <code>Alabama | Alaska | American Samoa | Arizona | Arkansas | California | Colorado | Connecticut | Delaware | Dist. of Columbia | Federated States of Micronesia | Florida | Georgia | Guam | Hawaii | Idaho | Illinois | Indiana | Iowa | Kansas | Kentucky | Louisiana | Maine | Marshall Islands | Maryland | Massachusetts | Michigan | Minnesota | Mississippi | Missouri | Montana | Nebraska | Nevada | New Hampshire | New Jersey | New Mexico | New York | North Carolina | North Dakota | Northern Mariana Islands | Ohio | Oklahoma | Oregon | Palau | Pennsylvania | Puerto Rico | Rhode Island | South Carolina | South Dakota | Tennessee | Texas | Utah | Vermont | Virginia | Virgin Islands | Washington | West Virginia | Wisconsin | Wyoming | APO/AE | AFO/FPO | FPO, AP</code> </p>",
        "AddressSummary$StateOrRegion": "<p>Specifies the end <code>Customer</code>'s state or region associated with the <code>Opportunity</code>.</p> <p>Valid values: <code>Alabama | Alaska | American Samoa | Arizona | Arkansas | California | Colorado | Connecticut | Delaware | Dist. of Columbia | Federated States of Micronesia | Florida | Georgia | Guam | Hawaii | Idaho | Illinois | Indiana | Iowa | Kansas | Kentucky | Louisiana | Maine | Marshall Islands | Maryland | Massachusetts | Michigan | Minnesota | Mississippi | Missouri | Montana | Nebraska | Nevada | New Hampshire | New Jersey | New Mexico | New York | North Carolina | North Dakota | Northern Mariana Islands | Ohio | Oklahoma | Oregon | Palau | Pennsylvania | Puerto Rico | Rhode Island | South Carolina | South Dakota | Tennessee | Texas | Utah | Vermont | Virginia | Virgin Islands | Washington | West Virginia | Wisconsin | Wyoming | APO/AE | AFO/FPO | FPO, AP</code> </p>"
      }
    },
    "AddressPostalCodeString": {
      "base": null,
      "refs": {
        "Address$PostalCode": "<p>Specifies the end <code>Customer</code>'s postal code associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AddressStreetAddressString": {
      "base": null,
      "refs": {
        "Address$StreetAddress": "<p>Specifies the end <code>Customer</code>'s street address associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AddressSummary": {
      "base": "<p>An object that contains an <code>Address</code> object's subset of fields.</p>",
      "refs": {
        "AccountSummary$Address": "<p>Specifies the end <code>Customer</code>'s address details associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AddressSummaryCityString": {
      "base": null,
      "refs": {
        "AddressSummary$City": "<p>Specifies the end <code>Customer</code>'s city associated with the <code>Opportunity</code>.</p>"
      }
    },
    "AddressSummaryPostalCodeString": {
      "base": null,
      "refs": {
        "AddressSummary$PostalCode": "<p>Specifies the end <code>Customer</code>'s postal code associated with the <code>Opportunity</code>.</p>"
      }
    },
    "Alias": {
      "base": null,
      "refs": {
        "AccountReceiver$Alias": "<p>Represents the alias of the partner account receiving the Engagement Invitation, making it easier to identify and track the recipient in reports or logs.</p>"
      }
    },
    "ApnPrograms": {
      "base": null,
      "refs": {
        "Project$ApnPrograms": "<p>Specifies the Amazon Partner Network (APN) program that influenced the <code>Opportunity</code>. APN programs refer to specific partner programs or initiatives that can impact the <code>Opportunity</code>.</p> <p>Valid values: <code>APN Immersion Days | APN Solution Space | ATO (Authority to Operate) | AWS Marketplace Campaign | IS Immersion Day SFID Program | ISV Workload Migration | Migration Acceleration Program | P3 | Partner Launch Initiative | Partner Opportunity Acceleration Funded | The Next Smart | VMware Cloud on AWS | Well-Architected | Windows | Workspaces/AppStream Accelerator Program | WWPS NDPP</code> </p>"
      }
    },
    "AssignOpportunityRequest": {
      "base": null,
      "refs": {
      }
    },
    "AssigneeContact": {
      "base": "<p>Represents the contact details of the individual assigned to manage the opportunity within the partner organization. This helps to ensure that there is a point of contact for the opportunity's progress.</p>",
      "refs": {
        "AssignOpportunityRequest$Assignee": "<p>Specifies the user or team member responsible for managing the assigned opportunity. This field identifies the <i>Assignee</i> based on the partner's internal team structure. Ensure that the email address is associated with a registered user in your Partner Central account.</p>"
      }
    },
    "AssigneeContactFirstNameString": {
      "base": null,
      "refs": {
        "AssigneeContact$FirstName": "<p>Specifies the first name of the assignee managing the opportunity. The system automatically retrieves this value from the user profile by referencing the associated email address.</p>"
      }
    },
    "AssigneeContactLastNameString": {
      "base": null,
      "refs": {
        "AssigneeContact$LastName": "<p>Specifies the last name of the assignee managing the opportunity. The system automatically retrieves this value from the user profile by referencing the associated email address.</p>"
      }
    },
    "AssociateOpportunityRequest": {
      "base": null,
      "refs": {
      }
    },
    "AssociateOpportunityRequestRelatedEntityIdentifierString": {
      "base": null,
      "refs": {
        "AssociateOpportunityRequest$RelatedEntityIdentifier": "<p>Requires the related entity's unique identifier when you want to associate it with the <code> Opportunity</code>. For Amazon Web Services Marketplace entities, provide the Amazon Resource Name (ARN). Use the <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html\"> Amazon Web Services Marketplace API</a> to obtain the ARN.</p>"
      }
    },
    "AwsAccount": {
      "base": null,
      "refs": {
        "Account$AwsAccountId": "<p>Specifies the <code>Customer</code> Amazon Web Services account ID associated with the <code>Opportunity</code>.</p>",
        "AccountReceiver$AwsAccountId": "<p>Indicates the AWS account ID of the partner who received the Engagement Invitation. This is a unique identifier for managing engagements with specific AWS accounts.</p>",
        "AwsAccountIdOrAliasList$member": null,
        "AwsAccountList$member": null,
        "EngagementInvitationSummary$SenderAwsAccountId": "<p>Specifies the AWS account ID of the sender who initiated the Engagement Invitation. This allows the partner to identify the AWS entity or representative responsible for sharing the opportunity.</p>",
        "EngagementMember$AccountId": "<p> This is the unique identifier for the AWS account associated with the member organization. It's used for AWS-related operations and identity verification. </p>",
        "EngagementResourceAssociationSummary$CreatedBy": "<p> The AWS account ID of the entity that created the association. </p>",
        "EngagementSummary$CreatedBy": "<p> The AWS account ID of the engagement creator. </p>",
        "GetEngagementInvitationResponse$SenderAwsAccountId": "<p>Specifies the AWS Account ID of the sender, which identifies the AWS team responsible for sharing the engagement invitation.</p>",
        "GetEngagementResponse$CreatedBy": "<p> The AWS account ID of the user who originally created the engagement. This field helps in tracking the origin of the engagement. </p>",
        "GetResourceSnapshotResponse$CreatedBy": "<p>The AWS account ID of the principal (user or role) who created the snapshot. This helps in tracking the origin of the snapshot. </p>",
        "ListEngagementResourceAssociationsRequest$CreatedBy": "<p> Filters the results to include only associations with resources owned by the specified AWS account. Use this when you want to find associations related to resources owned by a particular account. </p>",
        "ListResourceSnapshotsRequest$CreatedBy": "<p> Filters the response to include only snapshots of resources created by the specified AWS account. </p>",
        "ResourceSnapshotSummary$CreatedBy": "<p>The AWS account ID of the principal (user or role) who created the snapshot. This helps in tracking the origin of the snapshot. </p>"
      }
    },
    "AwsAccountIdOrAliasList": {
      "base": null,
      "refs": {
        "ListEngagementInvitationsRequest$SenderAwsAccountId": "<p> List of sender AWS account IDs to filter the invitations. </p>"
      }
    },
    "AwsAccountList": {
      "base": null,
      "refs": {
        "ListEngagementsRequest$CreatedBy": "<p> A list of AWS account IDs. When specified, the response includes engagements created by these accounts. This filter is useful for finding engagements created by specific team members. </p>",
        "ListEngagementsRequest$ExcludeCreatedBy": "<p> An array of strings representing AWS Account IDs. Use this to exclude engagements created by specific users. </p>"
      }
    },
    "AwsClosedLostReason": {
      "base": null,
      "refs": {
        "AwsOpportunityLifeCycle$ClosedLostReason": "<p>Indicates the reason why an opportunity was marked as <code>Closed Lost</code>. This helps in understanding the context behind the lost opportunity and aids in refining future strategies.</p>"
      }
    },
    "AwsFundingUsed": {
      "base": null,
      "refs": {
        "Marketing$AwsFundingUsed": "<p>Indicates if the <code>Opportunity</code> is a marketing development fund (MDF) funded activity.</p>"
      }
    },
    "AwsMarketplaceOfferIdentifier": {
      "base": null,
      "refs": {
        "AwsMarketplaceOfferIdentifiers$member": null
      }
    },
    "AwsMarketplaceOfferIdentifiers": {
      "base": null,
      "refs": {
        "RelatedEntityIdentifiers$AwsMarketplaceOffers": "<p>Takes one value per opportunity. Each value is an Amazon Resource Name (ARN), in this format: <code>\"offers\": [\"arn:aws:aws-marketplace:us-east-1:999999999999:AWSMarketplace/Offer/offer-sampleOffer32\"]</code>.</p> <p>Use the <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/API_ListEntities.html\">ListEntities</a> action in the Marketplace Catalog APIs for a list of offers in the associated Marketplace seller account.</p>"
      }
    },
    "AwsMemberBusinessTitle": {
      "base": null,
      "refs": {
        "AwsTeamMember$BusinessTitle": "<p>Specifies the Amazon Web Services team member's business title and indicates their organizational role.</p>"
      }
    },
    "AwsOpportunityCustomer": {
      "base": "<p>Represents the customer associated with the AWS opportunity. This field captures key details about the customer that are necessary for managing the opportunity.</p>",
      "refs": {
        "GetAwsOpportunitySummaryResponse$Customer": "<p>Provides details about the customer associated with the AWS Opportunity, including account information, industry, and other customer data. These details help partners understand the business context of the opportunity.</p>"
      }
    },
    "AwsOpportunityInsights": {
      "base": "<p>Contains insights provided by AWS for the opportunity, offering recommendations and analysis that can help the partner optimize their engagement and strategy.</p>",
      "refs": {
        "GetAwsOpportunitySummaryResponse$Insights": "<p>Provides insights into the AWS Opportunity, including engagement score and recommended actions that AWS suggests for the partner.</p>"
      }
    },
    "AwsOpportunityLifeCycle": {
      "base": "<p>Tracks the lifecycle of the AWS opportunity, including stages such as qualification, validation, and closure. This field helps partners understand the current status and progression of the opportunity.</p>",
      "refs": {
        "GetAwsOpportunitySummaryResponse$LifeCycle": "<p>Contains lifecycle information for the AWS Opportunity, including review status, stage, and target close date. This field is crucial for partners to monitor the progression of the opportunity.</p>"
      }
    },
    "AwsOpportunityLifeCycleNextStepsHistoryList": {
      "base": null,
      "refs": {
        "AwsOpportunityLifeCycle$NextStepsHistory": "<p>Provides a historical log of previous next steps that were taken to move the opportunity forward. This helps in tracking the decision-making process and identifying any delays or obstacles encountered.</p>"
      }
    },
    "AwsOpportunityLifeCycleNextStepsString": {
      "base": null,
      "refs": {
        "AwsOpportunityLifeCycle$NextSteps": "<p>Specifies the immediate next steps required to progress the opportunity. These steps are based on AWS guidance and the current stage of the opportunity.</p>"
      }
    },
    "AwsOpportunityProject": {
      "base": "<p>Captures details about the project associated with the opportunity, including objectives, scope, and customer requirements.</p>",
      "refs": {
        "GetAwsOpportunitySummaryResponse$Project": "<p>Provides details about the project associated with the AWS Opportunity, including the customerâ€™s business problem, expected outcomes, and project scope. This information is crucial for understanding the broader context of the opportunity.</p>"
      }
    },
    "AwsOpportunityRelatedEntities": {
      "base": "<p>Represents other entities related to the AWS opportunity, such as AWS products, partner solutions, and marketplace offers. These associations help build a complete picture of the solution being sold.</p>",
      "refs": {
        "GetAwsOpportunitySummaryResponse$RelatedEntityIds": "<p>Lists related entity identifiers, such as AWS products or partner solutions, associated with the AWS Opportunity. These identifiers provide additional context and help partners understand which AWS services are involved.</p>"
      }
    },
    "AwsOpportunityStage": {
      "base": null,
      "refs": {
        "AwsOpportunityLifeCycle$Stage": "<p>Represents the current stage of the opportunity in its lifecycle, such as <code>Qualification</code>, <code>Validation</code>, or <code>Closed Won</code>. This helps in understanding the opportunity's progress.</p>"
      }
    },
    "AwsOpportunityTeamMembersList": {
      "base": null,
      "refs": {
        "GetAwsOpportunitySummaryResponse$OpportunityTeam": "<p>Details the AWS opportunity team, including members involved. This information helps partners know who from AWS is engaged and what their role is.</p>"
      }
    },
    "AwsProductIdentifier": {
      "base": null,
      "refs": {
        "AwsProductIdentifiers$member": null
      }
    },
    "AwsProductIdentifiers": {
      "base": null,
      "refs": {
        "AwsOpportunityRelatedEntities$AwsProducts": "<p>Specifies the AWS products associated with the opportunity. This field helps track the specific products that are part of the proposed solution.</p>",
        "RelatedEntityIdentifiers$AwsProducts": "<p>Enables the association of specific Amazon Web Services products with the <code>Opportunity</code>. Partners can indicate the relevant Amazon Web Services products for the <code>Opportunity</code>'s solution and align with the customer's needs. Returns multiple values separated by commas. For example, <code>\"AWSProducts\" : [\"AmazonRedshift\", \"AWSAppFabric\", \"AWSCleanRooms\"]</code>.</p> <p>Use the file with the list of Amazon Web Services products hosted on GitHub: <a href=\"https://github.com/aws-samples/partner-crm-integration-samples/blob/main/resources/aws_products.json\"> Amazon Web Services products</a>.</p>"
      }
    },
    "AwsSubmission": {
      "base": "<p>Indicates the level of AWS involvement in the opportunity. This field helps track AWS participation throughout the engagement, such as providing technical support, deal assistance, and sales support.</p>",
      "refs": {
        "StartEngagementFromOpportunityTaskRequest$AwsSubmission": null
      }
    },
    "AwsTeamMember": {
      "base": "<p>Represents an Amazon Web Services team member for the engagement. This structure includes details such as name, email, and business title.</p>",
      "refs": {
        "AwsOpportunityTeamMembersList$member": null
      }
    },
    "AwsTeamMemberFirstNameString": {
      "base": null,
      "refs": {
        "AwsTeamMember$FirstName": "<p>Provides the Amazon Web Services team member's first name.</p>"
      }
    },
    "AwsTeamMemberLastNameString": {
      "base": null,
      "refs": {
        "AwsTeamMember$LastName": "<p>Provides the Amazon Web Services team member's last name.</p>"
      }
    },
    "CatalogIdentifier": {
      "base": null,
      "refs": {
        "AcceptEngagementInvitationRequest$Catalog": "<p> The <code>CatalogType</code> parameter specifies the catalog associated with the engagement invitation. Accepted values are <code>AWS</code> and <code>Sandbox</code>, which determine the environment in which the engagement invitation is managed. </p>",
        "AssignOpportunityRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity is assigned in. Use <code>AWS</code> to assign real opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> for testing in secure, isolated environments.</p>",
        "AssociateOpportunityRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity association is made in. Use <code>AWS</code> to associate opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> for testing in secure, isolated environments.</p>",
        "CreateEngagementInvitationRequest$Catalog": "<p> Specifies the catalog related to the engagement. Accepted values are <code>AWS</code> and <code>Sandbox</code>, which determine the environment in which the engagement is managed. </p>",
        "CreateEngagementRequest$Catalog": "<p> The <code>CreateEngagementRequest$Catalog</code> parameter specifies the catalog related to the engagement. Accepted values are <code>AWS</code> and <code>Sandbox</code>, which determine the environment in which the engagement is managed. </p>",
        "CreateOpportunityRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity is created in. Use <code>AWS</code> to create opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> for testing in secure, isolated environments.</p>",
        "CreateResourceSnapshotJobRequest$Catalog": "<p> Specifies the catalog in which to create the snapshot job. Valid values are <code>AWS</code> and <code> Sandbox</code>. </p>",
        "CreateResourceSnapshotRequest$Catalog": "<p> Specifies the catalog where the snapshot is created. Valid values are <code>AWS</code> and <code>Sandbox</code>. </p>",
        "DeleteResourceSnapshotJobRequest$Catalog": "<p> Specifies the catalog from which to delete the snapshot job. Valid values are <code>AWS</code> and <code>Sandbox</code>. </p>",
        "DisassociateOpportunityRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity disassociation is made in. Use <code>AWS</code> to disassociate opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> for testing in secure, isolated environments.</p>",
        "EngagementInvitationSummary$Catalog": "<p>Specifies the catalog in which the Engagement Invitation resides. This can be either the <code>AWS</code> or <code>Sandbox</code> catalog, indicating whether the opportunity is live or being tested.</p>",
        "EngagementResourceAssociationSummary$Catalog": "<p> Indicates the environment in which the resource and engagement exist. </p>",
        "GetAwsOpportunitySummaryRequest$Catalog": "<p>Specifies the catalog in which the AWS Opportunity is located. Accepted values include <code>AWS</code> for production opportunities or <code>Sandbox</code> for testing purposes. The catalog determines which environment the opportunity data is pulled from.</p>",
        "GetAwsOpportunitySummaryResponse$Catalog": "<p>Specifies the catalog in which the AWS Opportunity exists. This is the environment (e.g., <code>AWS</code> or <code>Sandbox</code>) where the opportunity is being managed.</p>",
        "GetEngagementInvitationRequest$Catalog": "<p>Specifies the catalog associated with the request. The field accepts values from the predefined set: <code>AWS</code> for live operations or <code>Sandbox</code> for testing environments.</p>",
        "GetEngagementInvitationResponse$Catalog": "<p>Indicates the catalog from which the engagement invitation details are retrieved. This field helps in identifying the appropriate catalog (e.g., <code>AWS</code> or <code>Sandbox</code>) used in the request.</p>",
        "GetEngagementRequest$Catalog": "<p> Specifies the catalog related to the engagement request. Valid values are <code>AWS</code> and <code>Sandbox</code>. </p>",
        "GetOpportunityRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity is fetched from. Use <code>AWS</code> to retrieve opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> to retrieve opportunities in a secure, isolated testing environment.</p>",
        "GetOpportunityResponse$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity information is retrieved from. Use <code>AWS</code> to retrieve opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> to retrieve opportunities in a secure and isolated testing environment.</p>",
        "GetResourceSnapshotJobRequest$Catalog": "<p> Specifies the catalog related to the request. Valid values are: </p> <ul> <li> <p> AWS: Retrieves the snapshot job from the production AWS environment. </p> </li> <li> <p> Sandbox: Retrieves the snapshot job from a sandbox environment used for testing or development purposes. </p> </li> </ul>",
        "GetResourceSnapshotJobResponse$Catalog": "<p> The catalog in which the snapshot job was created. This will match the catalog specified in the request. </p>",
        "GetResourceSnapshotRequest$Catalog": "<p>Specifies the catalog related to the request. Valid values are:</p> <ul> <li> <p>AWS: Retrieves the snapshot from the production AWS environment.</p> </li> <li> <p>Sandbox: Retrieves the snapshot from a sandbox environment used for testing or development purposes.</p> </li> </ul>",
        "GetResourceSnapshotResponse$Catalog": "<p>The catalog in which the snapshot was created. Matches the Catalog specified in the request.</p>",
        "GetSellingSystemSettingsRequest$Catalog": "<p>Specifies the catalog in which the settings are defined. Acceptable values include <code>AWS</code> for production and <code>Sandbox</code> for testing environments.</p>",
        "GetSellingSystemSettingsResponse$Catalog": "<p>Specifies the catalog in which the settings are defined. Acceptable values include <code>AWS</code> for production and <code>Sandbox</code> for testing environments.</p>",
        "ListEngagementByAcceptingInvitationTasksRequest$Catalog": "<p> Specifies the catalog related to the request. Valid values are: </p> <ul> <li> <p> AWS: Retrieves the request from the production AWS environment. </p> </li> <li> <p> Sandbox: Retrieves the request from a sandbox environment used for testing or development purposes. </p> </li> </ul>",
        "ListEngagementFromOpportunityTasksRequest$Catalog": "<p> Specifies the catalog related to the request. Valid values are: </p> <ul> <li> <p> AWS: Retrieves the request from the production AWS environment. </p> </li> <li> <p> Sandbox: Retrieves the request from a sandbox environment used for testing or development purposes. </p> </li> </ul>",
        "ListEngagementInvitationsRequest$Catalog": "<p>Specifies the catalog from which to list the engagement invitations. Use <code>AWS</code> for production invitations or <code>Sandbox</code> for testing environments.</p>",
        "ListEngagementMembersRequest$Catalog": "<p> The catalog related to the request. </p>",
        "ListEngagementResourceAssociationsRequest$Catalog": "<p> Specifies the catalog in which to search for engagement-resource associations. </p>",
        "ListEngagementsRequest$Catalog": "<p> Specifies the catalog related to the request. </p>",
        "ListOpportunitiesRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunities are listed in. Use <code>AWS</code> for listing real opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> for testing in secure, isolated environments.</p>",
        "ListResourceSnapshotJobsRequest$Catalog": "<p> Specifies the catalog related to the request. </p>",
        "ListResourceSnapshotsRequest$Catalog": "<p> Specifies the catalog related to the request. </p>",
        "ListSolutionsRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the solutions are listed in. Use <code>AWS</code> to list solutions in the Amazon Web Services catalog, and <code>Sandbox</code> to list solutions in a secure and isolated testing environment.</p>",
        "OpportunitySummary$Catalog": "<p>Specifies the catalog associated with the opportunity, either <code>AWS</code> or <code>Sandbox</code>. This indicates the environment in which the opportunity is managed.</p>",
        "PutSellingSystemSettingsRequest$Catalog": "<p>Specifies the catalog in which the settings will be updated. Acceptable values include <code>AWS</code> for production and <code>Sandbox</code> for testing environments.</p>",
        "PutSellingSystemSettingsResponse$Catalog": "<p>Specifies the catalog in which the settings are defined. Acceptable values include <code>AWS</code> for production and <code>Sandbox</code> for testing environments.</p>",
        "RejectEngagementInvitationRequest$Catalog": "<p>This is the catalog that's associated with the engagement invitation. Acceptable values are <code>AWS</code> or <code>Sandbox</code>, and these values determine the environment in which the opportunity is managed.</p>",
        "SolutionBase$Catalog": "<p>Specifies the catalog in which the solution is hosted, either <code>AWS</code> or <code>Sandbox</code>. This helps partners differentiate between live solutions and those in testing environments.</p>",
        "StartEngagementByAcceptingInvitationTaskRequest$Catalog": "<p>Specifies the catalog related to the task. Use <code>AWS</code> for production engagements and <code>Sandbox</code> for testing scenarios.</p>",
        "StartEngagementFromOpportunityTaskRequest$Catalog": "<p>Specifies the catalog in which the engagement is tracked. Acceptable values include <code>AWS</code> for production and <code>Sandbox</code> for testing environments.</p>",
        "StartResourceSnapshotJobRequest$Catalog": "<p> Specifies the catalog related to the request. </p>",
        "StopResourceSnapshotJobRequest$Catalog": "<p> Specifies the catalog related to the request. </p>",
        "SubmitOpportunityRequest$Catalog": "<p> Specifies the catalog related to the request. </p>",
        "UpdateOpportunityRequest$Catalog": "<p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity is updated in. Use <code>AWS</code> to update real opportunities in the production environment, and <code>Sandbox</code> for testing in secure, isolated environments. When you use the <code>Sandbox</code> catalog, it allows you to simulate and validate your interactions with Amazon Web Services services without affecting live data or operations.</p>"
      }
    },
    "Channel": {
      "base": null,
      "refs": {
        "Channels$member": null
      }
    },
    "Channels": {
      "base": null,
      "refs": {
        "Marketing$Channels": "<p>Specifies the <code>Opportunity</code>'s channel that the marketing activity is associated with or was contacted through. This field provides information about the specific marketing channel that contributed to the generation of the lead or contact.</p>"
      }
    },
    "ClientToken": {
      "base": null,
      "refs": {
        "CreateEngagementInvitationRequest$ClientToken": "<p> Specifies a unique, client-generated UUID to ensure that the request is handled exactly once. This token helps prevent duplicate invitation creations. </p>"
      }
    },
    "ClosedLostReason": {
      "base": null,
      "refs": {
        "LifeCycle$ClosedLostReason": "<p>Specifies the reason code when an opportunity is marked as <i>Closed Lost</i>. When you select an appropriate reason code, you communicate the context for closing the <code>Opportunity</code>, and aid in accurate reports and analysis of opportunity outcomes. The possible values are:</p> <ul> <li> <p>Customer Deficiency: The customer lacked necessary resources or capabilities.</p> </li> <li> <p>Delay/Cancellation of Project: The project was delayed or canceled.</p> </li> <li> <p>Legal/Tax/Regulatory: Legal, tax, or regulatory issues prevented progress.</p> </li> <li> <p>Lost to Competitorâ€”Google: The opportunity was lost to Google.</p> </li> <li> <p>Lost to Competitorâ€”Microsoft: The opportunity was lost to Microsoft.</p> </li> <li> <p>Lost to Competitorâ€”SoftLayer: The opportunity was lost to SoftLayer.</p> </li> <li> <p>Lost to Competitorâ€”VMWare: The opportunity was lost to VMWare.</p> </li> <li> <p>Lost to Competitorâ€”Other: The opportunity was lost to a competitor not listed above.</p> </li> <li> <p>No Opportunity: There was no opportunity to pursue.</p> </li> <li> <p>On Premises Deployment: The customer chose an on-premises solution.</p> </li> <li> <p>Partner Gap: The partner lacked necessary resources or capabilities.</p> </li> <li> <p>Price: The price was not competitive or acceptable to the customer.</p> </li> <li> <p>Security/Compliance: Security or compliance issues prevented progress.</p> </li> <li> <p>Technical Limitations: Technical limitations prevented progress.</p> </li> <li> <p>Customer Experience: Issues related to the customer's experience impacted the decision.</p> </li> <li> <p>Other: Any reason not covered by the other values.</p> </li> <li> <p>People/Relationship/Governance: Issues related to people, relationships, or governance.</p> </li> <li> <p>Product/Technology: Issues related to the product or technology.</p> </li> <li> <p>Financial/Commercial: Financial or commercial issues impacted the decision.</p> </li> </ul>",
        "LifeCycleSummary$ClosedLostReason": "<p>Specifies the reason code when an opportunity is marked as <i>Closed Lost</i>. When you select an appropriate reason code, you communicate the context for closing the <code>Opportunity</code>, and aid in accurate reports and analysis of opportunity outcomes.</p>"
      }
    },
    "CompanyName": {
      "base": null,
      "refs": {
        "EngagementCustomer$CompanyName": "<p>Represents the name of the customerâ€™s company associated with the Engagement Invitation. This field is used to identify the customer.</p>"
      }
    },
    "CompanyWebsiteUrl": {
      "base": null,
      "refs": {
        "EngagementCustomer$WebsiteUrl": "<p>Provides the website URL of the customerâ€™s company. This field helps partners verify the legitimacy and size of the customer organization.</p>"
      }
    },
    "CompetitorName": {
      "base": null,
      "refs": {
        "Project$CompetitorName": "<p>Name of the <code>Opportunity</code>'s competitor (if any). Use <code>Other</code> to submit a value not in the picklist.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>This error occurs when the request canâ€™t be processed due to a conflict with the target resource's current state, which could result from updating or deleting the resource.</p> <p>Suggested action: Fetch the latest state of the resource, verify the state, and retry the request.</p>",
      "refs": {
      }
    },
    "Contact": {
      "base": "<p>An object that contains a <code>Customer Partner</code>'s contact details.</p>",
      "refs": {
        "CustomerContactsList$member": null,
        "PartnerOpportunityTeamMembersList$member": null
      }
    },
    "ContactFirstNameString": {
      "base": null,
      "refs": {
        "Contact$FirstName": "<p>The contact's first name associated with the <code>Opportunity</code>.</p>"
      }
    },
    "ContactLastNameString": {
      "base": null,
      "refs": {
        "Contact$LastName": "<p>The contact's last name associated with the <code>Opportunity</code>.</p>"
      }
    },
    "CountryCode": {
      "base": null,
      "refs": {
        "Address$CountryCode": "<p>Specifies the end <code>Customer</code>'s country associated with the <code>Opportunity</code>.</p>",
        "AddressSummary$CountryCode": "<p>Specifies the end <code>Customer</code>'s country associated with the <code>Opportunity</code>.</p>",
        "EngagementCustomer$CountryCode": "<p>Indicates the country in which the customerâ€™s company operates. This field is useful for understanding regional requirements or compliance needs.</p>"
      }
    },
    "CreateEngagementInvitationRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateEngagementInvitationResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateEngagementRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateEngagementRequestClientTokenString": {
      "base": null,
      "refs": {
        "CreateEngagementRequest$ClientToken": "<p> The <code>CreateEngagementRequest$ClientToken</code> parameter specifies a unique, case-sensitive identifier to ensure that the request is handled exactly once. The value must not exceed sixty-four alphanumeric characters. </p>"
      }
    },
    "CreateEngagementResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateOpportunityRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateOpportunityRequestClientTokenString": {
      "base": null,
      "refs": {
        "CreateOpportunityRequest$ClientToken": "<p>Required to be unique, and should be unchanging, it can be randomly generated or a meaningful string.</p> <p>Default: None</p> <p>Best practice: To help ensure uniqueness and avoid conflicts, use a Universally Unique Identifier (UUID) as the <code>ClientToken</code>. You can use standard libraries from most programming languages to generate this. If you use the same client token, the API returns the following error: \"Conflicting client token submitted for a new request body.\"</p>"
      }
    },
    "CreateOpportunityRequestPartnerOpportunityIdentifierString": {
      "base": null,
      "refs": {
        "CreateOpportunityRequest$PartnerOpportunityIdentifier": "<p>Specifies the opportunity's unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload to the partner.</p> <p>This field allows partners to link an opportunity to their CRM, which helps to ensure seamless integration and accurate synchronization between the Partner Central API and the partner's internal systems.</p>"
      }
    },
    "CreateOpportunityResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateResourceSnapshotJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateResourceSnapshotJobRequestClientTokenString": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotJobRequest$ClientToken": "<p> Specifies a unique, client-generated UUID to ensure that the request is handled exactly once. This token helps prevent duplicate snapshot job creations. </p>"
      }
    },
    "CreateResourceSnapshotJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateResourceSnapshotRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateResourceSnapshotRequestClientTokenString": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotRequest$ClientToken": "<p> Specifies a unique, client-generated UUID to ensure that the request is handled exactly once. This token helps prevent duplicate snapshot creations. </p>"
      }
    },
    "CreateResourceSnapshotResponse": {
      "base": null,
      "refs": {
      }
    },
    "CurrencyCode": {
      "base": null,
      "refs": {
        "MonetaryValue$CurrencyCode": "<p>Specifies the payment currency.</p>"
      }
    },
    "Customer": {
      "base": "<p>An object that contains the customer's <code>Account</code> and <code>Contact</code>.</p>",
      "refs": {
        "CreateOpportunityRequest$Customer": "<p>Specifies customer details associated with the <code>Opportunity</code>.</p>",
        "GetOpportunityResponse$Customer": "<p>Specifies details of the customer associated with the <code>Opportunity</code>.</p>",
        "OpportunitySummaryView$Customer": null,
        "UpdateOpportunityRequest$Customer": "<p>Specifies details of the customer associated with the <code>Opportunity</code>.</p>"
      }
    },
    "CustomerContactsList": {
      "base": null,
      "refs": {
        "AwsOpportunityCustomer$Contacts": "<p>Provides a list of customer contacts involved in the opportunity. These contacts may include decision makers, influencers, and other stakeholders within the customer's organization.</p>",
        "Customer$Contacts": "<p>Represents the contact details for individuals associated with the customer of the <code>Opportunity</code>. This field captures relevant contacts, including decision-makers, influencers, and technical stakeholders within the customer organization. These contacts are key to progressing the opportunity.</p>"
      }
    },
    "CustomerProjectsContext": {
      "base": "<p> The CustomerProjects structure in Engagements offers a flexible framework for managing customer-project relationships. It supports multiple customers per Engagement and multiple projects per customer, while also allowing for customers without projects and projects without specific customers. </p> <p>All Engagement members have full visibility of customers and their associated projects, enabling the capture of relevant context even when project details are not fully defined. This structure also facilitates targeted invitations, allowing partners to focus on specific customers and their business problems when sending Engagement invitations. </p>",
      "refs": {
        "EngagementContextPayload$CustomerProject": "<p> Contains detailed information about a customer project when the context type is \"CustomerProject\". This field is present only when the Type in EngagementContextDetails is set to \"CustomerProject\". </p>"
      }
    },
    "CustomerSummary": {
      "base": "<p>An object that contains a <code>Customer</code> object's subset of fields.</p>",
      "refs": {
        "OpportunitySummary$Customer": "<p>An object that contains the <code>Opportunity</code>'s customer details.</p>"
      }
    },
    "Date": {
      "base": null,
      "refs": {
        "AwsOpportunityLifeCycle$TargetCloseDate": "<p>Indicates the expected date by which the opportunity is projected to close. This field helps in planning resources and timelines for both the partner and AWS.</p>",
        "LifeCycle$TargetCloseDate": "<p>Specifies the date when Amazon Web Services expects to start significant billing, when the project finishes, and when it moves into production. This field informs the Amazon Web Services seller about when the opportunity launches and starts to incur Amazon Web Services usage.</p> <p>Ensure the <code>Target Close Date</code> isn't in the past.</p>",
        "LifeCycleForView$TargetCloseDate": "<p> The projected launch date of the opportunity shared through a snapshot. </p>",
        "LifeCycleSummary$TargetCloseDate": "<p>Specifies the date when Amazon Web Services expects to start significant billing, when the project finishes, and when it moves into production. This field informs the Amazon Web Services seller about when the opportunity launches and starts to incur Amazon Web Services usage.</p> <p>Ensure the <code>Target Close Date</code> isn't in the past.</p>",
        "ProjectDetails$TargetCompletionDate": "<p>Specifies the estimated date of project completion. This field helps track the project timeline and manage expectations.</p>",
        "SoftwareRevenue$EffectiveDate": "<p>Specifies the <code>Opportunity</code>'s customer engagement start date for the contract's effectiveness.</p>",
        "SoftwareRevenue$ExpirationDate": "<p>Specifies the expiration date for the contract between the customer and Amazon Web Services partner. It signifies the termination date of the agreed-upon engagement period between both parties.</p>"
      }
    },
    "DateTime": {
      "base": null,
      "refs": {
        "CreateOpportunityResponse$LastModifiedDate": "<p> <code>DateTime</code> when the opportunity was last modified. When the <code>Opportunity</code> is created, its value is <code>CreatedDate</code>.</p>",
        "EngagementInvitationSummary$ExpirationDate": "<p>Indicates the date and time when the Engagement Invitation will expire. After this date, the invitation can no longer be accepted, and the opportunity will be unavailable to the partner.</p>",
        "EngagementInvitationSummary$InvitationDate": "<p>Indicates the date when the Engagement Invitation was sent to the partner. This provides context for when the opportunity was shared and helps in tracking the timeline for engagement.</p>",
        "EngagementSummary$CreatedAt": "<p> The date and time when the engagement was created. </p>",
        "GetEngagementInvitationResponse$ExpirationDate": "<p>Indicates the date on which the engagement invitation will expire if not accepted by the partner.</p>",
        "GetEngagementInvitationResponse$InvitationDate": "<p>The date when the engagement invitation was sent to the partner.</p>",
        "GetEngagementResponse$CreatedAt": "<p> The date and time when the Engagement was created, presented in ISO 8601 format (UTC). For example: \"2023-05-01T20:37:46Z\". This timestamp helps track the lifecycle of the Engagement. </p>",
        "GetOpportunityResponse$CreatedDate": "<p> <code>DateTime</code> when the <code>Opportunity</code> was last created.</p>",
        "GetOpportunityResponse$LastModifiedDate": "<p> <code>DateTime</code> when the opportunity was last modified.</p>",
        "GetResourceSnapshotJobResponse$CreatedAt": "<p> The date and time when the snapshot job was created, in ISO 8601 format (UTC). Example: \"2023-05-01T20:37:46Z\" </p>",
        "GetResourceSnapshotJobResponse$LastSuccessfulExecutionDate": "<p> The date and time of the last successful execution of the job, in ISO 8601 format (UTC). Example: \"2023-05-01T20:37:46Z\" </p>",
        "GetResourceSnapshotResponse$CreatedAt": "<p>The timestamp when the snapshot was created, in ISO 8601 format (e.g., \"2023-06-01T14:30:00Z\"). This allows for precise tracking of when the snapshot was taken. </p>",
        "LastModifiedDate$AfterLastModifiedDate": "<p>Specifies the date after which the opportunities were modified. Use this filter to retrieve only those opportunities that were modified after a given timestamp.</p>",
        "LastModifiedDate$BeforeLastModifiedDate": "<p>Specifies the date before which the opportunities were modified. Use this filter to retrieve only those opportunities that were modified before a given timestamp.</p>",
        "ListEngagementByAcceptingInvitationTaskSummary$StartTime": "<p> Task start timestamp. </p>",
        "ListEngagementFromOpportunityTaskSummary$StartTime": "<p> The timestamp indicating when the task was initiated, in RFC 3339 5.6 date-time format. </p>",
        "NextStepsHistory$Time": "<p>Indicates the step execution time.</p>",
        "OpportunitySummary$CreatedDate": "<p> <code>DateTime</code> when the <code>Opportunity</code> was last created.</p>",
        "OpportunitySummary$LastModifiedDate": "<p> <code>DateTime</code> when the <code>Opportunity</code> was last modified.</p>",
        "ProfileNextStepsHistory$Time": "<p>Indicates the date and time when a particular next step was recorded or planned. This helps in managing the timeline for the opportunity.</p>",
        "SolutionBase$CreatedDate": "<p>Indicates the solution creation date. This is useful to track and audit.</p>",
        "StartEngagementByAcceptingInvitationTaskResponse$StartTime": "<p>The timestamp indicating when the task was initiated. The format follows RFC 3339 section 5.6.</p>",
        "StartEngagementFromOpportunityTaskResponse$StartTime": "<p>The timestamp indicating when the task was initiated. The format follows RFC 3339 section 5.6.</p>",
        "UpdateOpportunityRequest$LastModifiedDate": "<p> <code>DateTime</code> when the opportunity was last modified.</p>",
        "UpdateOpportunityResponse$LastModifiedDate": "<p> <code>DateTime</code> when the opportunity was last modified.</p>"
      }
    },
    "DeleteResourceSnapshotJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeliveryModel": {
      "base": null,
      "refs": {
        "DeliveryModels$member": null
      }
    },
    "DeliveryModels": {
      "base": null,
      "refs": {
        "Project$DeliveryModels": "<p>Specifies the deployment or consumption model for your solution or service in the <code>Opportunity</code>'s context. You can select multiple options.</p> <p>Options' descriptions from the <code>Delivery Model</code> field are:</p> <ul> <li> <p>SaaS or PaaS: Your Amazon Web Services based solution deployed as SaaS or PaaS in your Amazon Web Services environment.</p> </li> <li> <p>BYOL or AMI: Your Amazon Web Services based solution deployed as BYOL or AMI in the end customer's Amazon Web Services environment.</p> </li> <li> <p>Managed Services: The end customer's Amazon Web Services business management (For example: Consulting, design, implementation, billing support, cost optimization, technical support).</p> </li> <li> <p>Professional Services: Offerings to help enterprise end customers achieve specific business outcomes for enterprise cloud adoption (For example: Advisory or transformation planning).</p> </li> <li> <p>Resell: Amazon Web Services accounts and billing management for your customers.</p> </li> <li> <p>Other: Delivery model not described above.</p> </li> </ul>",
        "ProjectSummary$DeliveryModels": "<p>Specifies your solution or service's deployment or consumption model in the <code>Opportunity</code>'s context. You can select multiple options.</p> <p>Options' descriptions from the <code>Delivery Model</code> field are:</p> <ul> <li> <p>SaaS or PaaS: Your Amazon Web Services based solution deployed as SaaS or PaaS in your Amazon Web Services environment.</p> </li> <li> <p>BYOL or AMI: Your Amazon Web Services based solution deployed as BYOL or AMI in the end customer's Amazon Web Services environment.</p> </li> <li> <p>Managed Services: The end customer's Amazon Web Services business management (For example: Consulting, design, implementation, billing support, cost optimization, technical support).</p> </li> <li> <p>Professional Services: Offerings to help enterprise end customers achieve specific business outcomes for enterprise cloud adoption (For example: Advisory or transformation planning).</p> </li> <li> <p>Resell: Amazon Web Services accounts and billing management for your customers.</p> </li> <li> <p>Other: Delivery model not described above.</p> </li> </ul>",
        "ProjectView$DeliveryModels": "<p> Describes the deployment or consumption model for the partner solution or offering. This field indicates how the project's solution will be delivered or implemented for the customer. </p>"
      }
    },
    "DisassociateOpportunityRequest": {
      "base": null,
      "refs": {
      }
    },
    "DisassociateOpportunityRequestRelatedEntityIdentifierString": {
      "base": null,
      "refs": {
        "DisassociateOpportunityRequest$RelatedEntityIdentifier": "<p>The related entity's identifier that you want to disassociate from the opportunity. Depending on the type of entity, this could be a simple identifier or an Amazon Resource Name (ARN) for entities managed through Amazon Web Services Marketplace.</p> <p>For Amazon Web Services Marketplace entities, use the Amazon Web Services Marketplace API to obtain the necessary ARNs. For guidance on retrieving these ARNs, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html\"> Amazon Web Services MarketplaceUsing the Amazon Web Services Marketplace Catalog API</a>.</p> <p>Validation: Ensure the identifier or ARN is valid and corresponds to an existing entity. An incorrect or invalid identifier results in an error.</p>"
      }
    },
    "DunsNumber": {
      "base": null,
      "refs": {
        "Account$Duns": "<p>Indicates the <code>Customer</code> DUNS number, if available.</p>"
      }
    },
    "Email": {
      "base": null,
      "refs": {
        "AssigneeContact$Email": "<p>Provides the email address of the assignee. This email is used for communications and notifications related to the opportunity.</p>",
        "AwsTeamMember$Email": "<p>Provides the Amazon Web Services team member's email address.</p>",
        "Contact$Email": "<p>The contact's email address associated with the <code>Opportunity</code>.</p>"
      }
    },
    "EngagementArn": {
      "base": null,
      "refs": {
        "CreateEngagementResponse$Arn": "<p> The Amazon Resource Name (ARN) that identifies the engagement. </p>",
        "EngagementSummary$Arn": "<p> The Amazon Resource Name (ARN) of the created engagement. </p>",
        "GetEngagementResponse$Arn": "<p> The Amazon Resource Name (ARN) of the engagement retrieved. </p>"
      }
    },
    "EngagementArnOrIdentifier": {
      "base": null,
      "refs": {
        "EngagementIdentifiers$member": null,
        "GetEngagementRequest$Identifier": "<p> Specifies the identifier of the Engagement record to retrieve. </p>",
        "ListEngagementMembersRequest$Identifier": "<p> Identifier of the engagement record to retrieve members from. </p>"
      }
    },
    "EngagementContextDetails": {
      "base": "<p> Provides detailed context information for an Engagement. This structure allows for specifying the type of context and its associated payload. </p>",
      "refs": {
        "EngagementContexts$member": null
      }
    },
    "EngagementContextPayload": {
      "base": "<p> Represents the payload of an Engagement context. The structure of this payload varies based on the context type specified in the EngagementContextDetails. </p>",
      "refs": {
        "EngagementContextDetails$Payload": "<p> Contains the specific details of the Engagement context. The structure of this payload varies depending on the Type field. </p>"
      }
    },
    "EngagementContextType": {
      "base": null,
      "refs": {
        "EngagementContextDetails$Type": "<p> Specifies the type of Engagement context. Valid values are \"CustomerProject\" or \"Document\", indicating whether the context relates to a customer project or a document respectively. </p>"
      }
    },
    "EngagementContexts": {
      "base": null,
      "refs": {
        "CreateEngagementRequest$Contexts": "<p> The <code>Contexts</code> field is a required array of objects, with a maximum of 5 contexts allowed, specifying detailed information about customer projects associated with the Engagement. Each context object contains a <code>Type</code> field indicating the context type, which must be <code>CustomerProject</code> in this version, and a <code>Payload</code> field containing the <code>CustomerProject</code> details. The <code>CustomerProject</code> object is composed of two main components: <code>Customer</code> and <code>Project</code>. The <code>Customer</code> object includes information such as <code>CompanyName</code>, <code>WebsiteUrl</code>, <code>Industry</code>, and <code>CountryCode</code>, providing essential details about the customer. The <code>Project</code> object contains <code>Title</code>, <code>BusinessProblem</code>, and <code>TargetCompletionDate</code>, offering insights into the specific project associated with the customer. This structure allows comprehensive context to be included within the Engagement, facilitating effective collaboration between parties by providing relevant customer and project information. </p>",
        "GetEngagementResponse$Contexts": "<p> A list of context objects associated with the engagement. Each context provides additional information related to the Engagement, such as customer projects or documents. </p>"
      }
    },
    "EngagementCustomer": {
      "base": "<p>Contains details about the customer associated with the Engagement Invitation, including company information and industry.</p>",
      "refs": {
        "CustomerProjectsContext$Customer": null,
        "OpportunityInvitationPayload$Customer": "<p>Contains information about the customer related to the opportunity in the Engagement Invitation. This data helps partners understand the customerâ€™s profile and requirements.</p>"
      }
    },
    "EngagementCustomerBusinessProblem": {
      "base": null,
      "refs": {
        "EngagementCustomerProjectDetails$BusinessProblem": "<p> A description of the business problem the project aims to solve. </p>",
        "ProjectDetails$BusinessProblem": "<p>Describes the business problem that the project aims to solve. This information is crucial for understanding the projectâ€™s goals and objectives.</p>"
      }
    },
    "EngagementCustomerProjectDetails": {
      "base": "<p> Provides comprehensive details about a customer project associated with an Engagement. This may include information such as project goals, timelines, and specific customer requirements. </p>",
      "refs": {
        "CustomerProjectsContext$Project": "<p> Information about the customer project associated with the Engagement. </p>"
      }
    },
    "EngagementCustomerProjectDetailsTargetCompletionDateString": {
      "base": null,
      "refs": {
        "EngagementCustomerProjectDetails$TargetCompletionDate": "<p> The target completion date for the customer's project. </p>"
      }
    },
    "EngagementCustomerProjectTitle": {
      "base": null,
      "refs": {
        "EngagementCustomerProjectDetails$Title": "<p> The title of the project. </p>"
      }
    },
    "EngagementDescription": {
      "base": null,
      "refs": {
        "CreateEngagementRequest$Description": "<p> Provides a description of the <code>Engagement</code>. </p>",
        "GetEngagementInvitationResponse$EngagementDescription": "<p> The description of the engagement associated with this invitation. </p>",
        "GetEngagementResponse$Description": "<p> A more detailed description of the engagement. This provides additional context or information about the engagement's purpose or scope. </p>"
      }
    },
    "EngagementIdentifier": {
      "base": null,
      "refs": {
        "CreateEngagementInvitationRequest$EngagementIdentifier": "<p> The unique identifier of the <code>Engagement</code> associated with the invitation. This parameter ensures the invitation is created within the correct <code>Engagement</code> context. </p>",
        "CreateEngagementResponse$Id": "<p> Unique identifier assigned to the newly created engagement. </p>",
        "CreateResourceSnapshotJobRequest$EngagementIdentifier": "<p> Specifies the identifier of the engagement associated with the resource to be snapshotted. </p>",
        "CreateResourceSnapshotRequest$EngagementIdentifier": "<p> The unique identifier of the engagement associated with this snapshot. This field links the snapshot to a specific engagement context. </p>",
        "EngagementInvitationSummary$EngagementId": "<p> The identifier of the Engagement associated with this invitation. This links the invitation to its parent Engagement. </p>",
        "EngagementResourceAssociationSummary$EngagementId": "<p> A unique identifier for the engagement associated with the resource. </p>",
        "EngagementSummary$Id": "<p> The unique identifier for the engagement. </p>",
        "GetEngagementInvitationResponse$EngagementId": "<p> The identifier of the engagement associated with this invitation.This ID links the invitation to its corresponding engagement. </p>",
        "GetEngagementResponse$Id": "<p> The unique resource identifier of the engagement retrieved. </p>",
        "GetResourceSnapshotJobResponse$EngagementId": "<p> The identifier of the engagement associated with this snapshot job. This links the job to a specific engagement context. </p>",
        "GetResourceSnapshotRequest$EngagementIdentifier": "<p>The unique identifier of the engagement associated with the snapshot. This field links the snapshot to a specific engagement context.</p>",
        "GetResourceSnapshotResponse$EngagementId": "<p>The identifier of the engagement associated with this snapshot. Matches the EngagementIdentifier specified in the request. </p>",
        "ListEngagementFromOpportunityTaskSummary$EngagementId": "<p> The unique identifier of the engagement created as a result of the task. This field is populated when the task is completed successfully. </p>",
        "ListEngagementResourceAssociationsRequest$EngagementIdentifier": "<p> Filters the results to include only associations related to the specified engagement. Use this when you want to find all resources associated with a specific engagement. </p>",
        "ListResourceSnapshotJobsRequest$EngagementIdentifier": "<p> The identifier of the engagement to filter the response. </p>",
        "ListResourceSnapshotsRequest$EngagementIdentifier": "<p> The unique identifier of the engagement associated with the snapshots. </p>",
        "ResourceSnapshotJobSummary$EngagementId": "<p> The unique identifier for the engagement within the AWS Partner Central system. This ID is used for direct references to the engagement within the service. </p>",
        "StartEngagementFromOpportunityTaskResponse$EngagementId": "<p> The identifier of the newly created engagement. Only populated if TaskStatus is COMPLETE. </p>"
      }
    },
    "EngagementIdentifiers": {
      "base": null,
      "refs": {
        "ListEngagementFromOpportunityTasksRequest$EngagementIdentifier": "<p> Filters tasks by the identifiers of the engagements they created or are associated with. </p>",
        "ListEngagementInvitationsRequest$EngagementIdentifier": "<p> Retrieves a list of engagement invitation summaries based on specified filters. The ListEngagementInvitations operation allows you to view all invitations that you have sent or received. You must specify the ParticipantType to filter invitations where you are either the SENDER or the RECEIVER. Invitations will automatically expire if not accepted within 15 days. </p>",
        "ListEngagementsRequest$EngagementIdentifier": "<p> An array of strings representing engagement identifiers to retrieve. </p>"
      }
    },
    "EngagementInvitationArn": {
      "base": null,
      "refs": {
        "CreateEngagementInvitationResponse$Arn": "<p> The Amazon Resource Name (ARN) that uniquely identifies the engagement invitation. </p>"
      }
    },
    "EngagementInvitationArnOrIdentifier": {
      "base": null,
      "refs": {
        "AcceptEngagementInvitationRequest$Identifier": "<p> The <code>Identifier</code> parameter in the <code>AcceptEngagementInvitationRequest</code> specifies the unique identifier of the <code>EngagementInvitation</code> to be accepted. Providing the correct identifier ensures that the intended invitation is accepted. </p>",
        "EngagementInvitationIdentifiers$member": null,
        "EngagementInvitationSummary$Id": "<p>Represents the unique identifier of the Engagement Invitation. This identifier is used to track the invitation and to manage responses like acceptance or rejection.</p>",
        "GetEngagementInvitationRequest$Identifier": "<p>Specifies the unique identifier for the retrieved engagement invitation.</p>",
        "GetEngagementInvitationResponse$Id": "<p>Unique identifier assigned to the engagement invitation being retrieved.</p>",
        "RejectEngagementInvitationRequest$Identifier": "<p>This is the unique identifier of the rejected <code>EngagementInvitation</code>. Providing the correct identifier helps to ensure that the intended invitation is rejected.</p>",
        "StartEngagementByAcceptingInvitationTaskRequest$Identifier": "<p>Specifies the unique identifier of the <code>EngagementInvitation</code> to be accepted. Providing the correct identifier helps ensure that the correct engagement is processed.</p>"
      }
    },
    "EngagementInvitationIdentifier": {
      "base": null,
      "refs": {
        "CreateEngagementInvitationResponse$Id": "<p> Unique identifier assigned to the newly created engagement invitation. </p>",
        "ListEngagementByAcceptingInvitationTaskSummary$EngagementInvitationId": "<p> The unique identifier of the engagement invitation that was accepted. </p>",
        "ListEngagementFromOpportunityTaskSummary$EngagementInvitationId": "<p> The unique identifier of the engagement identifier created as a result of the task. This field is populated when the task is completed successfully. </p>",
        "StartEngagementByAcceptingInvitationTaskResponse$EngagementInvitationId": "<p>Returns the identifier of the engagement invitation that was accepted and used to create the opportunity.</p>",
        "StartEngagementFromOpportunityTaskResponse$EngagementInvitationId": "<p> The identifier of the new engagement invitation. Only populated if TaskStatus is COMPLETE. </p>"
      }
    },
    "EngagementInvitationIdentifiers": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTasksRequest$EngagementInvitationIdentifier": "<p> Filters tasks by the identifiers of the engagement invitations they are processing. </p>"
      }
    },
    "EngagementInvitationPayloadType": {
      "base": null,
      "refs": {
        "EngagementInvitationSummary$PayloadType": "<p>Describes the type of payload associated with the Engagement Invitation, such as <code>Opportunity</code> or <code>MarketplaceOffer</code>. This helps partners understand the nature of the engagement request from AWS.</p>",
        "EngagementInvitationsPayloadType$member": null,
        "GetEngagementInvitationResponse$PayloadType": "<p>The type of payload contained in the engagement invitation, indicating what data or context the payload covers.</p>"
      }
    },
    "EngagementInvitationSummaries": {
      "base": null,
      "refs": {
        "ListEngagementInvitationsResponse$EngagementInvitationSummaries": "<p>An array containing summaries of engagement invitations. Each summary includes information such as the invitation title, invitation date, and the current status of the invitation.</p>"
      }
    },
    "EngagementInvitationSummary": {
      "base": "<p>Provides a summarized view of the Engagement Invitation, including details like the identifier, status, and sender. This summary helps partners track and manage AWS originated opportunities.</p>",
      "refs": {
        "EngagementInvitationSummaries$member": null
      }
    },
    "EngagementInvitationSummarySenderCompanyNameString": {
      "base": null,
      "refs": {
        "EngagementInvitationSummary$SenderCompanyName": "<p>Indicates the name of the company or AWS division that sent the Engagement Invitation. This information is useful for partners to know which part of AWS is requesting engagement.</p>"
      }
    },
    "EngagementInvitationsPayloadType": {
      "base": null,
      "refs": {
        "ListEngagementInvitationsRequest$PayloadType": "<p>Defines the type of payload associated with the engagement invitations to be listed. The attributes in this payload help decide on acceptance or rejection of the invitation.</p>"
      }
    },
    "EngagementMember": {
      "base": "<p>Engagement members are the participants in an Engagement, which is likely a collaborative project or business opportunity within the AWS partner network. Members can be different partner organizations or AWS accounts that are working together on a specific engagement. </p> <p>Each member is represented by their AWS Account ID, Company Name, and associated details. Members have a status within the Engagement (PENDING, ACCEPTED, REJECTED, or WITHDRAWN), indicating their current state of participation. Only existing members of an Engagement can view the list of other members. This implies a level of privacy and access control within the Engagement structure. </p>",
      "refs": {
        "EngagementMembers$member": null
      }
    },
    "EngagementMemberSummaries": {
      "base": null,
      "refs": {
        "GetEngagementInvitationResponse$ExistingMembers": "<p> A list of active members currently part of the Engagement. This array contains a maximum of 10 members, each represented by an object with the following properties. </p> <ul> <li> <p> CompanyName: The name of the member's company. </p> </li> <li> <p> WebsiteUrl: The website URL of the member's company. </p> </li> </ul>"
      }
    },
    "EngagementMemberSummary": {
      "base": "<p> The EngagementMemberSummary provides a snapshot of essential information about participants in an AWS Partner Central Engagement. This compact data structure encapsulates key details of each member, facilitating efficient collaboration and management within the Engagement. </p>",
      "refs": {
        "EngagementMemberSummaries$member": null
      }
    },
    "EngagementMembers": {
      "base": null,
      "refs": {
        "ListEngagementMembersResponse$EngagementMemberList": "<p> Provides a list of engagement members. </p>"
      }
    },
    "EngagementPageSize": {
      "base": null,
      "refs": {
        "ListEngagementsRequest$MaxResults": "<p> The maximum number of results to return in a single call. </p>"
      }
    },
    "EngagementResourceAssociationSummary": {
      "base": "<p> This provide a streamlined view of the relationships between engagements and resources. These summaries offer a crucial link between collaborative engagements and the specific resources involved, such as opportunities.These summaries are particularly valuable for partners navigating complex engagements with multiple resources. They enable quick insights into resource distribution across engagements, support efficient resource management, and help maintain a clear overview of collaborative activities. </p>",
      "refs": {
        "EngagementResourceAssociationSummaryList$member": null
      }
    },
    "EngagementResourceAssociationSummaryList": {
      "base": null,
      "refs": {
        "ListEngagementResourceAssociationsResponse$EngagementResourceAssociationSummaries": "<p> A list of engagement-resource association summaries. </p>"
      }
    },
    "EngagementScore": {
      "base": null,
      "refs": {
        "AwsOpportunityInsights$EngagementScore": "<p>Represents a score assigned by AWS to indicate the level of engagement and potential success for the opportunity. This score helps partners prioritize their efforts.</p>"
      }
    },
    "EngagementSort": {
      "base": "<p> Specifies the sorting parameters for listing Engagements. </p>",
      "refs": {
        "ListEngagementsRequest$Sort": "<p> An object that specifies the sort order of the results. </p>"
      }
    },
    "EngagementSortName": {
      "base": null,
      "refs": {
        "EngagementSort$SortBy": "<p> The field by which to sort the results. </p>"
      }
    },
    "EngagementSummary": {
      "base": "<p> An object that contains an <code>Engagement</code>'s subset of fields. </p>",
      "refs": {
        "EngagementSummaryList$member": null
      }
    },
    "EngagementSummaryList": {
      "base": null,
      "refs": {
        "ListEngagementsResponse$EngagementSummaryList": "<p> An array of engagement summary objects. </p>"
      }
    },
    "EngagementTitle": {
      "base": null,
      "refs": {
        "CreateEngagementRequest$Title": "<p> Specifies the title of the <code>Engagement</code>. </p>",
        "EngagementInvitationSummary$EngagementTitle": "<p>Provides a short title or description of the Engagement Invitation. This title helps partners quickly identify and differentiate between multiple engagement opportunities.</p>",
        "EngagementSummary$Title": "<p> The title of the engagement. </p>",
        "GetEngagementInvitationResponse$EngagementTitle": "<p>The title of the engagement invitation, summarizing the purpose or objectives of the opportunity shared by AWS.</p>",
        "GetEngagementResponse$Title": "<p> The title of the engagement. It provides a brief, descriptive name for the engagement that is meaningful and easily recognizable. </p>"
      }
    },
    "ExpectedCustomerSpend": {
      "base": "<p>Provides an estimate of the revenue that the partner is expected to generate from the opportunity. This information helps partners assess the financial value of the project.</p>",
      "refs": {
        "ExpectedCustomerSpendList$member": null
      }
    },
    "ExpectedCustomerSpendCurrencyCodeEnum": {
      "base": null,
      "refs": {
        "ExpectedCustomerSpend$CurrencyCode": "<p>Indicates the currency in which the revenue estimate is provided. This helps in understanding the financial impact across different markets.</p>"
      }
    },
    "ExpectedCustomerSpendList": {
      "base": null,
      "refs": {
        "AwsOpportunityProject$ExpectedCustomerSpend": "<p>Indicates the expected spending by the customer over the course of the project. This value helps partners and AWS estimate the financial impact of the opportunity. Use the <a href=\"https://calculator.aws/#/\">AWS Pricing Calculator</a> to create an estimate of the customerâ€™s total spend. If only annual recurring revenue (ARR) is available, distribute it across 12 months to provide an average monthly value.</p>",
        "Project$ExpectedCustomerSpend": "<p>Represents the estimated amount that the customer is expected to spend on AWS services related to the opportunity. This helps in evaluating the potential financial value of the opportunity for AWS.</p>",
        "ProjectDetails$ExpectedCustomerSpend": "<p>Contains revenue estimates for the partner related to the project. This field provides an idea of the financial potential of the opportunity for the partner.</p>",
        "ProjectSummary$ExpectedCustomerSpend": "<p>Provides a summary of the expected customer spend for the project, offering a high-level view of the potential financial impact.</p>",
        "ProjectView$ExpectedCustomerSpend": "<p> Provides information about the anticipated customer spend related to this project. This may include details such as amount, frequency, and currency of expected expenditure. </p>"
      }
    },
    "ExpectedCustomerSpendTargetCompanyString": {
      "base": null,
      "refs": {
        "ExpectedCustomerSpend$TargetCompany": "<p>Specifies the name of the partner company that is expected to generate revenue from the opportunity. This field helps track the partnerâ€™s involvement in the opportunity.</p>"
      }
    },
    "GetAwsOpportunitySummaryRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAwsOpportunitySummaryResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetEngagementInvitationRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetEngagementInvitationResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetEngagementInvitationResponseSenderCompanyNameString": {
      "base": null,
      "refs": {
        "GetEngagementInvitationResponse$SenderCompanyName": "<p>The name of the AWS organization or team that sent the engagement invitation.</p>"
      }
    },
    "GetEngagementRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetEngagementResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetOpportunityRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetOpportunityResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetOpportunityResponsePartnerOpportunityIdentifierString": {
      "base": null,
      "refs": {
        "GetOpportunityResponse$PartnerOpportunityIdentifier": "<p>Specifies the opportunity's unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload sent back to the partner.</p>"
      }
    },
    "GetResourceSnapshotJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetResourceSnapshotJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetResourceSnapshotRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetResourceSnapshotResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetSellingSystemSettingsRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetSellingSystemSettingsResponse": {
      "base": null,
      "refs": {
      }
    },
    "Industry": {
      "base": null,
      "refs": {
        "Account$Industry": "<p>Specifies the industry the end <code>Customer</code> belongs to that's associated with the <code>Opportunity</code>. It refers to the category or sector where the customer's business operates. This is a required field.</p>",
        "AccountSummary$Industry": "<p>Specifies which industry the end <code>Customer</code> belongs to associated with the <code>Opportunity</code>. It refers to the category or sector that the customer's business operates in.</p> <p>To submit a value outside the picklist, use <code>Other</code>.</p> <p>Conditionally mandatory if <code>Other</code> is selected for Industry Vertical in LOVs.</p>",
        "EngagementCustomer$Industry": "<p>Specifies the industry to which the customerâ€™s company belongs. This field helps categorize the opportunity based on the customerâ€™s business sector.</p>"
      }
    },
    "Integer": {
      "base": null,
      "refs": {
        "EngagementSummary$MemberCount": "<p> The number of members in the engagement. </p>",
        "GetEngagementResponse$MemberCount": "<p> Specifies the current count of members participating in the Engagement. This count includes all active members regardless of their roles or permissions within the Engagement. </p>"
      }
    },
    "InternalServerException": {
      "base": "<p>This error occurs when the specified resource canâ€™t be found or doesn't exist. Resource ID and type might be incorrect.</p> <p>Suggested action: This is usually a transient error. Retry after the provided retry delay or a short interval. If the problem persists, contact AWS support.</p>",
      "refs": {
      }
    },
    "Invitation": {
      "base": "<p> The Invitation structure represents an invitation exchanged between partners and AWS. It includes a message, receiver information, and a payload providing context for the invitation. </p>",
      "refs": {
        "CreateEngagementInvitationRequest$Invitation": "<p> The <code>Invitation</code> object all information necessary to initiate an engagement invitation to a partner. It contains a personalized message from the sender, the invitation's receiver, and a payload. The <code>Payload</code> can be the <code>OpportunityInvitation</code>, which includes detailed structures for sender contacts, partner responsibilities, customer information, and project details. </p>"
      }
    },
    "InvitationMessage": {
      "base": null,
      "refs": {
        "GetEngagementInvitationResponse$InvitationMessage": "<p> The message sent to the invited partner when the invitation was created. </p>",
        "Invitation$Message": "<p> A message accompanying the invitation. </p>"
      }
    },
    "InvitationStatus": {
      "base": null,
      "refs": {
        "EngagementInvitationSummary$Status": "<p>Represents the current status of the Engagement Invitation, such as <code>Pending</code>, <code>Accepted</code>, or <code>Rejected</code>. The status helps track the progress and response to the invitation.</p>",
        "GetEngagementInvitationResponse$Status": "<p>The current status of the engagement invitation.</p>",
        "InvitationStatusList$member": null
      }
    },
    "InvitationStatusList": {
      "base": null,
      "refs": {
        "ListEngagementInvitationsRequest$Status": "<p> Status values to filter the invitations. </p>"
      }
    },
    "InvolvementTypeChangeReason": {
      "base": null,
      "refs": {
        "GetAwsOpportunitySummaryResponse$InvolvementTypeChangeReason": "<p>Provides a reason for any changes in the involvement type of AWS in the opportunity. This field is used to track why the level of AWS engagement has changed from <code>For Visibility Only</code> to <code>Co-sell</code> offering transparency into the partnership dynamics.</p>"
      }
    },
    "JobTitle": {
      "base": null,
      "refs": {
        "AssigneeContact$BusinessTitle": "<p>Specifies the business title of the assignee managing the opportunity. This helps clarify the individual's role and responsibilities within the organization. Use the value <code>PartnerAccountManager</code> to update details of the opportunity owner.</p>",
        "Contact$BusinessTitle": "<p>The partner contact's title (job title or role) associated with the <code>Opportunity</code>. <code>BusinessTitle</code> supports either <code>PartnerAccountManager</code> or <code>OpportunityOwner</code>.</p>",
        "SenderContact$BusinessTitle": "<p>The sender-provided contact's title (job title or role) associated with the <code>EngagementInvitation</code>.</p>"
      }
    },
    "LastModifiedDate": {
      "base": "<p>Defines a filter to retrieve opportunities based on the last modified date. This filter is useful for tracking changes or updates to opportunities over time.</p>",
      "refs": {
        "ListOpportunitiesRequest$LastModifiedDate": "<p>Filters the opportunities based on their last modified date. This filter helps retrieve opportunities that were updated after the specified date, allowing partners to track recent changes or updates.</p>"
      }
    },
    "LifeCycle": {
      "base": "<p>An object that contains the <code>Opportunity</code> lifecycle's details.</p>",
      "refs": {
        "CreateOpportunityRequest$LifeCycle": "<p>An object that contains lifecycle details for the <code>Opportunity</code>.</p>",
        "GetOpportunityResponse$LifeCycle": "<p>An object that contains lifecycle details for the <code>Opportunity</code>.</p>",
        "UpdateOpportunityRequest$LifeCycle": "<p>An object that contains lifecycle details for the <code>Opportunity</code>.</p>"
      }
    },
    "LifeCycleForView": {
      "base": "<p> Provides the lifecycle view of an opportunity resource shared through a snapshot. </p>",
      "refs": {
        "OpportunitySummaryView$Lifecycle": "<p> Contains information about the opportunity's lifecycle, including its current stage, status, and important dates such as creation and last modification times. </p>"
      }
    },
    "LifeCycleForViewNextStepsString": {
      "base": null,
      "refs": {
        "LifeCycleForView$NextSteps": "<p> Describes the next steps for the opportunity shared through a snapshot. </p>"
      }
    },
    "LifeCycleNextStepsHistoryList": {
      "base": null,
      "refs": {
        "LifeCycle$NextStepsHistory": "<p>Captures a chronological record of the next steps or actions planned or taken for the current opportunity, along with the timestamp.</p>"
      }
    },
    "LifeCycleNextStepsString": {
      "base": null,
      "refs": {
        "LifeCycle$NextSteps": "<p>Specifies the upcoming actions or tasks for the <code>Opportunity</code>. Use this field to communicate with Amazon Web Services about the next actions required for the <code>Opportunity</code>.</p>"
      }
    },
    "LifeCycleSummary": {
      "base": "<p>An object that contains a <code>LifeCycle</code> object's subset of fields.</p>",
      "refs": {
        "OpportunitySummary$LifeCycle": "<p>An object that contains the <code>Opportunity</code>'s lifecycle details.</p>"
      }
    },
    "LifeCycleSummaryNextStepsString": {
      "base": null,
      "refs": {
        "LifeCycleSummary$NextSteps": "<p>Specifies the upcoming actions or tasks for the <code>Opportunity</code>. This field is utilized to communicate to Amazon Web Services the next actions required for the <code>Opportunity</code>.</p>"
      }
    },
    "ListEngagementByAcceptingInvitationTaskSummaries": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTasksResponse$TaskSummaries": "<p> An array of <code>EngagementByAcceptingInvitationTaskSummary</code> objects, each representing a task that matches the specified filters. The array may be empty if no tasks match the criteria. </p>"
      }
    },
    "ListEngagementByAcceptingInvitationTaskSummary": {
      "base": "<p> Specifies a subset of fields associated with tasks related to accepting an engagement invitation. </p>",
      "refs": {
        "ListEngagementByAcceptingInvitationTaskSummaries$member": null
      }
    },
    "ListEngagementByAcceptingInvitationTasksRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementByAcceptingInvitationTasksRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTasksRequest$MaxResults": "<p> Use this parameter to control the number of items returned in each request, which can be useful for performance tuning and managing large result sets. </p>"
      }
    },
    "ListEngagementByAcceptingInvitationTasksRequestNextTokenString": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTasksRequest$NextToken": "<p> Use this parameter for pagination when the result set spans multiple pages. This value is obtained from the NextToken field in the response of a previous call to this API. </p>"
      }
    },
    "ListEngagementByAcceptingInvitationTasksResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementFromOpportunityTaskSummaries": {
      "base": null,
      "refs": {
        "ListEngagementFromOpportunityTasksResponse$TaskSummaries": "<p> TaskSummaries An array of TaskSummary objects containing details about each task. </p>"
      }
    },
    "ListEngagementFromOpportunityTaskSummary": {
      "base": "<p> Provides a summary of a task related to creating an engagement from an opportunity. This structure contains key information about the task's status, associated identifiers, and any failure details. </p>",
      "refs": {
        "ListEngagementFromOpportunityTaskSummaries$member": null
      }
    },
    "ListEngagementFromOpportunityTasksRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementFromOpportunityTasksRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "ListEngagementFromOpportunityTasksRequest$MaxResults": "<p> Specifies the maximum number of results to return in a single page of the response.Use this parameter to control the number of items returned in each request, which can be useful for performance tuning and managing large result sets. </p>"
      }
    },
    "ListEngagementFromOpportunityTasksRequestNextTokenString": {
      "base": null,
      "refs": {
        "ListEngagementFromOpportunityTasksRequest$NextToken": "<p> The token for requesting the next page of results. This value is obtained from the NextToken field in the response of a previous call to this API. Use this parameter for pagination when the result set spans multiple pages. </p>"
      }
    },
    "ListEngagementFromOpportunityTasksResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementInvitationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementInvitationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementMembersRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementMembersResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementResourceAssociationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementResourceAssociationsRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "ListEngagementResourceAssociationsRequest$MaxResults": "<p> Limits the number of results returned in a single call. Use this to control the number of results returned, especially useful for pagination. </p>"
      }
    },
    "ListEngagementResourceAssociationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEngagementsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListOpportunitiesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListOpportunitiesRequestCustomerCompanyNameList": {
      "base": null,
      "refs": {
        "ListOpportunitiesRequest$CustomerCompanyName": "<p>Filters the opportunities based on the customer's company name. This allows partners to search for opportunities associated with a specific customer by matching the provided company name string.</p>"
      }
    },
    "ListOpportunitiesRequestIdentifierList": {
      "base": null,
      "refs": {
        "ListOpportunitiesRequest$Identifier": "<p>Filters the opportunities based on the opportunity identifier. This allows partners to retrieve specific opportunities by providing their unique identifiers, ensuring precise results.</p>"
      }
    },
    "ListOpportunitiesRequestLifeCycleReviewStatusList": {
      "base": null,
      "refs": {
        "ListOpportunitiesRequest$LifeCycleReviewStatus": "<p>Filters the opportunities based on their current lifecycle approval status. Use this filter to retrieve opportunities with statuses such as <code>Pending Submission</code>, <code>In Review</code>, <code>Action Required</code>, or <code>Approved</code>.</p>"
      }
    },
    "ListOpportunitiesRequestLifeCycleStageList": {
      "base": null,
      "refs": {
        "ListOpportunitiesRequest$LifeCycleStage": "<p>Filters the opportunities based on their lifecycle stage. This filter allows partners to retrieve opportunities at various stages in the sales cycle, such as <code>Qualified</code>, <code>Technical Validation</code>, <code>Business Validation</code>, or <code>Closed Won</code>.</p>"
      }
    },
    "ListOpportunitiesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListResourceSnapshotJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListResourceSnapshotJobsRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "ListResourceSnapshotJobsRequest$MaxResults": "<p> The maximum number of results to return in a single call. If omitted, defaults to 50. </p>"
      }
    },
    "ListResourceSnapshotJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListResourceSnapshotsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListResourceSnapshotsRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "ListResourceSnapshotsRequest$MaxResults": "<p> The maximum number of results to return in a single call. </p>"
      }
    },
    "ListResourceSnapshotsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListSolutionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListSolutionsRequestCategoryList": {
      "base": null,
      "refs": {
        "ListSolutionsRequest$Category": "<p>Filters the solutions based on the category to which they belong. This allows partners to search for solutions within specific categories, such as <code>Software</code>, <code>Consulting</code>, or <code>Managed Services</code>.</p>"
      }
    },
    "ListSolutionsRequestIdentifierList": {
      "base": null,
      "refs": {
        "ListSolutionsRequest$Identifier": "<p>Filters the solutions based on their unique identifier. Use this filter to retrieve specific solutions by providing the solution's identifier for accurate results.</p>"
      }
    },
    "ListSolutionsRequestStatusList": {
      "base": null,
      "refs": {
        "ListSolutionsRequest$Status": "<p>Filters solutions based on their status. This filter helps partners manage their solution portfolios effectively.</p>"
      }
    },
    "ListSolutionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTasksSortBase": {
      "base": "<p> Defines the sorting parameters for listing tasks. This structure allows for specifying the field to sort by and the order of sorting. </p>",
      "refs": {
        "ListEngagementByAcceptingInvitationTasksRequest$Sort": "<p> Specifies the sorting criteria for the returned results. This allows you to order the tasks based on specific attributes. </p>",
        "ListEngagementFromOpportunityTasksRequest$Sort": "<p> Specifies the sorting criteria for the returned results. This allows you to order the tasks based on specific attributes. </p>"
      }
    },
    "ListTasksSortName": {
      "base": null,
      "refs": {
        "ListTasksSortBase$SortBy": "<p> Specifies the field by which the task list should be sorted. </p>"
      }
    },
    "Marketing": {
      "base": "<p>An object that contains marketing details for the <code>Opportunity</code>.</p>",
      "refs": {
        "CreateOpportunityRequest$Marketing": "<p>This object contains marketing details and is optional for an opportunity.</p>",
        "GetOpportunityResponse$Marketing": "<p>An object that contains marketing details for the <code>Opportunity</code>.</p>",
        "UpdateOpportunityRequest$Marketing": "<p>An object that contains marketing details for the <code>Opportunity</code>.</p>"
      }
    },
    "MarketingSource": {
      "base": null,
      "refs": {
        "Marketing$Source": "<p>Indicates if the <code>Opportunity</code> was sourced from an Amazon Web Services marketing activity. Use the value <code>Marketing Activity</code>. Use <code>None</code> if it's not associated with an Amazon Web Services marketing activity. This field helps Amazon Web Services track the return on marketing investments and enables better distribution of marketing budgets among partners.</p>"
      }
    },
    "MemberCompanyName": {
      "base": null,
      "refs": {
        "EngagementMember$CompanyName": "<p> The official name of the member's company or organization. </p>",
        "EngagementMemberSummary$CompanyName": "<p> The official name of the member's company or organization. </p>"
      }
    },
    "MemberPageSize": {
      "base": null,
      "refs": {
        "ListEngagementMembersRequest$MaxResults": "<p> The maximum number of results to return in a single call. </p>"
      }
    },
    "MonetaryValue": {
      "base": "<p>Specifies payments details.</p>",
      "refs": {
        "SoftwareRevenue$Value": "<p>Specifies the payment value (amount and currency).</p>"
      }
    },
    "MonetaryValueAmountString": {
      "base": null,
      "refs": {
        "MonetaryValue$Amount": "<p>Specifies the payment amount.</p>"
      }
    },
    "Name": {
      "base": null,
      "refs": {
        "SenderContact$FirstName": "<p>The sender-provided contact's last name associated with the <code>EngagementInvitation</code>.</p>",
        "SenderContact$LastName": "<p>The sender-provided contact's first name associated with the <code>EngagementInvitation</code>.</p>"
      }
    },
    "NationalSecurity": {
      "base": null,
      "refs": {
        "CreateOpportunityRequest$NationalSecurity": "<p>Indicates whether the <code>Opportunity</code> pertains to a national security project. This field must be set to <code>true</code> only when the customer's industry is <i>Government</i>. Additional privacy and security measures apply during the review and management process for opportunities marked as <code>NationalSecurity</code>.</p>",
        "GetOpportunityResponse$NationalSecurity": "<p>Indicates whether the <code>Opportunity</code> pertains to a national security project. This field must be set to <code>true</code> only when the customer's industry is <i>Government</i>. Additional privacy and security measures apply during the review and management process for opportunities marked as <code>NationalSecurity</code>.</p>",
        "UpdateOpportunityRequest$NationalSecurity": "<p>Specifies if the opportunity is associated with national security concerns. This flag is only applicable when the industry is <code>Government</code>. For national-security-related opportunities, validation and compliance rules may apply, impacting the opportunity's visibility and processing.</p>"
      }
    },
    "NextStepsHistory": {
      "base": "<p>Read-only; shows the last 50 values and change dates for the <code>NextSteps</code> field.</p>",
      "refs": {
        "LifeCycleNextStepsHistoryList$member": null
      }
    },
    "OpportunityArn": {
      "base": null,
      "refs": {
        "GetOpportunityResponse$Arn": "<p>The Amazon Resource Name (ARN) that uniquely identifies the opportunity.</p>",
        "OpportunitySummary$Arn": "<p> The Amazon Resource Name (ARN) for the opportunity. This globally unique identifier can be used for IAM policies and cross-service references. </p>"
      }
    },
    "OpportunityEngagementInvitationSort": {
      "base": "<p>Defines sorting options for retrieving Engagement Invitations. Sorting can be done based on various criteria like the invitation date or status.</p>",
      "refs": {
        "ListEngagementInvitationsRequest$Sort": "<p>Specifies the sorting options for listing engagement invitations. Invitations can be sorted by fields such as <code>InvitationDate</code> or <code>Status</code> to help partners view results in their preferred order.</p>"
      }
    },
    "OpportunityEngagementInvitationSortName": {
      "base": null,
      "refs": {
        "OpportunityEngagementInvitationSort$SortBy": "<p>Specifies the field by which the Engagement Invitations are sorted. Common values include <code>InvitationDate</code> and <code>Status</code>.</p>"
      }
    },
    "OpportunityIdentifier": {
      "base": null,
      "refs": {
        "AssignOpportunityRequest$Identifier": "<p>Requires the <code>Opportunity</code>'s unique identifier when you want to assign it to another user. Provide the correct identifier so the intended opportunity is reassigned.</p>",
        "AssociateOpportunityRequest$OpportunityIdentifier": "<p>Requires the <code>Opportunity</code>'s unique identifier when you want to associate it with a related entity. Provide the correct identifier so the intended opportunity is updated with the association.</p>",
        "CreateOpportunityResponse$Id": "<p>Read-only, system-generated <code>Opportunity</code> unique identifier. Amazon Web Services creates this identifier, and it's used for all subsequent opportunity actions, such as updates, associations, and submissions. It helps to ensure that each opportunity is accurately tracked and managed.</p>",
        "DisassociateOpportunityRequest$OpportunityIdentifier": "<p>The opportunity's unique identifier for when you want to disassociate it from related entities. This identifier helps to ensure that the correct opportunity is updated.</p> <p>Validation: Ensure that the provided identifier corresponds to an existing opportunity in the Amazon Web Services system because incorrect identifiers result in an error and no changes are made.</p>",
        "GetAwsOpportunitySummaryRequest$RelatedOpportunityIdentifier": "<p>The unique identifier for the related partner opportunity. Use this field to correlate an AWS opportunity with its corresponding partner opportunity.</p>",
        "GetAwsOpportunitySummaryResponse$RelatedOpportunityId": "<p>Provides the unique identifier of the related partner opportunity, allowing partners to link the AWS Opportunity to their corresponding opportunity in their CRM system.</p>",
        "GetOpportunityRequest$Identifier": "<p>Read-only, system generated <code>Opportunity</code> unique identifier.</p>",
        "GetOpportunityResponse$Id": "<p>Read-only, system generated <code>Opportunity</code> unique identifier.</p>",
        "ListEngagementByAcceptingInvitationTaskSummary$OpportunityId": "<p> Unique identifier of opportunity that was created. </p>",
        "ListEngagementFromOpportunityTaskSummary$OpportunityId": "<p> The unique identifier of the original Opportunity from which the Engagement is being created. This field helps track the source of the Engagement creation task. </p>",
        "ListOpportunitiesRequestIdentifierList$member": null,
        "OpportunityIdentifiers$member": null,
        "OpportunitySummary$Id": "<p>Read-only, system-generated <code>Opportunity</code> unique identifier.</p>",
        "Project$RelatedOpportunityIdentifier": "<p>Specifies the current opportunity's parent opportunity identifier.</p>",
        "StartEngagementByAcceptingInvitationTaskResponse$OpportunityId": "<p>Returns the original opportunity identifier passed in the request. This is the unique identifier for the opportunity.</p>",
        "StartEngagementFromOpportunityTaskRequest$Identifier": "<p>The unique identifier of the opportunity from which the engagement task is to be initiated. This helps ensure that the task is applied to the correct opportunity.</p>",
        "StartEngagementFromOpportunityTaskResponse$OpportunityId": "<p>Returns the original opportunity identifier passed in the request, which is the unique identifier for the opportunity created in the partnerâ€™s system.</p>",
        "SubmitOpportunityRequest$Identifier": "<p> The identifier of the opportunity previously created by partner and needs to be submitted. </p>",
        "UpdateOpportunityRequest$Identifier": "<p>Read-only, system generated <code>Opportunity</code> unique identifier.</p>",
        "UpdateOpportunityResponse$Id": "<p>Read-only, system generated <code>Opportunity</code> unique identifier.</p>"
      }
    },
    "OpportunityIdentifiers": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTasksRequest$OpportunityIdentifier": "<p> Filters tasks by the identifiers of the opportunities they created or are associated with. </p>",
        "ListEngagementFromOpportunityTasksRequest$OpportunityIdentifier": "<p> The identifier of the original opportunity associated with this task. </p>"
      }
    },
    "OpportunityInvitationPayload": {
      "base": "<p>Represents the data payload of an Engagement Invitation for a specific opportunity. This contains detailed information that partners use to evaluate the engagement.</p>",
      "refs": {
        "Payload$OpportunityInvitation": "<p>Specifies the details of the opportunity invitation within the Engagement Invitation payload. This data helps partners understand the context, scope, and expected involvement for the opportunity from AWS.</p>"
      }
    },
    "OpportunityOrigin": {
      "base": null,
      "refs": {
        "CreateOpportunityRequest$Origin": "<p>Specifies the origin of the opportunity, indicating if it was sourced from Amazon Web Services or the partner. For all opportunities created with <code>Catalog: AWS</code>, this field must only be <code>Partner Referral</code>. However, when using <code>Catalog: Sandbox</code>, you can set this field to <code>AWS Referral</code> to simulate Amazon Web Services referral creation. This allows Amazon Web Services-originated flows testing in the sandbox catalog.</p>",
        "GetAwsOpportunitySummaryResponse$Origin": "<p>Specifies whether the AWS Opportunity originated from AWS or the partner. This helps distinguish between opportunities that were sourced by AWS and those referred by the partner.</p>"
      }
    },
    "OpportunitySort": {
      "base": "<p>Object that configures response sorting.</p>",
      "refs": {
        "ListOpportunitiesRequest$Sort": "<p>An object that specifies how the response is sorted. The default <code>Sort.SortBy</code> value is <code>LastModifiedDate</code>.</p>"
      }
    },
    "OpportunitySortName": {
      "base": null,
      "refs": {
        "OpportunitySort$SortBy": "<p>Field name to sort by.</p>"
      }
    },
    "OpportunitySummaries": {
      "base": null,
      "refs": {
        "ListOpportunitiesResponse$OpportunitySummaries": "<p>An array that contains minimal details for opportunities that match the request criteria. This summary view provides a quick overview of relevant opportunities.</p>"
      }
    },
    "OpportunitySummary": {
      "base": "<p>An object that contains an <code>Opportunity</code>'s subset of fields.</p>",
      "refs": {
        "OpportunitySummaries$member": null
      }
    },
    "OpportunitySummaryView": {
      "base": "<p> Provides a comprehensive view of an opportunity summary, including lifecycle information, team details, opportunity type, primary needs from AWS, and associated project information. </p>",
      "refs": {
        "ResourceSnapshotPayload$OpportunitySummary": "<p> An object that contains an <code>opportunity</code>'s subset of fields. </p>"
      }
    },
    "OpportunityType": {
      "base": null,
      "refs": {
        "CreateOpportunityRequest$OpportunityType": "<p>Specifies the opportunity type as a renewal, new, or expansion.</p> <p>Opportunity types:</p> <ul> <li> <p>New opportunity: Represents a new business opportunity with a potential customer that's not previously engaged with your solutions or services.</p> </li> <li> <p>Renewal opportunity: Represents an opportunity to renew an existing contract or subscription with a current customer, ensuring continuity of service.</p> </li> <li> <p>Expansion opportunity: Represents an opportunity to expand the scope of an existing contract or subscription, either by adding new services or increasing the volume of existing services for a current customer.</p> </li> </ul>",
        "GetOpportunityResponse$OpportunityType": "<p>Specifies the opportunity type as renewal, new, or expansion.</p> <p>Opportunity types:</p> <ul> <li> <p>New opportunity: Represents a new business opportunity with a potential customer that's not previously engaged with your solutions or services.</p> </li> <li> <p>Renewal opportunity: Represents an opportunity to renew an existing contract or subscription with a current customer, which helps to ensure service continuity.</p> </li> <li> <p>Expansion opportunity: Represents an opportunity to expand the scope of a customer's contract or subscription, either by adding new services or increasing the volume of existing services.</p> </li> </ul>",
        "OpportunitySummary$OpportunityType": "<p>Specifies opportunity type as a renewal, new, or expansion.</p> <p>Opportunity types:</p> <ul> <li> <p>New Opportunity: Represents a new business opportunity with a potential customer that's not previously engaged with your solutions or services.</p> </li> <li> <p>Renewal Opportunity: Represents an opportunity to renew an existing contract or subscription with a current customer, ensuring continuity of service.</p> </li> <li> <p>Expansion Opportunity: Represents an opportunity to expand the scope of an existing contract or subscription, either by adding new services or increasing the volume of existing services for a current customer.</p> </li> </ul>",
        "OpportunitySummaryView$OpportunityType": "<p> Specifies the opportunity type. </p>",
        "UpdateOpportunityRequest$OpportunityType": "<p>Specifies the opportunity type as a renewal, new, or expansion.</p> <p>Opportunity types:</p> <ul> <li> <p>New opportunity: Represents a new business opportunity with a potential customer that's not previously engaged with your solutions or services.</p> </li> <li> <p>Renewal opportunity: Represents an opportunity to renew an existing contract or subscription with a current customer, ensuring continuity of service.</p> </li> <li> <p>Expansion opportunity: Represents an opportunity to expand the scope of an existing contract or subscription, either by adding new services or increasing the volume of existing services for a current customer.</p> </li> </ul>"
      }
    },
    "PageSize": {
      "base": null,
      "refs": {
        "ListEngagementInvitationsRequest$MaxResults": "<p>Specifies the maximum number of engagement invitations to return in the response. If more results are available, a pagination token will be provided.</p>",
        "ListOpportunitiesRequest$MaxResults": "<p>Specifies the maximum number of results to return in a single call. This limits the number of opportunities returned in the response to avoid providing too many results at once.</p> <p>Default: 20</p>",
        "ListSolutionsRequest$MaxResults": "<p>The maximum number of results returned by a single call. This value must be provided in the next call to retrieve the next set of results.</p> <p>Default: 20</p>"
      }
    },
    "ParticipantType": {
      "base": null,
      "refs": {
        "EngagementInvitationSummary$ParticipantType": "<p>Identifies the role of the caller in the engagement invitation.</p>",
        "ListEngagementInvitationsRequest$ParticipantType": "<p>Specifies the type of participant for which to list engagement invitations. Identifies the role of the participant.</p>"
      }
    },
    "PartnerOpportunityTeamMembersList": {
      "base": null,
      "refs": {
        "CreateOpportunityRequest$OpportunityTeam": "<p>Represents the internal team handling the opportunity. Specify collaborating members of this opportunity who are within the partner's organization.</p>",
        "GetOpportunityResponse$OpportunityTeam": "<p>Represents the internal team handling the opportunity. Specify the members involved in collaborating on this opportunity within the partner's organization.</p>",
        "OpportunitySummaryView$OpportunityTeam": "<p> Represents the internal team handling the opportunity. Specify the members involved in collaborating on an opportunity within the partner's organization. </p>"
      }
    },
    "Payload": {
      "base": "<p>Contains the data payload associated with the Engagement Invitation. This payload includes essential details related to the AWS opportunity and is used by partners to evaluate whether to accept or reject the engagement.</p>",
      "refs": {
        "GetEngagementInvitationResponse$Payload": "<p>Details of the engagement invitation payload, including specific data relevant to the invitation's contents, such as customer information and opportunity insights.</p>",
        "Invitation$Payload": null
      }
    },
    "PaymentFrequency": {
      "base": null,
      "refs": {
        "ExpectedCustomerSpend$Frequency": "<p>Indicates how frequently the customer is expected to spend the projected amount. This can include values such as <code>Monthly</code>, <code>Quarterly</code>, or <code>Annually</code>. The default value is <code>Monthly</code>, representing recurring monthly spend.</p>"
      }
    },
    "PhoneNumber": {
      "base": null,
      "refs": {
        "Contact$Phone": "<p>The contact's phone number associated with the <code>Opportunity</code>.</p>",
        "SenderContact$Phone": "<p>The sender-provided contact's phone number associated with the <code>EngagementInvitation</code>.</p>"
      }
    },
    "PrimaryNeedFromAws": {
      "base": null,
      "refs": {
        "PrimaryNeedsFromAws$member": null
      }
    },
    "PrimaryNeedsFromAws": {
      "base": null,
      "refs": {
        "CreateOpportunityRequest$PrimaryNeedsFromAws": "<p>Identifies the type of support the partner needs from Amazon Web Services.</p> <p>Valid values:</p> <ul> <li> <p>Cosellâ€”Architectural Validation: Confirmation from Amazon Web Services that the partner's proposed solution architecture is aligned with Amazon Web Services best practices and poses minimal architectural risks.</p> </li> <li> <p>Cosellâ€”Business Presentation: Request Amazon Web Services seller's participation in a joint customer presentation.</p> </li> <li> <p>Cosellâ€”Competitive Information: Access to Amazon Web Services competitive resources and support for the partner's proposed solution.</p> </li> <li> <p>Cosellâ€”Pricing Assistance: Connect with an Amazon Web Services seller for support situations where a partner may be receiving an upfront discount on a service (for example: EDP deals).</p> </li> <li> <p>Cosellâ€”Technical Consultation: Connect with an Amazon Web Services Solutions Architect to address the partner's questions about the proposed solution.</p> </li> <li> <p>Cosellâ€”Total Cost of Ownership Evaluation: Assistance with quoting different cost savings of proposed solutions on Amazon Web Services versus on-premises or a traditional hosting environment.</p> </li> <li> <p>Cosellâ€”Deal Support: Request Amazon Web Services seller's support to progress the opportunity (for example: joint customer call, strategic positioning).</p> </li> <li> <p>Cosellâ€”Support for Public Tender/RFx: Opportunity related to the public sector where the partner needs Amazon Web Services RFx support.</p> </li> <li> <p>Do Not Need Support from AWS Sales Rep: Indicates that a partner doesn't need support from an Amazon Web Services sales representative, and the partner solely manages the opportunity. It's possible to request coselling support on these opportunities at any stage during their lifecycles. This is also known as a for-visibility-only (FVO) opportunity.</p> </li> </ul>",
        "GetOpportunityResponse$PrimaryNeedsFromAws": "<p>Identifies the type of support the partner needs from Amazon Web Services.</p> <p>Valid values:</p> <ul> <li> <p>Cosellâ€”Architectural Validation: Confirmation from Amazon Web Services that the partner's proposed solution architecture is aligned with Amazon Web Services best practices and poses minimal architectural risks.</p> </li> <li> <p>Cosellâ€”Business Presentation: Request Amazon Web Services seller's participation in a joint customer presentation.</p> </li> <li> <p>Cosellâ€”Competitive Information: Access to Amazon Web Services competitive resources and support for the partner's proposed solution.</p> </li> <li> <p>Cosellâ€”Pricing Assistance: Connect with an Amazon Web Services seller for support situations where a partner may be receiving an upfront discount on a service (for example: EDP deals).</p> </li> <li> <p>Cosellâ€”Technical Consultation: Connect with an Amazon Web Services Solutions Architect to address the partner's questions about the proposed solution.</p> </li> <li> <p>Cosellâ€”Total Cost of Ownership Evaluation: Assistance with quoting different cost savings of proposed solutions on Amazon Web Services versus on-premises or a traditional hosting environment.</p> </li> <li> <p>Cosellâ€”Deal Support: Request Amazon Web Services seller's support to progress the opportunity (for example: joint customer call, strategic positioning).</p> </li> <li> <p>Cosellâ€”Support for Public Tender/RFx: Opportunity related to the public sector where the partner needs Amazon Web Services RFx support.</p> </li> <li> <p>Do Not Need Support from Amazon Web Services Sales Rep: Indicates that a partner doesn't need support from an Amazon Web Services sales representative, and the partner solely manages the opportunity. It's possible to request coselling support on these opportunities at any stage during their lifecycle. Also known as, for-visibility-only (FVO) opportunity.</p> </li> </ul>",
        "OpportunitySummaryView$PrimaryNeedsFromAws": "<p> Identifies the type of support the partner needs from AWS. </p>",
        "UpdateOpportunityRequest$PrimaryNeedsFromAws": "<p>Identifies the type of support the partner needs from Amazon Web Services.</p> <p>Valid values:</p> <ul> <li> <p>Cosellâ€”Architectural Validation: Confirmation from Amazon Web Services that the partner's proposed solution architecture is aligned with Amazon Web Services best practices and poses minimal architectural risks.</p> </li> <li> <p>Cosellâ€”Business Presentation: Request Amazon Web Services seller's participation in a joint customer presentation.</p> </li> <li> <p>Cosellâ€”Competitive Information: Access to Amazon Web Services competitive resources and support for the partner's proposed solution.</p> </li> <li> <p>Cosellâ€”Pricing Assistance: Connect with an AWS seller for support situations where a partner may be receiving an upfront discount on a service (for example: EDP deals).</p> </li> <li> <p>Cosellâ€”Technical Consultation: Connection with an Amazon Web Services Solutions Architect to address the partner's questions about the proposed solution.</p> </li> <li> <p>Cosellâ€”Total Cost of Ownership Evaluation: Assistance with quoting different cost savings of proposed solutions on Amazon Web Services versus on-premises or a traditional hosting environment.</p> </li> <li> <p>Cosellâ€”Deal Support: Request Amazon Web Services seller's support to progress the opportunity (for example: joint customer call, strategic positioning).</p> </li> <li> <p>Cosellâ€”Support for Public Tender/RFx: Opportunity related to the public sector where the partner needs RFx support from Amazon Web Services.</p> </li> <li> <p>Do Not Need Support from AWS Sales Rep: Indicates that a partner doesn't need support from an Amazon Web Services Sales representative. The opportunity is managed solely by the partner. It's possible to request coselling support on these opportunities at any stage during their lifecycle. Also known as, for-visibility-only (FVO) opportunity.</p> </li> </ul>"
      }
    },
    "ProfileNextStepsHistory": {
      "base": "<p>Tracks the history of next steps associated with the opportunity. This field captures the actions planned for the future and their timeline.</p>",
      "refs": {
        "AwsOpportunityLifeCycleNextStepsHistoryList$member": null
      }
    },
    "Project": {
      "base": "<p>An object that contains the <code>Opportunity</code>'s project details.</p>",
      "refs": {
        "CreateOpportunityRequest$Project": "<p>An object that contains project details for the <code>Opportunity</code>.</p>",
        "GetOpportunityResponse$Project": "<p>An object that contains project details summary for the <code>Opportunity</code>.</p>",
        "UpdateOpportunityRequest$Project": "<p>An object that contains project details summary for the <code>Opportunity</code>.</p>"
      }
    },
    "ProjectAdditionalCommentsString": {
      "base": null,
      "refs": {
        "Project$AdditionalComments": "<p>Captures additional comments or information for the <code>Opportunity</code> that weren't captured in other fields.</p>"
      }
    },
    "ProjectCustomerBusinessProblemString": {
      "base": null,
      "refs": {
        "Project$CustomerBusinessProblem": "<p>Describes the problem the end customer has, and how the partner is helping. Utilize this field to provide a concise narrative that outlines the customer's business challenge or issue. Elaborate on how the partner's solution or offerings align to resolve the customer's business problem. Include relevant information about the partner's value proposition, unique selling points, and expertise to tackle the issue. Offer insights on how the proposed solution meets the customer's needs and provides value. Use concise language and precise descriptions to convey the context and significance of the <code>Opportunity</code>. The content in this field helps Amazon Web Services understand the nature of the <code>Opportunity</code> and the strategic fit of the partner's solution.</p>"
      }
    },
    "ProjectDetails": {
      "base": "<p>Contains details about the project associated with the Engagement Invitation, including the business problem and expected outcomes.</p>",
      "refs": {
        "OpportunityInvitationPayload$Project": "<p>Describes the project details associated with the opportunity, including the customerâ€™s needs and the scope of work expected to be performed.</p>"
      }
    },
    "ProjectDetailsTitleString": {
      "base": null,
      "refs": {
        "ProjectDetails$Title": "<p>Specifies the title of the project. This title helps partners quickly identify and understand the focus of the project.</p>"
      }
    },
    "ProjectOtherCompetitorNamesString": {
      "base": null,
      "refs": {
        "Project$OtherCompetitorNames": "<p>Only allowed when <code>CompetitorNames</code> has <code>Other</code> selected.</p>"
      }
    },
    "ProjectOtherSolutionDescriptionString": {
      "base": null,
      "refs": {
        "Project$OtherSolutionDescription": "<p>Specifies the offered solution for the customer's business problem when the <code> RelatedEntityIdentifiers.Solutions</code> field value is <code>Other</code>.</p>"
      }
    },
    "ProjectSummary": {
      "base": "<p>An object that contains a <code>Project</code> object's subset of fields.</p>",
      "refs": {
        "OpportunitySummary$Project": "<p>An object that contains the <code>Opportunity</code>'s project details summary.</p>"
      }
    },
    "ProjectTitleString": {
      "base": null,
      "refs": {
        "Project$Title": "<p>Specifies the <code>Opportunity</code>'s title or name.</p>"
      }
    },
    "ProjectView": {
      "base": "<p> Provides the project view of an opportunity resource shared through a snapshot. </p>",
      "refs": {
        "OpportunitySummaryView$Project": "<p> Contains summary information about the project associated with the opportunity, including project name, description, timeline, and other relevant details. </p>"
      }
    },
    "ProjectViewOtherSolutionDescriptionString": {
      "base": null,
      "refs": {
        "ProjectView$OtherSolutionDescription": "<p> Offers a description of other solutions if the standard solutions do not adequately cover the project's scope. </p>"
      }
    },
    "PutSellingSystemSettingsRequest": {
      "base": null,
      "refs": {
      }
    },
    "PutSellingSystemSettingsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ReasonCode": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTaskSummary$ReasonCode": "<p> A code pointing to the specific reason for the failure. </p>",
        "ListEngagementFromOpportunityTaskSummary$ReasonCode": "<p> A code indicating the specific reason for a task failure. This field is populated when the task status is FAILED and provides a categorized reason for the failure. </p>",
        "StartEngagementByAcceptingInvitationTaskResponse$ReasonCode": "<p>Indicates the reason for task failure using an enumerated code.</p>",
        "StartEngagementFromOpportunityTaskResponse$ReasonCode": "<p>Indicates the reason for task failure using an enumerated code.</p>"
      }
    },
    "Receiver": {
      "base": "<p>Represents the entity that received the Engagement Invitation, including account and company details. This field is essential for tracking the partner who is being invited to collaborate.</p>",
      "refs": {
        "EngagementInvitationSummary$Receiver": "<p>Specifies the partner company or individual that received the Engagement Invitation. This field is important for tracking who the invitation was sent to within the partner organization.</p>",
        "GetEngagementInvitationResponse$Receiver": "<p>Information about the partner organization or team that received the engagement invitation, including contact details and identifiers.</p>",
        "Invitation$Receiver": null
      }
    },
    "ReceiverResponsibility": {
      "base": null,
      "refs": {
        "ReceiverResponsibilityList$member": null
      }
    },
    "ReceiverResponsibilityList": {
      "base": null,
      "refs": {
        "OpportunityInvitationPayload$ReceiverResponsibilities": "<p>Outlines the responsibilities or expectations of the receiver in the context of the invitation.</p>"
      }
    },
    "RejectEngagementInvitationRequest": {
      "base": null,
      "refs": {
      }
    },
    "RejectionReasonString": {
      "base": null,
      "refs": {
        "GetEngagementInvitationResponse$RejectionReason": "<p>If the engagement invitation was rejected, this field specifies the reason provided by the partner for the rejection.</p>",
        "RejectEngagementInvitationRequest$RejectionReason": "<p>This describes the reason for rejecting the engagement invitation, which helps AWS track usage patterns. Acceptable values include the following:</p> <ul> <li> <p> <i>Customer problem unclear:</i> The customer's problem isn't understood.</p> </li> <li> <p> <i>Next steps unclear:</i> The next steps required to proceed aren't understood.</p> </li> <li> <p> <i>Unable to support:</i> The partner is unable to provide support due to resource or capability constraints.</p> </li> <li> <p> <i>Duplicate of partner referral:</i> The opportunity is a duplicate of an existing referral.</p> </li> <li> <p> <i>Other:</i> Any reason not covered by other values.</p> </li> </ul>"
      }
    },
    "RelatedEntityIdentifiers": {
      "base": "<p>This field provides the associations' information for other entities with the opportunity. These entities include identifiers for <code>AWSProducts</code>, <code>Partner Solutions</code>, and <code>AWSMarketplaceOffers</code>.</p>",
      "refs": {
        "GetOpportunityResponse$RelatedEntityIdentifiers": "<p>Provides information about the associations of other entities with the opportunity. These entities include identifiers for <code>AWSProducts</code>, <code>Partner Solutions</code>, and <code>AWSMarketplaceOffers</code>.</p>",
        "OpportunitySummaryView$RelatedEntityIdentifiers": null
      }
    },
    "RelatedEntityType": {
      "base": null,
      "refs": {
        "AssociateOpportunityRequest$RelatedEntityType": "<p>Specifies the entity type that you're associating with the <code> Opportunity</code>. This helps to categorize and properly process the association.</p>",
        "DisassociateOpportunityRequest$RelatedEntityType": "<p>The type of the entity that you're disassociating from the opportunity. When you specify the entity type, it helps the system correctly process the disassociation request to ensure that the right connections are removed.</p> <p>Examples of entity types include Partner Solution, Amazon Web Services product, and Amazon Web Services Marketplaceoffer. Ensure that the value matches one of the expected entity types.</p> <p>Validation: Provide a valid entity type to help ensure successful disassociation. An invalid or incorrect entity type results in an error.</p>"
      }
    },
    "ResourceArn": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotResponse$Arn": "<p> Specifies the Amazon Resource Name (ARN) that uniquely identifies the snapshot created. </p>",
        "GetResourceSnapshotJobResponse$ResourceArn": "<p> The Amazon Resource Name (ARN) of the resource being snapshotted. This provides a globally unique identifier for the resource across AWS. </p>",
        "GetResourceSnapshotResponse$Arn": "<p> The Amazon Resource Name (ARN) of the snapshot. This globally unique identifier can be used for resource-specific operations across AWS services. </p>"
      }
    },
    "ResourceIdentifier": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotJobRequest$ResourceIdentifier": "<p> Specifies the identifier of the specific resource to be snapshotted. The format depends on the <code>ResourceType</code>. </p>",
        "CreateResourceSnapshotRequest$ResourceIdentifier": "<p> The unique identifier of the specific resource to be snapshotted. The format and constraints of this identifier depend on the <code>ResourceType</code> specified. For example: For <code>Opportunity</code> type, it will be an opportunity ID. </p>",
        "EngagementResourceAssociationSummary$ResourceId": "<p> A unique identifier for the specific resource. Varies depending on the resource type. </p>",
        "GetResourceSnapshotJobResponse$ResourceId": "<p> The identifier of the specific resource being snapshotted. The format may vary depending on the <code>ResourceType</code>. </p>",
        "GetResourceSnapshotRequest$ResourceIdentifier": "<p>The unique identifier of the specific resource that was snapshotted. The format and constraints of this identifier depend on the ResourceType specified. For <code>Opportunity</code> type, it will be an <code>opportunity ID</code> </p>",
        "GetResourceSnapshotResponse$ResourceId": "<p> The identifier of the specific resource that was snapshotted. Matches the <code>ResourceIdentifier</code> specified in the request. </p>",
        "ListEngagementResourceAssociationsRequest$ResourceIdentifier": "<p> Filters the results to include only associations with the specified resource. Varies depending on the resource type. Use this when you want to find all engagements associated with a specific resource. </p>",
        "ListResourceSnapshotsRequest$ResourceIdentifier": "<p> Filters the response to include only snapshots of the specified resource. </p>",
        "ResourceSnapshotSummary$ResourceId": "<p>The identifier of the specific resource snapshotted. The format might vary depending on the ResourceType. </p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>This error occurs when the specified resource can't be found. The resource might not exist, or isn't visible with the current credentials.</p> <p>Suggested action: Verify that the resource ID is correct and the resource is in the expected AWS region. Check IAM permissions for accessing the resource.</p>",
      "refs": {
      }
    },
    "ResourceSnapshotArn": {
      "base": null,
      "refs": {
        "ResourceSnapshotSummary$Arn": "<p> The Amazon Resource Name (ARN) of the snapshot. This globally unique identifier can be used for cross-service references and in IAM policies. </p>"
      }
    },
    "ResourceSnapshotJobArn": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotJobResponse$Arn": "<p> The Amazon Resource Name (ARN) of the created snapshot job. </p>",
        "GetResourceSnapshotJobResponse$Arn": "<p> he Amazon Resource Name (ARN) of the snapshot job. This globally unique identifier can be used for resource-specific operations across AWS services. </p>",
        "ResourceSnapshotJobSummary$Arn": "<p> The Amazon Resource Name (ARN) for the resource snapshot job. </p>"
      }
    },
    "ResourceSnapshotJobIdentifier": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotJobResponse$Id": "<p> The unique identifier for the created snapshot job. </p>",
        "DeleteResourceSnapshotJobRequest$ResourceSnapshotJobIdentifier": "<p> The unique identifier of the resource snapshot job to be deleted. </p>",
        "GetResourceSnapshotJobRequest$ResourceSnapshotJobIdentifier": "<p> The unique identifier of the resource snapshot job to be retrieved. This identifier is crucial for pinpointing the specific job you want to query. </p>",
        "GetResourceSnapshotJobResponse$Id": "<p> The unique identifier of the snapshot job. This matches the <code>ResourceSnapshotJobIdentifier</code> provided in the request. </p>",
        "ListEngagementByAcceptingInvitationTaskSummary$ResourceSnapshotJobId": "<p> Unique identifier of the resource snapshot job that was created. </p>",
        "ListEngagementFromOpportunityTaskSummary$ResourceSnapshotJobId": "<p> The identifier of the resource snapshot job associated with this task, if a snapshot was created as part of the Engagement creation process. </p>",
        "ResourceSnapshotJobSummary$Id": "<p> The unique identifier for the resource snapshot job within the AWS Partner Central system. This ID is used for direct references to the job within the service. </p>",
        "StartEngagementByAcceptingInvitationTaskResponse$ResourceSnapshotJobId": "<p> The identifier of the resource snapshot job created as part of this task. </p>",
        "StartEngagementFromOpportunityTaskResponse$ResourceSnapshotJobId": "<p> The identifier of the resource snapshot job created to add the opportunity resource snapshot to the Engagement. Only populated if TaskStatus is COMPLETE. </p>",
        "StartResourceSnapshotJobRequest$ResourceSnapshotJobIdentifier": "<p> The identifier of the resource snapshot job to start. </p>",
        "StopResourceSnapshotJobRequest$ResourceSnapshotJobIdentifier": "<p> The identifier of the job to stop. </p>"
      }
    },
    "ResourceSnapshotJobRoleArn": {
      "base": null,
      "refs": {
        "GetSellingSystemSettingsResponse$ResourceSnapshotJobRoleArn": "<p>Specifies the ARN of the IAM Role used for resource snapshot job executions.</p>",
        "PutSellingSystemSettingsResponse$ResourceSnapshotJobRoleArn": "<p>Specifies the ARN of the IAM Role used for resource snapshot job executions.</p>"
      }
    },
    "ResourceSnapshotJobRoleIdentifier": {
      "base": null,
      "refs": {
        "PutSellingSystemSettingsRequest$ResourceSnapshotJobRoleIdentifier": "<p>Specifies the ARN of the IAM Role used for resource snapshot job executions.</p>"
      }
    },
    "ResourceSnapshotJobStatus": {
      "base": null,
      "refs": {
        "GetResourceSnapshotJobResponse$Status": "<p> The current status of the snapshot job. Valid values: </p> <ul> <li> <p> STOPPED: The job is not currently running. </p> </li> <li> <p> RUNNING: The job is actively executing. </p> </li> </ul>",
        "ListResourceSnapshotJobsRequest$Status": "<p> The status of the jobs to filter the response. </p>",
        "ResourceSnapshotJobSummary$Status": "<p> Represents the current status of the resource snapshot job. </p>"
      }
    },
    "ResourceSnapshotJobSummary": {
      "base": "<p> An object that contains a <code>Resource Snapshot Job</code>'s subset of fields. </p>",
      "refs": {
        "ResourceSnapshotJobSummaryList$member": null
      }
    },
    "ResourceSnapshotJobSummaryList": {
      "base": null,
      "refs": {
        "ListResourceSnapshotJobsResponse$ResourceSnapshotJobSummaries": "<p> An array of resource snapshot job summary objects. </p>"
      }
    },
    "ResourceSnapshotPayload": {
      "base": "<p> Represents the payload of a resource snapshot. This structure is designed to accommodate different types of resource snapshots, currently supporting opportunity summaries. </p>",
      "refs": {
        "GetResourceSnapshotResponse$Payload": null
      }
    },
    "ResourceSnapshotRevision": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotResponse$Revision": "<p> Specifies the revision number of the created snapshot. This field provides important information about the snapshot's place in the sequence of snapshots for the given resource. </p>",
        "GetResourceSnapshotRequest$Revision": "<p>Specifies which revision of the snapshot to retrieve. If omitted returns the latest revision.</p>",
        "GetResourceSnapshotResponse$Revision": "<p> The revision number of this snapshot. This is a positive integer that is sequential and unique within the context of a resource view. </p>",
        "ResourceSnapshotSummary$Revision": "<p> The revision number of the snapshot. This integer value is incremented each time the snapshot is updated, allowing for version tracking of the resource snapshot. </p>"
      }
    },
    "ResourceSnapshotSummary": {
      "base": "<p> Provides a concise summary of a resource snapshot, including its unique identifier and version information. This structure is used to quickly reference and identify specific versions of resource snapshots. </p>",
      "refs": {
        "ResourceSnapshotSummaryList$member": null
      }
    },
    "ResourceSnapshotSummaryList": {
      "base": null,
      "refs": {
        "ListResourceSnapshotsResponse$ResourceSnapshotSummaries": "<p> An array of resource snapshot summary objects. </p>"
      }
    },
    "ResourceTemplateName": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotJobRequest$ResourceSnapshotTemplateIdentifier": "<p> Specifies the name of the template that defines the schema for the snapshot. </p>",
        "CreateResourceSnapshotRequest$ResourceSnapshotTemplateIdentifier": "<p> The name of the template that defines the schema for the snapshot. This template determines which subset of the resource data will be included in the snapshot. Must correspond to an existing and valid template for the specified <code>ResourceType</code>. </p>",
        "GetResourceSnapshotJobResponse$ResourceSnapshotTemplateName": "<p> The name of the template used for creating the snapshot. This is the same as the template name. It defines the structure and content of the snapshot. </p>",
        "GetResourceSnapshotRequest$ResourceSnapshotTemplateIdentifier": "<p>he name of the template that defines the schema for the snapshot. This template determines which subset of the resource data is included in the snapshot and must correspond to an existing and valid template for the specified <code>ResourceType</code>.</p>",
        "GetResourceSnapshotResponse$ResourceSnapshotTemplateName": "<p> The name of the view used for this snapshot. This is the same as the template name. </p>",
        "ListResourceSnapshotsRequest$ResourceSnapshotTemplateIdentifier": "<p> Filters the response to include only snapshots created using the specified template. </p>",
        "ResourceSnapshotSummary$ResourceSnapshotTemplateName": "<p>The name of the template used to create the snapshot.</p>"
      }
    },
    "ResourceType": {
      "base": null,
      "refs": {
        "CreateResourceSnapshotJobRequest$ResourceType": "<p> The type of resource for which the snapshot job is being created. Must be one of the supported resource types <code>Opportunity</code>. </p>",
        "CreateResourceSnapshotRequest$ResourceType": "<p> Specifies the type of resource for which the snapshot is being created. This field determines the structure and content of the snapshot. Must be one of the supported resource types, such as: <code>Opportunity</code>. </p>",
        "EngagementResourceAssociationSummary$ResourceType": "<p> Categorizes the type of resource associated with the engagement. </p>",
        "GetResourceSnapshotJobResponse$ResourceType": "<p> The type of resource being snapshotted. This would have <code>Opportunity</code> as a value as it is dependent on the supported resource type. </p>",
        "GetResourceSnapshotRequest$ResourceType": "<p>Specifies the type of resource that was snapshotted. This field determines the structure and content of the snapshot payload. Valid value includes:<code>Opportunity</code>: For opportunity-related data. </p>",
        "GetResourceSnapshotResponse$ResourceType": "<p> The type of the resource that was snapshotted. Matches the <code>ResourceType</code> specified in the request. </p>",
        "ListEngagementResourceAssociationsRequest$ResourceType": "<p> Filters the results to include only associations with resources of the specified type. </p>",
        "ListResourceSnapshotsRequest$ResourceType": "<p> Filters the response to include only snapshots of the specified resource type. </p>",
        "ResourceSnapshotSummary$ResourceType": "<p>The type of resource snapshotted.</p>"
      }
    },
    "RevenueModel": {
      "base": null,
      "refs": {
        "SoftwareRevenue$DeliveryModel": "<p>Specifies the customer's intended payment type agreement or procurement method to acquire the solution or service outlined in the <code>Opportunity</code>.</p>"
      }
    },
    "ReviewStatus": {
      "base": null,
      "refs": {
        "LifeCycle$ReviewStatus": "<p>Indicates the review status of an opportunity referred by a partner. This field is read-only and only applicable for partner referrals. The possible values are:</p> <ul> <li> <p>Pending Submission: Not submitted for validation (editable).</p> </li> <li> <p>Submitted: Submitted for validation, and Amazon Web Services hasn't reviewed it (read-only).</p> </li> <li> <p>In Review: Amazon Web Services is validating (read-only).</p> </li> <li> <p>Action Required: Issues that Amazon Web Services highlights need to be addressed. Partners should use the <code>UpdateOpportunity</code> API action to update the opportunity and helps to ensure that all required changes are made. Only the following fields are editable when the <code>Lifecycle.ReviewStatus</code> is <code>Action Required</code>:</p> <ul> <li> <p>Customer.Account.Address.City</p> </li> <li> <p>Customer.Account.Address.CountryCode</p> </li> <li> <p>Customer.Account.Address.PostalCode</p> </li> <li> <p>Customer.Account.Address.StateOrRegion</p> </li> <li> <p>Customer.Account.Address.StreetAddress</p> </li> <li> <p>Customer.Account.WebsiteUrl</p> </li> <li> <p>LifeCycle.TargetCloseDate</p> </li> <li> <p>Project.ExpectedMonthlyAWSRevenue.Amount</p> </li> <li> <p>Project.ExpectedMonthlyAWSRevenue.CurrencyCode</p> </li> <li> <p>Project.CustomerBusinessProblem</p> </li> <li> <p>PartnerOpportunityIdentifier</p> </li> </ul> <p>After updates, the opportunity re-enters the validation phase. This process repeats until all issues are resolved, and the opportunity's <code>Lifecycle.ReviewStatus</code> is set to <code>Approved</code> or <code>Rejected</code>.</p> </li> <li> <p>Approved: Validated and converted into the Amazon Web Services seller's pipeline (editable).</p> </li> <li> <p>Rejected: Disqualified (read-only).</p> </li> </ul>",
        "LifeCycleForView$ReviewStatus": "<p> Defines the approval status of the opportunity shared through a snapshot. </p>",
        "LifeCycleSummary$ReviewStatus": "<p>Indicates the review status of a partner referred opportunity. This field is read-only and only applicable for partner referrals. Valid values:</p> <ul> <li> <p>Pending Submission: Not submitted for validation (editable).</p> </li> <li> <p>Submitted: Submitted for validation and not yet Amazon Web Services reviewed (read-only).</p> </li> <li> <p>In Review: Undergoing Amazon Web Services validation (read-only).</p> </li> <li> <p>Action Required: Address any issues Amazon Web Services highlights. Use the <code>UpdateOpportunity</code> API action to update the opportunity, and ensure you make all required changes. Only these fields are editable when the <code>Lifecycle.ReviewStatus</code> is <code>Action Required</code>:</p> <ul> <li> <p>Customer.Account.Address.City</p> </li> <li> <p>Customer.Account.Address.CountryCode</p> </li> <li> <p>Customer.Account.Address.PostalCode</p> </li> <li> <p>Customer.Account.Address.StateOrRegion</p> </li> <li> <p>Customer.Account.Address.StreetAddress</p> </li> <li> <p>Customer.Account.WebsiteUrl</p> </li> <li> <p>LifeCycle.TargetCloseDate</p> </li> <li> <p>Project.ExpectedCustomerSpend.Amount</p> </li> <li> <p>Project.ExpectedCustomerSpend.CurrencyCode</p> </li> <li> <p>Project.CustomerBusinessProblem</p> </li> <li> <p>PartnerOpportunityIdentifier</p> </li> </ul> <p>After updates, the opportunity re-enters the validation phase. This process repeats until all issues are resolved, and the opportunity's <code>Lifecycle.ReviewStatus</code> is set to <code>Approved</code> or <code>Rejected</code>.</p> </li> <li> <p>Approved: Validated and converted into the Amazon Web Services seller's pipeline (editable).</p> </li> <li> <p>Rejected: Disqualified (read-only).</p> </li> </ul>",
        "ListOpportunitiesRequestLifeCycleReviewStatusList$member": null
      }
    },
    "SalesActivities": {
      "base": null,
      "refs": {
        "Project$SalesActivities": "<p>Specifies the <code>Opportunity</code>'s sales activities conducted with the end customer. These activities help drive Amazon Web Services assignment priority.</p> <p>Valid values:</p> <ul> <li> <p>Initialized discussions with customer: Initial conversations with the customer to understand their needs and introduce your solution.</p> </li> <li> <p>Customer has shown interest in solution: After initial discussions, the customer is interested in your solution.</p> </li> <li> <p>Conducted POC/demo: You conducted a proof of concept (POC) or demonstration of the solution for the customer.</p> </li> <li> <p>In evaluation/planning stage: The customer is evaluating the solution and planning potential implementation.</p> </li> <li> <p>Agreed on solution to Business Problem: Both parties agree on how the solution addresses the customer's business problem.</p> </li> <li> <p>Completed Action Plan: A detailed action plan is complete and outlines the steps for implementation.</p> </li> <li> <p>Finalized Deployment Need: Both parties agree with and finalized the deployment needs.</p> </li> <li> <p>SOW Signed: Both parties signed a statement of work (SOW), and formalize the agreement and detail the project scope and deliverables.</p> </li> </ul>",
        "ProjectView$SalesActivities": "<p> Lists the pre-sales activities that have occurred with the end-customer related to the opportunity. This field is conditionally mandatory when the project is qualified for Co-Sell and helps drive assignment priority on the AWS side. It provides insight into the engagement level with the customer. </p>"
      }
    },
    "SalesActivity": {
      "base": null,
      "refs": {
        "SalesActivities$member": null
      }
    },
    "SalesInvolvementType": {
      "base": null,
      "refs": {
        "AwsSubmission$InvolvementType": "<p>Specifies the type of AWS involvement in the opportunity, such as coselling, deal support, or technical consultation. This helps categorize the nature of AWS participation.</p>",
        "GetAwsOpportunitySummaryResponse$InvolvementType": "<p>Specifies the type of involvement AWS has in the opportunity, such as direct cosell or advisory support. This field helps partners understand the role AWS plays in advancing the opportunity.</p>",
        "SubmitOpportunityRequest$InvolvementType": "<p> Specifies the level of AWS sellers' involvement on the opportunity. </p>"
      }
    },
    "SenderContact": {
      "base": "<p>An object that contains the details of the sender-provided contact person for the <code>EngagementInvitation</code>.</p>",
      "refs": {
        "SenderContactList$member": null
      }
    },
    "SenderContactEmail": {
      "base": null,
      "refs": {
        "SenderContact$Email": "<p>The sender-provided contact's email address associated with the <code>EngagementInvitation</code>.</p>"
      }
    },
    "SenderContactList": {
      "base": null,
      "refs": {
        "OpportunityInvitationPayload$SenderContacts": "<p>Represents the contact details of the AWS representatives involved in sending the Engagement Invitation. These contacts are opportunity stakeholders.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>This error occurs when the request would cause a service quota to be exceeded. Service quotas represent the maximum allowed use of a specific resource, and this error indicates that the request would surpass that limit.</p> <p>Suggested action: Review the <a href=\"https://docs.aws.amazon.com/partner-central/latest/selling-api/quotas.html\">Quotas</a> for the resource, and either reduce usage or request a quota increase.</p>",
      "refs": {
      }
    },
    "SoftwareRevenue": {
      "base": "<p>Specifies a customer's procurement terms details. Required only for partners in eligible programs.</p>",
      "refs": {
        "CreateOpportunityRequest$SoftwareRevenue": "<p>Specifies details of a customer's procurement terms. This is required only for partners in eligible programs.</p>",
        "GetOpportunityResponse$SoftwareRevenue": "<p>Specifies details of a customer's procurement terms. Required only for partners in eligible programs.</p>",
        "UpdateOpportunityRequest$SoftwareRevenue": "<p>Specifies details of a customer's procurement terms. Required only for partners in eligible programs.</p>"
      }
    },
    "SolutionArn": {
      "base": null,
      "refs": {
        "SolutionBase$Arn": "<p> The SolutionBase structure provides essential information about a solution. </p>"
      }
    },
    "SolutionBase": {
      "base": "<p>Specifies minimal information for the solution offered to solve the customer's business problem.</p>",
      "refs": {
        "SolutionList$member": null
      }
    },
    "SolutionIdentifier": {
      "base": null,
      "refs": {
        "ListSolutionsRequestIdentifierList$member": null,
        "SolutionBase$Id": "<p>Enables the association of solutions (offerings) to opportunities.</p>",
        "SolutionIdentifiers$member": null
      }
    },
    "SolutionIdentifiers": {
      "base": null,
      "refs": {
        "AwsOpportunityRelatedEntities$Solutions": "<p>Specifies the partner solutions related to the opportunity. These solutions represent the partner's offerings that are being positioned as part of the overall AWS opportunity.</p>",
        "RelatedEntityIdentifiers$Solutions": "<p>Enables partner solutions or offerings' association with an opportunity. To associate a solution, provide the solution's unique identifier, which you can obtain with the <code>ListSolutions</code> operation.</p> <p>If the specific solution identifier is not available, you can use the value <code>Other</code> and provide details about the solution in the <code>otherSolutionOffered</code> field. But when the opportunity reaches the <code>Committed</code> stage or beyond, the <code>Other</code> value cannot be used, and a valid solution identifier must be provided.</p> <p>By associating the relevant solutions with the opportunity, you can communicate the offerings that are being considered or implemented to address the customer's business problem.</p>"
      }
    },
    "SolutionList": {
      "base": null,
      "refs": {
        "ListSolutionsResponse$SolutionSummaries": "<p>An array with minimal details for solutions matching the request criteria.</p>"
      }
    },
    "SolutionSort": {
      "base": "<p>Configures the solutions' response sorting that enables partners to order solutions based on specified attributes.</p>",
      "refs": {
        "ListSolutionsRequest$Sort": "<p>Object that configures sorting done on the response. Default <code>Sort.SortBy</code> is <code>Identifier</code>.</p>"
      }
    },
    "SolutionSortName": {
      "base": null,
      "refs": {
        "SolutionSort$SortBy": "<p>Specifies the attribute to sort by, such as <code>Name</code>, <code>CreatedDate</code>, or <code>Status</code>.</p>"
      }
    },
    "SolutionStatus": {
      "base": null,
      "refs": {
        "ListSolutionsRequestStatusList$member": null,
        "SolutionBase$Status": "<p>Specifies the solution's current status, which indicates its state in the system. Valid values: <code>Active</code> | <code>Inactive</code> | <code>Draft</code>. The status helps partners and Amazon Web Services track the solution's lifecycle and availability. Filter for <code>Active</code> solutions for association to an opportunity.</p>"
      }
    },
    "SortBy": {
      "base": null,
      "refs": {
        "SortObject$SortBy": "<p> Specifies the field by which to sort the resource snapshot jobs. </p>"
      }
    },
    "SortObject": {
      "base": "<p> Defines the sorting parameters for listing resource snapshot jobs. This structure allows you to specify the field to sort by and the order of sorting. </p>",
      "refs": {
        "ListResourceSnapshotJobsRequest$Sort": "<p> Configures the sorting of the response. If omitted, results are sorted by <code>CreatedDate</code> in descending order. </p>"
      }
    },
    "SortOrder": {
      "base": null,
      "refs": {
        "EngagementSort$SortOrder": "<p> The order in which to sort the results. </p>",
        "ListTasksSortBase$SortOrder": "<p> Determines the order in which the sorted results are presented. </p>",
        "OpportunityEngagementInvitationSort$SortOrder": "<p>Defines the order in which the Engagement Invitations are sorted. The values can be <code>ASC</code> (ascending) or <code>DESC</code> (descending).</p>",
        "OpportunitySort$SortOrder": "<p>Sort order.</p> <p>Default: <code>Descending</code> </p>",
        "SolutionSort$SortOrder": "<p>Specifies the sorting order, either <code>Ascending</code> or <code>Descending</code>. The default is <code>Descending</code>.</p>",
        "SortObject$SortOrder": "<p> Determines the order in which the sorted results are presented. </p>"
      }
    },
    "Stage": {
      "base": null,
      "refs": {
        "LifeCycle$Stage": "<p>Specifies the current stage of the <code>Opportunity</code>'s lifecycle as it maps to Amazon Web Services stages from the current stage in the partner CRM. This field provides a translated value of the stage, and offers insight into the <code>Opportunity</code>'s progression in the sales cycle, according to Amazon Web Services definitions.</p> <note> <p>A lead and a prospect must be further matured to a <code>Qualified</code> opportunity before submission. Opportunities that were closed/lost before submission aren't suitable for submission.</p> </note> <p>The descriptions of each sales stage are:</p> <ul> <li> <p>Prospect: Amazon Web Services identifies the opportunity. It can be active (Comes directly from the end customer through a lead) or latent (Your account team believes it exists based on research, account plans, sales plays).</p> </li> <li> <p>Qualified: Your account team engaged with the customer to discuss viability and requirements. The customer agreed that the opportunity is real, of interest, and may solve business/technical needs.</p> </li> <li> <p>Technical Validation: All parties understand the implementation plan.</p> </li> <li> <p>Business Validation: Pricing was proposed, and all parties agree to the steps to close.</p> </li> <li> <p>Committed: The customer signed the contract, but Amazon Web Services hasn't started billing.</p> </li> <li> <p>Launched: The workload is complete, and Amazon Web Services has started billing.</p> </li> <li> <p>Closed Lost: The opportunity is lost, and there are no steps to move forward.</p> </li> </ul>",
        "LifeCycleForView$Stage": "<p> Defines the current stage of the opportunity shared through a snapshot. </p>",
        "LifeCycleSummary$Stage": "<p>Specifies the current stage of the <code>Opportunity</code>'s lifecycle as it maps to Amazon Web Services stages from the current stage in the partner CRM. This field provides a translated value of the stage, and offers insight into the <code>Opportunity</code>'s progression in the sales cycle, according to Amazon Web Services definitions.</p> <note> <p>A lead and a prospect must be further matured to a <code>Qualified</code> opportunity before submission. Opportunities that were closed/lost before submission aren't suitable for submission.</p> </note> <p>The descriptions of each sales stage are:</p> <ul> <li> <p>Prospect: Amazon Web Services identifies the opportunity. It can be active (Comes directly from the end customer through a lead) or latent (Your account team believes it exists based on research, account plans, sales plays).</p> </li> <li> <p>Qualified: Your account team engaged with the customer to discuss viability and understand requirements. The customer agreed that the opportunity is real, of interest, and may solve business/technical needs.</p> </li> <li> <p>Technical Validation: All parties understand the implementation plan.</p> </li> <li> <p>Business Validation: Pricing was proposed, and all parties agree to the steps to close.</p> </li> <li> <p>Committed: The customer signed the contract, but Amazon Web Services hasn't started billing.</p> </li> <li> <p>Launched: The workload is complete, and Amazon Web Services has started billing.</p> </li> <li> <p>Closed Lost: The opportunity is lost, and there are no steps to move forward.</p> </li> </ul>",
        "ListOpportunitiesRequestLifeCycleStageList$member": null
      }
    },
    "StartEngagementByAcceptingInvitationTaskRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartEngagementByAcceptingInvitationTaskRequestClientTokenString": {
      "base": null,
      "refs": {
        "StartEngagementByAcceptingInvitationTaskRequest$ClientToken": "<p>A unique, case-sensitive identifier provided by the client that helps to ensure the idempotency of the request. This can be a random or meaningful string but must be unique for each request.</p>"
      }
    },
    "StartEngagementByAcceptingInvitationTaskResponse": {
      "base": null,
      "refs": {
      }
    },
    "StartEngagementFromOpportunityTaskRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartEngagementFromOpportunityTaskRequestClientTokenString": {
      "base": null,
      "refs": {
        "StartEngagementFromOpportunityTaskRequest$ClientToken": "<p>A unique token provided by the client to help ensure the idempotency of the request. It helps prevent the same task from being performed multiple times.</p>"
      }
    },
    "StartEngagementFromOpportunityTaskResponse": {
      "base": null,
      "refs": {
      }
    },
    "StartResourceSnapshotJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "StopResourceSnapshotJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "String": {
      "base": null,
      "refs": {
        "AccessDeniedException$Message": null,
        "ApnPrograms$member": null,
        "AwsOpportunityInsights$NextBestActions": "<p>Provides recommendations from AWS on the next best actions to take in order to move the opportunity forward and increase the likelihood of success.</p>",
        "ConflictException$Message": null,
        "CreateOpportunityResponse$PartnerOpportunityIdentifier": "<p>Specifies the opportunity's unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload sent back to the partner.</p>",
        "EngagementInvitationSummary$Arn": "<p>The Amazon Resource Name (ARN) of the Engagement Invitation. The ARN is a unique identifier that allows partners to reference the invitation in their system and manage its lifecycle.</p>",
        "EngagementMember$WebsiteUrl": "<p> The URL of the member company's website. This offers a way to find more information about the member organization and serves as an additional identifier. </p>",
        "EngagementMemberSummary$WebsiteUrl": "<p> The URL of the member company's website. This offers a way to find more information about the member organization and serves as an additional identifier. </p>",
        "ExpectedCustomerSpend$Amount": "<p>Represents the estimated monthly revenue that the partner expects to earn from the opportunity. This helps in forecasting financial returns.</p>",
        "GetEngagementInvitationResponse$Arn": "<p>The Amazon Resource Name (ARN) that identifies the engagement invitation.</p>",
        "GetResourceSnapshotJobResponse$LastFailure": "<p> If the job has encountered any failures, this field contains the error message from the most recent failure. This can be useful for troubleshooting issues with the job. </p>",
        "InternalServerException$Message": null,
        "LifeCycle$ReviewComments": "<p>Indicates why an opportunity was sent back for further details. Partners must take corrective action based on the <code>ReviewComments</code>.</p>",
        "LifeCycle$ReviewStatusReason": "<p>Indicates the reason a decision was made during the opportunity review process. This field combines the reasons for both disqualified and action required statuses, and provide clarity for why an opportunity was disqualified or requires further action.</p>",
        "LifeCycleSummary$ReviewComments": "<p>Indicates why an opportunity was sent back for further details. Partners must take corrective action based on the <code>ReviewComments</code>.</p>",
        "LifeCycleSummary$ReviewStatusReason": "<p>Indicates the reason a specific decision was taken during the opportunity review process. This field combines the reasons for both disqualified and action required statuses, and provides clarity for why an opportunity was disqualified or required further action.</p>",
        "ListEngagementByAcceptingInvitationTaskSummary$Message": "<p> Detailed message describing the failure and possible recovery steps. </p>",
        "ListEngagementByAcceptingInvitationTasksResponse$NextToken": "<p> A token used for pagination to retrieve the next page of results.If there are more results available, this field will contain a token that can be used in a subsequent API call to retrieve the next page. If there are no more results, this field will be null or an empty string. </p>",
        "ListEngagementFromOpportunityTaskSummary$Message": "<p> A detailed message providing additional information about the task, especially useful in case of failures. This field may contain error details or other relevant information about the task's execution </p>",
        "ListEngagementFromOpportunityTasksResponse$NextToken": "<p> A token used for pagination to retrieve the next page of results. If there are more results available, this field will contain a token that can be used in a subsequent API call to retrieve the next page. If there are no more results, this field will be null or an empty string. </p>",
        "ListEngagementInvitationsRequest$NextToken": "<p>A pagination token used to retrieve additional pages of results when the response to a previous request was truncated. Pass this token to continue listing invitations from where the previous call left off.</p>",
        "ListEngagementInvitationsResponse$NextToken": "<p>A pagination token returned when there are more results available than can be returned in a single call. Use this token to retrieve additional pages of engagement invitation summaries.</p>",
        "ListEngagementMembersRequest$NextToken": "<p> The token for the next set of results. </p>",
        "ListEngagementMembersResponse$NextToken": "<p> A pagination token used to retrieve the next set of results. If there are more results available than can be returned in a single response, this token will be present. Use this token in a subsequent request to retrieve the next page of results. If there are no more results, this value will be null. </p>",
        "ListEngagementResourceAssociationsRequest$NextToken": "<p> A token used for pagination of results. Include this token in subsequent requests to retrieve the next set of results. </p>",
        "ListEngagementResourceAssociationsResponse$NextToken": "<p> A token to retrieve the next set of results. Use this token in a subsequent request to retrieve additional results if the response was truncated. </p>",
        "ListEngagementsRequest$NextToken": "<p> The token for the next set of results. This value is returned from a previous call. </p>",
        "ListEngagementsResponse$NextToken": "<p> The token to retrieve the next set of results. This field will be null if there are no more results. </p>",
        "ListOpportunitiesRequest$NextToken": "<p>A pagination token used to retrieve the next set of results in subsequent calls. This token is included in the response only if there are additional result pages available.</p>",
        "ListOpportunitiesRequestCustomerCompanyNameList$member": null,
        "ListOpportunitiesResponse$NextToken": "<p>A pagination token used to retrieve the next set of results in subsequent calls. This token is included in the response only if there are additional result pages available.</p>",
        "ListResourceSnapshotJobsRequest$NextToken": "<p> The token for the next set of results. </p>",
        "ListResourceSnapshotJobsResponse$NextToken": "<p> The token to retrieve the next set of results. If there are no additional results, this value is null. </p>",
        "ListResourceSnapshotsRequest$NextToken": "<p> The token for the next set of results. </p>",
        "ListResourceSnapshotsResponse$NextToken": "<p> The token to retrieve the next set of results. If there are no additional results, this value is null. </p>",
        "ListSolutionsRequest$NextToken": "<p>A pagination token used to retrieve the next set of results in subsequent calls. This token is included in the response only if there are additional result pages available.</p>",
        "ListSolutionsRequestCategoryList$member": null,
        "ListSolutionsResponse$NextToken": "<p>A pagination token used to retrieve the next set of results in subsequent calls. This token is included in the response only if there are additional result pages available.</p>",
        "Marketing$CampaignName": "<p>Specifies the <code>Opportunity</code> marketing campaign code. The Amazon Web Services campaign code is a reference to specific marketing initiatives, promotions, or activities. This field captures the identifier used to track and categorize the <code>Opportunity</code> within marketing campaigns. If you don't have a campaign code, contact your Amazon Web Services point of contact to obtain one.</p>",
        "NextStepsHistory$Value": "<p>Indicates the step's execution details.</p>",
        "OpportunitySummary$PartnerOpportunityIdentifier": "<p>Specifies the <code>Opportunity</code>'s unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload sent back to the partner. It allows partners to link an opportunity to their CRM.</p>",
        "ProfileNextStepsHistory$Value": "<p>Represents the details of the next step recorded, such as follow-up actions or decisions made. This field helps in tracking progress and ensuring alignment with project goals.</p>",
        "Project$CustomerUseCase": "<p>Specifies the proposed solution focus or type of workload for the Opportunity. This field captures the primary use case or objective of the proposed solution, and provides context and clarity to the addressed workload.</p> <p>Valid values: <code>AI Machine Learning and Analytics | Archiving | Big Data: Data Warehouse/Data Integration/ETL/Data Lake/BI | Blockchain | Business Applications: Mainframe Modernization | Business Applications &amp; Contact Center | Business Applications &amp; SAP Production | Centralized Operations Management | Cloud Management Tools | Cloud Management Tools &amp; DevOps with Continuous Integration &amp; Continuous Delivery (CICD) | Configuration, Compliance &amp; Auditing | Connected Services | Containers &amp; Serverless | Content Delivery &amp; Edge Services | Database | Edge Computing/End User Computing | Energy | Enterprise Governance &amp; Controls | Enterprise Resource Planning | Financial Services | Healthcare and Life Sciences | High Performance Computing | Hybrid Application Platform | Industrial Software | IOT | Manufacturing, Supply Chain and Operations | Media &amp; High performance computing (HPC) | Migration/Database Migration | Monitoring, logging and performance | Monitoring &amp; Observability | Networking | Outpost | SAP | Security &amp; Compliance | Storage &amp; Backup | Training | VMC | VMWare | Web development &amp; DevOps</code> </p>",
        "ProjectView$CustomerUseCase": "<p> Specifies the proposed solution focus or type of workload for the project. </p>",
        "ResourceNotFoundException$Message": null,
        "ServiceQuotaExceededException$Message": null,
        "SolutionBase$Category": "<p>Specifies the solution category, which helps to categorize and organize the solutions partners offer. Valid values: <code>Software Product</code> | <code>Consulting Service</code> | <code>Hardware Product</code> | <code>Communications Product</code> | <code>Professional Service</code> | <code>Managed Service</code> | <code>Value-Added Resale Amazon Web Services Service</code> | <code>Distribution Service</code> | <code>Training Service</code> | <code>Merger and Acquisition Advising Service</code>.</p>",
        "SolutionBase$Name": "<p>Specifies the solution name.</p>",
        "StartEngagementByAcceptingInvitationTaskResponse$Message": "<p>If the task fails, this field contains a detailed message describing the failure and possible recovery steps.</p>",
        "StartEngagementFromOpportunityTaskResponse$Message": "<p>If the task fails, this field contains a detailed message describing the failure and possible recovery steps.</p>",
        "ThrottlingException$Message": null,
        "UseCases$member": null,
        "ValidationException$Message": null,
        "ValidationExceptionError$FieldName": "<p>Specifies the field name with the invalid value.</p>",
        "ValidationExceptionError$Message": "<p>Specifies the detailed error message for the invalid field value.</p>"
      }
    },
    "SubmitOpportunityRequest": {
      "base": null,
      "refs": {
      }
    },
    "TaskArn": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTaskSummary$TaskArn": "<p> The Amazon Resource Name (ARN) that uniquely identifies the task. </p>",
        "ListEngagementFromOpportunityTaskSummary$TaskArn": "<p> The Amazon Resource Name (ARN) uniquely identifying this task within AWS. This ARN can be used for referencing the task in other AWS services or APIs. </p>",
        "StartEngagementByAcceptingInvitationTaskResponse$TaskArn": "<p>The Amazon Resource Name (ARN) of the task, used for tracking and managing the task within AWS.</p>",
        "StartEngagementFromOpportunityTaskResponse$TaskArn": "<p>The Amazon Resource Name (ARN) of the task, used for tracking and managing the task within AWS.</p>"
      }
    },
    "TaskArnOrIdentifier": {
      "base": null,
      "refs": {
        "TaskIdentifiers$member": null
      }
    },
    "TaskIdentifier": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTaskSummary$TaskId": "<p> Unique identifier of the task. </p>",
        "ListEngagementFromOpportunityTaskSummary$TaskId": "<p> A unique identifier for a specific task. </p>",
        "StartEngagementByAcceptingInvitationTaskResponse$TaskId": "<p>The unique identifier of the task, used to track the taskâ€™s progress.</p>",
        "StartEngagementFromOpportunityTaskResponse$TaskId": "<p>The unique identifier of the task, used to track the taskâ€™s progress. This value follows a specific pattern: <code>^oit-[0-9a-z]{13}$</code>.</p>"
      }
    },
    "TaskIdentifiers": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTasksRequest$TaskIdentifier": "<p> Filters tasks by their unique identifiers. Use this when you want to retrieve information about specific tasks. </p>",
        "ListEngagementFromOpportunityTasksRequest$TaskIdentifier": "<p> Filters tasks by their unique identifiers. Use this when you want to retrieve information about specific tasks. </p>"
      }
    },
    "TaskStatus": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTaskSummary$TaskStatus": "<p> Status of the task. </p>",
        "ListEngagementFromOpportunityTaskSummary$TaskStatus": "<p> The current status of the task. </p>",
        "StartEngagementByAcceptingInvitationTaskResponse$TaskStatus": "<p>Indicates the current status of the task.</p>",
        "StartEngagementFromOpportunityTaskResponse$TaskStatus": "<p>Indicates the current status of the task. Valid values include <code>IN_PROGRESS</code>, <code>COMPLETE</code>, and <code>FAILED</code>.</p>",
        "TaskStatuses$member": null
      }
    },
    "TaskStatuses": {
      "base": null,
      "refs": {
        "ListEngagementByAcceptingInvitationTasksRequest$TaskStatus": "<p> Filters the tasks based on their current status. This allows you to focus on tasks in specific states. </p>",
        "ListEngagementFromOpportunityTasksRequest$TaskStatus": "<p> Filters the tasks based on their current status. This allows you to focus on tasks in specific states. </p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>This error occurs when there are too many requests sent. Review the provided quotas and adapt your usage to avoid throttling.</p> <p>This error occurs when there are too many requests sent. Review the provided <a href=\"https://docs.aws.amazon.com/partner-central/latest/selling-api/quotas.html\">Quotas</a> and retry after the provided delay.</p>",
      "refs": {
      }
    },
    "UpdateOpportunityRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateOpportunityRequestPartnerOpportunityIdentifierString": {
      "base": null,
      "refs": {
        "UpdateOpportunityRequest$PartnerOpportunityIdentifier": "<p>Specifies the opportunity's unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload sent back to the partner.</p>"
      }
    },
    "UpdateOpportunityResponse": {
      "base": null,
      "refs": {
      }
    },
    "UseCases": {
      "base": null,
      "refs": {
        "Marketing$UseCases": "<p>Specifies the marketing activity use case or purpose that led to the <code>Opportunity</code>'s creation or contact. This field captures the context or marketing activity's execution's intention and the direct correlation to the generated opportunity or contact. Must be empty when <code>Marketing.AWSFundingUsed = No</code>.</p> <p>Valid values: <code>AI/ML | Analytics | Application Integration | Blockchain | Business Applications | Cloud Financial Management | Compute | Containers | Customer Engagement | Databases | Developer Tools | End User Computing | Front End Web &amp; Mobile | Game Tech | IoT | Management &amp; Governance | Media Services | Migration &amp; Transfer | Networking &amp; Content Delivery | Quantum Technologies | Robotics | Satellite | Security | Serverless | Storage | VR &amp; AR</code> </p>"
      }
    },
    "ValidationException": {
      "base": "<p>The input fails to satisfy the constraints specified by the service or business validation rules.</p> <p>Suggested action: Review the error message, including the failed fields and reasons, to correct the request payload.</p>",
      "refs": {
      }
    },
    "ValidationExceptionError": {
      "base": "<p>Indicates an invalid value for a field.</p> <ul> <li> <p> <i>REQUIRED_FIELD_MISSING:</i> The request is missing a required field.</p> <p>Fix: Verify your request payload includes all required fields.</p> </li> <li> <p> <i>INVALID_ENUM_VALUE:</i> The enum field value isn't an accepted values.</p> <p>Fix: Check the documentation for the list of valid enum values, and update your request with a valid value.</p> </li> <li> <p> <i>INVALID_STRING_FORMAT:</i> The string format is invalid.</p> <p>Fix: Confirm that the string is in the expected format (For example: email address, date).</p> </li> <li> <p> <i>INVALID_VALUE:</i> The value isn't valid.</p> <p>Fix: Confirm that the value meets the expected criteria and is within the allowable range or set.</p> </li> <li> <p> <i>TOO_MANY_VALUES:</i> There are too many values in a field that expects fewer entries.</p> <p>Fix: Reduce the number of values to match the expected limit.</p> </li> <li> <p> <i>ACTION_NOT_PERMITTED:</i> The action isn't permitted due to current state or permissions.</p> <p>Fix: Verify that the action is appropriate for the current state, and that you have the necessary permissions to perform it.</p> </li> <li> <p> <i>DUPLICATE_KEY_VALUE:</i> The value in a field duplicates a value that must be unique.</p> <p>Fix: Verify that the value is unique and doesn't duplicate an existing value in the system.</p> </li> </ul>",
      "refs": {
        "ValidationExceptionErrorList$member": null
      }
    },
    "ValidationExceptionErrorCode": {
      "base": null,
      "refs": {
        "ValidationExceptionError$Code": "<p>Specifies the error code for the invalid field value.</p>"
      }
    },
    "ValidationExceptionErrorList": {
      "base": null,
      "refs": {
        "ValidationException$ErrorList": "<p>A list of issues that were discovered in the submitted request or the resource state.</p>"
      }
    },
    "ValidationExceptionReason": {
      "base": null,
      "refs": {
        "ValidationException$Reason": "<p>The primary reason for this validation exception to occur.</p> <ul> <li> <p> <i>REQUEST_VALIDATION_FAILED:</i> The request format is not valid.</p> <p>Fix: Verify your request payload includes all required fields, uses correct data types and string formats.</p> </li> <li> <p> <i>BUSINESS_VALIDATION_FAILED:</i> The requested change doesn't pass the business validation rules.</p> <p>Fix: Check that your change aligns with the business rules defined by AWS Partner Central.</p> </li> </ul>"
      }
    },
    "Visibility": {
      "base": null,
      "refs": {
        "AwsSubmission$Visibility": "<p>Determines who can view AWS involvement in the opportunity. Typically, this field is set to <code>Full</code> for most cases, but it may be restricted based on special program requirements or confidentiality needs.</p>",
        "GetAwsOpportunitySummaryResponse$Visibility": "<p>Defines the visibility level for the AWS Opportunity. Use <code>Full</code> visibility for most cases, while <code>Limited</code> visibility is reserved for special programs or sensitive opportunities.</p>",
        "SubmitOpportunityRequest$Visibility": "<p> Determines whether to restrict visibility of the opportunity from AWS sales. Default value is Full. </p>"
      }
    },
    "WebsiteUrl": {
      "base": null,
      "refs": {
        "Account$WebsiteUrl": "<p>Specifies the end customer's company website URL associated with the <code>Opportunity</code>. This value is crucial to map the customer within the Amazon Web Services CRM system. This field is required in all cases except when the opportunity is related to national security.</p>",
        "AccountSummary$WebsiteUrl": "<p>Specifies the end customer's company website URL associated with the <code>Opportunity</code>. This value is crucial to map the customer within the Amazon Web Services CRM system.</p>",
        "ExpectedCustomerSpend$EstimationUrl": "<p> A URL providing additional information or context about the spend estimation. </p>"
      }
    }
  }
}
