<?php
// This file was auto-generated from sdk-root/src/data/glue/2017-03-31/docs-2.json
return [ 'version' => '2.0', 'service' => '<fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>', 'operations' => [ 'BatchCreatePartition' => '<p>Creates one or more partitions in a batch operation.</p>', 'BatchDeleteConnection' => '<p>Deletes a list of connection definitions from the Data Catalog.</p>', 'BatchDeletePartition' => '<p>Deletes one or more partitions in a batch operation.</p>', 'BatchDeleteTable' => '<p>Deletes multiple tables at once.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these "orphaned" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>', 'BatchDeleteTableVersion' => '<p>Deletes a specified batch of versions of a table.</p>', 'BatchGetBlueprints' => '<p>Retrieves information about a list of blueprints.</p>', 'BatchGetCrawlers' => '<p>Returns a list of resource metadata for a given list of crawler names. After calling the <code>ListCrawlers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.</p>', 'BatchGetCustomEntityTypes' => '<p>Retrieves the details for the custom patterns specified by a list of names.</p>', 'BatchGetDevEndpoints' => '<p>Returns a list of resource metadata for a given list of development endpoint names. After calling the <code>ListDevEndpoints</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.</p>', 'BatchGetJobs' => '<p>Returns a list of resource metadata for a given list of job names. After calling the <code>ListJobs</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags. </p>', 'BatchGetPartition' => '<p>Retrieves partitions in a batch request.</p>', 'BatchGetTriggers' => '<p>Returns a list of resource metadata for a given list of trigger names. After calling the <code>ListTriggers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.</p>', 'BatchGetWorkflows' => '<p>Returns a list of resource metadata for a given list of workflow names. After calling the <code>ListWorkflows</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.</p>', 'BatchStopJobRun' => '<p>Stops one or more job runs for a specified job definition.</p>', 'BatchUpdatePartition' => '<p>Updates one or more partitions in a batch operation.</p>', 'CancelMLTaskRun' => '<p>Cancels (stops) a task run. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can cancel a machine learning task run at any time by calling <code>CancelMLTaskRun</code> with a task run\'s parent transform\'s <code>TransformID</code> and the task run\'s <code>TaskRunId</code>. </p>', 'CancelStatement' => '<p>Cancels the statement.</p>', 'CheckSchemaVersionValidity' => '<p>Validates the supplied schema. This call has no side effects, it simply validates using the supplied schema using <code>DataFormat</code> as the format. Since it does not take a schema set name, no compatibility checks are performed.</p>', 'CreateBlueprint' => '<p>Registers a blueprint with Glue.</p>', 'CreateClassifier' => '<p>Creates a classifier in the user\'s account. This can be a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field of the request is present.</p>', 'CreateConnection' => '<p>Creates a connection definition in the Data Catalog.</p>', 'CreateCrawler' => '<p>Creates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the <code>s3Targets</code> field, the <code>jdbcTargets</code> field, or the <code>DynamoDBTargets</code> field.</p>', 'CreateCustomEntityType' => '<p>Creates a custom pattern that is used to detect sensitive data across the columns and rows of your structured data.</p> <p>Each custom pattern you create specifies a regular expression and an optional list of context words. If no context words are passed only a regular expression is checked.</p>', 'CreateDatabase' => '<p>Creates a new database in a Data Catalog.</p>', 'CreateDevEndpoint' => '<p>Creates a new development endpoint.</p>', 'CreateJob' => '<p>Creates a new job definition.</p>', 'CreateMLTransform' => '<p>Creates an Glue machine learning transform. This operation creates the transform and all the necessary parameters to train it.</p> <p>Call this operation as the first step in the process of using a machine learning transform (such as the <code>FindMatches</code> transform) for deduplicating data. You can provide an optional <code>Description</code>, in addition to the parameters that you want to use for your algorithm.</p> <p>You must also specify certain parameters for the tasks that Glue runs on your behalf as part of learning from your data and creating a high-quality machine learning transform. These parameters include <code>Role</code>, and optionally, <code>AllocatedCapacity</code>, <code>Timeout</code>, and <code>MaxRetries</code>. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html">Jobs</a>.</p>', 'CreatePartition' => '<p>Creates a new partition.</p>', 'CreatePartitionIndex' => '<p>Creates a specified partition index in an existing table.</p>', 'CreateRegistry' => '<p>Creates a new registry which may be used to hold a collection of schemas.</p>', 'CreateSchema' => '<p>Creates a new schema set and registers the schema definition. Returns an error if the schema set already exists without actually registering the version.</p> <p>When the schema set is created, a version checkpoint will be set to the first version. Compatibility mode "DISABLED" restricts any additional schema versions from being added after the first schema version. For all other compatibility modes, validation of compatibility settings will be applied only from the second version onwards when the <code>RegisterSchemaVersion</code> API is used.</p> <p>When this API is called without a <code>RegistryId</code>, this will create an entry for a "default-registry" in the registry database tables, if it is not already present.</p>', 'CreateScript' => '<p>Transforms a directed acyclic graph (DAG) into code.</p>', 'CreateSecurityConfiguration' => '<p>Creates a new security configuration. A security configuration is a set of security properties that can be used by Glue. You can use a security configuration to encrypt data at rest. For information about using security configurations in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html">Encrypting Data Written by Crawlers, Jobs, and Development Endpoints</a>.</p>', 'CreateSession' => '<p>Creates a new session.</p>', 'CreateTable' => '<p>Creates a new table definition in the Data Catalog.</p>', 'CreateTrigger' => '<p>Creates a new trigger.</p>', 'CreateUserDefinedFunction' => '<p>Creates a new function definition in the Data Catalog.</p>', 'CreateWorkflow' => '<p>Creates a new workflow.</p>', 'DeleteBlueprint' => '<p>Deletes an existing blueprint.</p>', 'DeleteClassifier' => '<p>Removes a classifier from the Data Catalog.</p>', 'DeleteColumnStatisticsForPartition' => '<p>Delete the partition column statistics of a column.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeletePartition</code>.</p>', 'DeleteColumnStatisticsForTable' => '<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeleteTable</code>.</p>', 'DeleteConnection' => '<p>Deletes a connection from the Data Catalog.</p>', 'DeleteCrawler' => '<p>Removes a specified crawler from the Glue Data Catalog, unless the crawler state is <code>RUNNING</code>.</p>', 'DeleteCustomEntityType' => '<p>Deletes a custom pattern by specifying its name.</p>', 'DeleteDatabase' => '<p>Removes a specified database from a Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. Glue deletes these "orphaned" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources that belong to the database.</p> </note>', 'DeleteDevEndpoint' => '<p>Deletes a specified development endpoint.</p>', 'DeleteJob' => '<p>Deletes a specified job definition. If the job definition is not found, no exception is thrown.</p>', 'DeleteMLTransform' => '<p>Deletes an Glue machine learning transform. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. If you no longer need a transform, you can delete it by calling <code>DeleteMLTransforms</code>. However, any Glue jobs that still reference the deleted transform will no longer succeed.</p>', 'DeletePartition' => '<p>Deletes a specified partition.</p>', 'DeletePartitionIndex' => '<p>Deletes a specified partition index from an existing table.</p>', 'DeleteRegistry' => '<p>Delete the entire registry including schema and all of its versions. To get the status of the delete operation, you can call the <code>GetRegistry</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the registry such as the <code>UpdateRegistry</code>, <code>CreateSchema</code>, <code>UpdateSchema</code>, and <code>RegisterSchemaVersion</code> APIs. </p>', 'DeleteResourcePolicy' => '<p>Deletes a specified policy.</p>', 'DeleteSchema' => '<p>Deletes the entire schema set, including the schema set and all of its versions. To get the status of the delete operation, you can call <code>GetSchema</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the schema, such as the <code>GetSchemaByDefinition</code>, and <code>RegisterSchemaVersion</code> APIs.</p>', 'DeleteSchemaVersions' => '<p>Remove versions from the specified schema. A version number or range may be supplied. If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned. Calling the <code>GetSchemaVersions</code> API after this call will list the status of the deleted versions.</p> <p>When the range of version numbers contain check pointed version, the API will return a 409 conflict and will not proceed with the deletion. You have to remove the checkpoint first using the <code>DeleteSchemaCheckpoint</code> API before using this API.</p> <p>You cannot use the <code>DeleteSchemaVersions</code> API to delete the first schema version in the schema set. The first schema version can only be deleted by the <code>DeleteSchema</code> API. This operation will also delete the attached <code>SchemaVersionMetadata</code> under the schema versions. Hard deletes will be enforced on the database.</p> <p>If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned.</p>', 'DeleteSecurityConfiguration' => '<p>Deletes a specified security configuration.</p>', 'DeleteSession' => '<p>Deletes the session.</p>', 'DeleteTable' => '<p>Removes a table definition from the Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these "orphaned" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>', 'DeleteTableVersion' => '<p>Deletes a specified version of a table.</p>', 'DeleteTrigger' => '<p>Deletes a specified trigger. If the trigger is not found, no exception is thrown.</p>', 'DeleteUserDefinedFunction' => '<p>Deletes an existing function definition from the Data Catalog.</p>', 'DeleteWorkflow' => '<p>Deletes a workflow.</p>', 'GetBlueprint' => '<p>Retrieves the details of a blueprint.</p>', 'GetBlueprintRun' => '<p>Retrieves the details of a blueprint run.</p>', 'GetBlueprintRuns' => '<p>Retrieves the details of blueprint runs for a specified blueprint.</p>', 'GetCatalogImportStatus' => '<p>Retrieves the status of a migration operation.</p>', 'GetClassifier' => '<p>Retrieve a classifier by name.</p>', 'GetClassifiers' => '<p>Lists all classifier objects in the Data Catalog.</p>', 'GetColumnStatisticsForPartition' => '<p>Retrieves partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetPartition</code>.</p>', 'GetColumnStatisticsForTable' => '<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetTable</code>.</p>', 'GetConnection' => '<p>Retrieves a connection definition from the Data Catalog.</p>', 'GetConnections' => '<p>Retrieves a list of connection definitions from the Data Catalog.</p>', 'GetCrawler' => '<p>Retrieves metadata for a specified crawler.</p>', 'GetCrawlerMetrics' => '<p>Retrieves metrics about specified crawlers.</p>', 'GetCrawlers' => '<p>Retrieves metadata for all crawlers defined in the customer account.</p>', 'GetCustomEntityType' => '<p>Retrieves the details of a custom pattern by specifying its name.</p>', 'GetDataCatalogEncryptionSettings' => '<p>Retrieves the security configuration for a specified catalog.</p>', 'GetDatabase' => '<p>Retrieves the definition of a specified database.</p>', 'GetDatabases' => '<p>Retrieves all databases defined in a given Data Catalog.</p>', 'GetDataflowGraph' => '<p>Transforms a Python script into a directed acyclic graph (DAG). </p>', 'GetDevEndpoint' => '<p>Retrieves information about a specified development endpoint.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>', 'GetDevEndpoints' => '<p>Retrieves all the development endpoints in this AWS account.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>', 'GetJob' => '<p>Retrieves an existing job definition.</p>', 'GetJobBookmark' => '<p>Returns information on a job bookmark entry.</p>', 'GetJobRun' => '<p>Retrieves the metadata for a given job run.</p>', 'GetJobRuns' => '<p>Retrieves metadata for all runs of a given job definition.</p>', 'GetJobs' => '<p>Retrieves all current job definitions.</p>', 'GetMLTaskRun' => '<p>Gets details for a specific task run on a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can check the stats of any task run by calling <code>GetMLTaskRun</code> with the <code>TaskRunID</code> and its parent transform\'s <code>TransformID</code>.</p>', 'GetMLTaskRuns' => '<p>Gets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling <code>GetMLTaskRuns</code> with their parent transform\'s <code>TransformID</code> and other optional parameters as documented in this section.</p> <p>This operation returns a list of historic runs and must be paginated.</p>', 'GetMLTransform' => '<p>Gets an Glue machine learning transform artifact and all its corresponding metadata. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. You can retrieve their metadata by calling <code>GetMLTransform</code>.</p>', 'GetMLTransforms' => '<p>Gets a sortable, filterable list of existing Glue machine learning transforms. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue, and you can retrieve their metadata by calling <code>GetMLTransforms</code>.</p>', 'GetMapping' => '<p>Creates mappings.</p>', 'GetPartition' => '<p>Retrieves information about a specified partition.</p>', 'GetPartitionIndexes' => '<p>Retrieves the partition indexes associated with a table.</p>', 'GetPartitions' => '<p>Retrieves information about the partitions in a table.</p>', 'GetPlan' => '<p>Gets code to perform a specified mapping.</p>', 'GetRegistry' => '<p>Describes the specified registry in detail.</p>', 'GetResourcePolicies' => '<p>Retrieves the resource policies set on individual resources by Resource Access Manager during cross-account permission grants. Also retrieves the Data Catalog resource policy.</p> <p>If you enabled metadata encryption in Data Catalog settings, and you do not have permission on the KMS key, the operation can\'t return the Data Catalog resource policy.</p>', 'GetResourcePolicy' => '<p>Retrieves a specified resource policy.</p>', 'GetSchema' => '<p>Describes the specified schema in detail.</p>', 'GetSchemaByDefinition' => '<p>Retrieves a schema by the <code>SchemaDefinition</code>. The schema definition is sent to the Schema Registry, canonicalized, and hashed. If the hash is matched within the scope of the <code>SchemaName</code> or ARN (or the default registry, if none is supplied), that schema’s metadata is returned. Otherwise, a 404 or NotFound error is returned. Schema versions in <code>Deleted</code> statuses will not be included in the results.</p>', 'GetSchemaVersion' => '<p>Get the specified schema by its unique ID assigned when a version of the schema is created or registered. Schema versions in Deleted status will not be included in the results.</p>', 'GetSchemaVersionsDiff' => '<p>Fetches the schema version difference in the specified difference type between two stored schema versions in the Schema Registry.</p> <p>This API allows you to compare two schema versions between two schema definitions under the same schema.</p>', 'GetSecurityConfiguration' => '<p>Retrieves a specified security configuration.</p>', 'GetSecurityConfigurations' => '<p>Retrieves a list of all security configurations.</p>', 'GetSession' => '<p>Retrieves the session.</p>', 'GetStatement' => '<p>Retrieves the statement.</p>', 'GetTable' => '<p>Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.</p>', 'GetTableVersion' => '<p>Retrieves a specified version of a table.</p>', 'GetTableVersions' => '<p>Retrieves a list of strings that identify available versions of a specified table.</p>', 'GetTables' => '<p>Retrieves the definitions of some or all of the tables in a given <code>Database</code>.</p>', 'GetTags' => '<p>Retrieves a list of tags associated with a resource.</p>', 'GetTrigger' => '<p>Retrieves the definition of a trigger.</p>', 'GetTriggers' => '<p>Gets all the triggers associated with a job.</p>', 'GetUnfilteredPartitionMetadata' => NULL, 'GetUnfilteredPartitionsMetadata' => NULL, 'GetUnfilteredTableMetadata' => NULL, 'GetUserDefinedFunction' => '<p>Retrieves a specified function definition from the Data Catalog.</p>', 'GetUserDefinedFunctions' => '<p>Retrieves multiple function definitions from the Data Catalog.</p>', 'GetWorkflow' => '<p>Retrieves resource metadata for a workflow.</p>', 'GetWorkflowRun' => '<p>Retrieves the metadata for a given workflow run. </p>', 'GetWorkflowRunProperties' => '<p>Retrieves the workflow run properties which were set during the run.</p>', 'GetWorkflowRuns' => '<p>Retrieves metadata for all runs of a given workflow.</p>', 'ImportCatalogToGlue' => '<p>Imports an existing Amazon Athena Data Catalog to Glue.</p>', 'ListBlueprints' => '<p>Lists all the blueprint names in an account.</p>', 'ListCrawlers' => '<p>Retrieves the names of all crawler resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>', 'ListCrawls' => '<p>Returns all the crawls of a specified crawler. Returns only the crawls that have occurred since the launch date of the crawler history feature, and only retains up to 12 months of crawls. Older crawls will not be returned.</p> <p>You may use this API to:</p> <ul> <li> <p>Retrive all the crawls of a specified crawler.</p> </li> <li> <p>Retrieve all the crawls of a specified crawler within a limited count.</p> </li> <li> <p>Retrieve all the crawls of a specified crawler in a specific time range.</p> </li> <li> <p>Retrieve all the crawls of a specified crawler with a particular state, crawl ID, or DPU hour value.</p> </li> </ul>', 'ListCustomEntityTypes' => '<p>Lists all the custom patterns that have been created.</p>', 'ListDevEndpoints' => '<p>Retrieves the names of all <code>DevEndpoint</code> resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>', 'ListJobs' => '<p>Retrieves the names of all job resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>', 'ListMLTransforms' => '<p> Retrieves a sortable, filterable list of existing Glue machine learning transforms in this Amazon Web Services account, or the resources with the specified tag. This operation takes the optional <code>Tags</code> field, which you can use as a filter of the responses so that tagged resources can be retrieved as a group. If you choose to use tag filtering, only resources with the tags are retrieved. </p>', 'ListRegistries' => '<p>Returns a list of registries that you have created, with minimal registry information. Registries in the <code>Deleting</code> status will not be included in the results. Empty results will be returned if there are no registries available.</p>', 'ListSchemaVersions' => '<p>Returns a list of schema versions that you have created, with minimal information. Schema versions in Deleted status will not be included in the results. Empty results will be returned if there are no schema versions available.</p>', 'ListSchemas' => '<p>Returns a list of schemas with minimal details. Schemas in Deleting status will not be included in the results. Empty results will be returned if there are no schemas available.</p> <p>When the <code>RegistryId</code> is not provided, all the schemas across registries will be part of the API response.</p>', 'ListSessions' => '<p>Retrieve a list of sessions.</p>', 'ListStatements' => '<p>Lists statements for the session.</p>', 'ListTriggers' => '<p>Retrieves the names of all trigger resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>', 'ListWorkflows' => '<p>Lists names of workflows created in the account.</p>', 'PutDataCatalogEncryptionSettings' => '<p>Sets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.</p>', 'PutResourcePolicy' => '<p>Sets the Data Catalog resource policy for access control.</p>', 'PutSchemaVersionMetadata' => '<p>Puts the metadata key value pair for a specified schema version ID. A maximum of 10 key value pairs will be allowed per schema version. They can be added over one or more calls.</p>', 'PutWorkflowRunProperties' => '<p>Puts the specified workflow run properties for the given workflow run. If a property already exists for the specified run, then it overrides the value otherwise adds the property to existing properties.</p>', 'QuerySchemaVersionMetadata' => '<p>Queries for the schema version metadata information. </p>', 'RegisterSchemaVersion' => '<p>Adds a new version to the existing schema. Returns an error if new version of schema does not meet the compatibility requirements of the schema set. This API will not create a new schema set and will return a 404 error if the schema set is not already present in the Schema Registry.</p> <p>If this is the first schema definition to be registered in the Schema Registry, this API will store the schema version and return immediately. Otherwise, this call has the potential to run longer than other operations due to compatibility modes. You can call the <code>GetSchemaVersion</code> API with the <code>SchemaVersionId</code> to check compatibility modes.</p> <p>If the same schema definition is already stored in Schema Registry as a version, the schema ID of the existing schema is returned to the caller.</p>', 'RemoveSchemaVersionMetadata' => '<p>Removes a key value pair from the schema version metadata for the specified schema version ID.</p>', 'ResetJobBookmark' => '<p>Resets a bookmark entry.</p>', 'ResumeWorkflowRun' => '<p>Restarts selected nodes of a previous partially completed workflow run and resumes the workflow run. The selected nodes and all nodes that are downstream from the selected nodes are run.</p>', 'RunStatement' => '<p>Executes the statement.</p>', 'SearchTables' => '<p>Searches a set of tables based on properties in the table metadata as well as on the parent database. You can search against text or filter conditions. </p> <p>You can only get tables that you have access to based on the security policies defined in Lake Formation. You need at least a read-only access to the table for it to be returned. If you do not have access to all the columns in the table, these columns will not be searched against when returning the list of tables back to you. If you have access to the columns but not the data in the columns, those columns and the associated metadata for those columns will be included in the search. </p>', 'StartBlueprintRun' => '<p>Starts a new run of the specified blueprint.</p>', 'StartCrawler' => '<p>Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException">CrawlerRunningException</a>.</p>', 'StartCrawlerSchedule' => '<p>Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>.</p>', 'StartExportLabelsTaskRun' => '<p>Begins an asynchronous task to export all labeled data for a particular transform. This task is the only label-related API call that is not part of the typical active learning workflow. You typically use <code>StartExportLabelsTaskRun</code> when you want to work with all of your existing labels at the same time, such as when you want to remove or change labels that were previously submitted as truth. This API operation accepts the <code>TransformId</code> whose labels you want to export and an Amazon Simple Storage Service (Amazon S3) path to export the labels to. The operation returns a <code>TaskRunId</code>. You can check on the status of your task run by calling the <code>GetMLTaskRun</code> API.</p>', 'StartImportLabelsTaskRun' => '<p>Enables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality. This API operation is generally used as part of the active learning workflow that starts with the <code>StartMLLabelingSetGenerationTaskRun</code> call and that ultimately results in improving the quality of your machine learning transform. </p> <p>After the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue machine learning will have generated a series of questions for humans to answer. (Answering these questions is often called \'labeling\' in the machine learning workflows). In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” After the labeling process is finished, users upload their answers/labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform use the new and improved labels and perform a higher-quality transformation.</p> <p>By default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns from and combines all labels that you upload unless you set <code>Replace</code> to true. If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code> deletes and forgets all previously uploaded labels and learns only from the exact set that you upload. Replacing labels can be helpful if you realize that you previously uploaded incorrect labels, and you believe that they are having a negative effect on your transform quality.</p> <p>You can check on the status of your task run by calling the <code>GetMLTaskRun</code> operation. </p>', 'StartJobRun' => '<p>Starts a job run using a job definition.</p>', 'StartMLEvaluationTaskRun' => '<p>Starts a task to estimate the quality of the transform. </p> <p>When you provide label sets as examples of truth, Glue machine learning uses some of those examples to learn from them. The rest of the labels are used as a test to estimate quality.</p> <p>Returns a unique identifier for the run. You can call <code>GetMLTaskRun</code> to get more information about the stats of the <code>EvaluationTaskRun</code>.</p>', 'StartMLLabelingSetGenerationTaskRun' => '<p>Starts the active learning workflow for your machine learning transform to improve the transform\'s quality by generating label sets and adding labels.</p> <p>When the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue will have generated a "labeling set" or a set of questions for humans to answer.</p> <p>In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” </p> <p>After the labeling process is finished, you can upload your labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform will use the new and improved labels and perform a higher-quality transformation.</p>', 'StartTrigger' => '<p>Starts an existing trigger. See <a href="https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html">Triggering Jobs</a> for information about how different types of trigger are started.</p>', 'StartWorkflowRun' => '<p>Starts a new run of the specified workflow.</p>', 'StopCrawler' => '<p>If the specified crawler is running, stops the crawl.</p>', 'StopCrawlerSchedule' => '<p>Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running.</p>', 'StopSession' => '<p>Stops the session.</p>', 'StopTrigger' => '<p>Stops a specified trigger.</p>', 'StopWorkflowRun' => '<p>Stops the execution of the specified workflow run.</p>', 'TagResource' => '<p>Adds tags to a resource. A tag is a label you can assign to an Amazon Web Services resource. In Glue, you can tag only certain resources. For information about what resources you can tag, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a>.</p>', 'UntagResource' => '<p>Removes tags from a resource.</p>', 'UpdateBlueprint' => '<p>Updates a registered blueprint.</p>', 'UpdateClassifier' => '<p>Modifies an existing classifier (a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field is present).</p>', 'UpdateColumnStatisticsForPartition' => '<p>Creates or updates partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdatePartition</code>.</p>', 'UpdateColumnStatisticsForTable' => '<p>Creates or updates table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdateTable</code>.</p>', 'UpdateConnection' => '<p>Updates a connection definition in the Data Catalog.</p>', 'UpdateCrawler' => '<p>Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code> before updating it.</p>', 'UpdateCrawlerSchedule' => '<p>Updates the schedule of a crawler using a <code>cron</code> expression. </p>', 'UpdateDatabase' => '<p>Updates an existing database definition in a Data Catalog.</p>', 'UpdateDevEndpoint' => '<p>Updates a specified development endpoint.</p>', 'UpdateJob' => '<p>Updates an existing job definition. The previous job definition is completely overwritten by this information.</p>', 'UpdateMLTransform' => '<p>Updates an existing machine learning transform. Call this operation to tune the algorithm parameters to achieve better results.</p> <p>After calling this operation, you can call the <code>StartMLEvaluationTaskRun</code> operation to assess how well your new parameters achieved your goals (such as improving the quality of your machine learning transform, or making it more cost-effective).</p>', 'UpdatePartition' => '<p>Updates a partition.</p>', 'UpdateRegistry' => '<p>Updates an existing registry which is used to hold a collection of schemas. The updated properties relate to the registry, and do not modify any of the schemas within the registry. </p>', 'UpdateSchema' => '<p>Updates the description, compatibility setting, or version checkpoint for a schema set.</p> <p>For updating the compatibility setting, the call will not validate compatibility for the entire set of schema versions with the new compatibility setting. If the value for <code>Compatibility</code> is provided, the <code>VersionNumber</code> (a checkpoint) is also required. The API will validate the checkpoint version number for consistency.</p> <p>If the value for the <code>VersionNumber</code> (checkpoint) is provided, <code>Compatibility</code> is optional and this can be used to set/reset a checkpoint for the schema.</p> <p>This update will happen only if the schema is in the AVAILABLE state.</p>', 'UpdateTable' => '<p>Updates a metadata table in the Data Catalog.</p>', 'UpdateTrigger' => '<p>Updates a trigger definition.</p>', 'UpdateUserDefinedFunction' => '<p>Updates an existing function definition in the Data Catalog.</p>', 'UpdateWorkflow' => '<p>Updates an existing workflow.</p>', ], 'shapes' => [ 'AccessDeniedException' => [ 'base' => '<p>Access to a resource was denied.</p>', 'refs' => [], ], 'AccountId' => [ 'base' => NULL, 'refs' => [ 'LakeFormationConfiguration$AccountId' => '<p>Required for cross account crawls. For same account crawls as the target data, this can be left as null.</p>', ], ], 'Action' => [ 'base' => '<p>Defines an action to be initiated by a trigger.</p>', 'refs' => [ 'ActionList$member' => NULL, ], ], 'ActionList' => [ 'base' => NULL, 'refs' => [ 'CreateTriggerRequest$Actions' => '<p>The actions initiated by this trigger when it fires.</p>', 'Trigger$Actions' => '<p>The actions initiated by this trigger.</p>', 'TriggerUpdate$Actions' => '<p>The actions initiated by this trigger.</p>', ], ], 'AdditionalOptions' => [ 'base' => NULL, 'refs' => [ 'JDBCConnectorTarget$AdditionalOptions' => '<p>Additional connection options for the connector.</p>', 'SparkConnectorSource$AdditionalOptions' => '<p>Additional connection options for the connector.</p>', 'SparkConnectorTarget$AdditionalOptions' => '<p>Additional connection options for the connector.</p>', ], ], 'AdditionalPlanOptionsMap' => [ 'base' => NULL, 'refs' => [ 'GetPlanRequest$AdditionalPlanOptionsMap' => '<p>A map to hold additional optional key-value parameters.</p> <p>Currently, these key-value pairs are supported:</p> <ul> <li> <p> <code>inferSchema</code>  —  Specifies whether to set <code>inferSchema</code> to true or false for the default script generated by an Glue job. For example, to set <code>inferSchema</code> to true, pass the following key value pair:</p> <p> <code>--additional-plan-options-map \'{"inferSchema":"true"}\'</code> </p> </li> </ul>', ], ], 'AggFunction' => [ 'base' => NULL, 'refs' => [ 'AggregateOperation$AggFunc' => '<p>Specifies the aggregation function to apply.</p> <p>Possible aggregation functions include: avg countDistinct, count, first, last, kurtosis, max, min, skewness, stddev_samp, stddev_pop, sum, sumDistinct, var_samp, var_pop</p>', ], ], 'Aggregate' => [ 'base' => '<p>Specifies a transform that groups rows by chosen fields and computes the aggregated value by specified function.</p>', 'refs' => [ 'CodeGenConfigurationNode$Aggregate' => '<p>Specifies a transform that groups rows by chosen fields and computes the aggregated value by specified function.</p>', ], ], 'AggregateOperation' => [ 'base' => '<p>Specifies the set of parameters needed to perform aggregation in the aggregate transform.</p>', 'refs' => [ 'AggregateOperations$member' => NULL, ], ], 'AggregateOperations' => [ 'base' => NULL, 'refs' => [ 'Aggregate$Aggs' => '<p>Specifies the aggregate functions to be performed on specified fields. </p>', ], ], 'AlreadyExistsException' => [ 'base' => '<p>A resource to be created or added already exists.</p>', 'refs' => [], ], 'ApplyMapping' => [ 'base' => '<p>Specifies a transform that maps data property keys in the data source to data property keys in the data target. You can rename keys, modify the data types for keys, and choose which keys to drop from the dataset.</p>', 'refs' => [ 'CodeGenConfigurationNode$ApplyMapping' => '<p>Specifies a transform that maps data property keys in the data source to data property keys in the data target. You can rename keys, modify the data types for keys, and choose which keys to drop from the dataset.</p>', ], ], 'AthenaConnectorSource' => [ 'base' => '<p>Specifies a connector to an Amazon Athena data source.</p>', 'refs' => [ 'CodeGenConfigurationNode$AthenaConnectorSource' => '<p>Specifies a connector to an Amazon Athena data source.</p>', ], ], 'AttemptCount' => [ 'base' => NULL, 'refs' => [ 'JobRun$Attempt' => '<p>The number of the attempt to run this job.</p>', ], ], 'AuditColumnNamesList' => [ 'base' => NULL, 'refs' => [ 'AuditContext$RequestedColumns' => '<p>The requested columns for audit.</p>', ], ], 'AuditContext' => [ 'base' => '<p>A structure containing information for audit.</p>', 'refs' => [ 'GetUnfilteredPartitionMetadataRequest$AuditContext' => NULL, 'GetUnfilteredPartitionsMetadataRequest$AuditContext' => NULL, 'GetUnfilteredTableMetadataRequest$AuditContext' => NULL, ], ], 'AuditContextString' => [ 'base' => NULL, 'refs' => [ 'AuditContext$AdditionalAuditContext' => '<p>The context for the audit..</p>', ], ], 'BackfillError' => [ 'base' => '<p>A list of errors that can occur when registering partition indexes for an existing table.</p> <p>These errors give the details about why an index registration failed and provide a limited number of partitions in the response, so that you can fix the partitions at fault and try registering the index again. The most common set of errors that can occur are categorized as follows:</p> <ul> <li> <p>EncryptedPartitionError: The partitions are encrypted.</p> </li> <li> <p>InvalidPartitionTypeDataError: The partition value doesn\'t match the data type for that partition column.</p> </li> <li> <p>MissingPartitionValueError: The partitions are encrypted.</p> </li> <li> <p>UnsupportedPartitionCharacterError: Characters inside the partition value are not supported. For example: U+0000 , U+0001, U+0002.</p> </li> <li> <p>InternalError: Any error which does not belong to other error codes.</p> </li> </ul>', 'refs' => [ 'BackfillErrors$member' => NULL, ], ], 'BackfillErrorCode' => [ 'base' => NULL, 'refs' => [ 'BackfillError$Code' => '<p>The error code for an error that occurred when registering partition indexes for an existing table.</p>', ], ], 'BackfillErroredPartitionsList' => [ 'base' => NULL, 'refs' => [ 'BackfillError$Partitions' => '<p>A list of a limited number of partitions in the response.</p>', ], ], 'BackfillErrors' => [ 'base' => NULL, 'refs' => [ 'PartitionIndexDescriptor$BackfillErrors' => '<p>A list of errors that can occur when registering partition indexes for an existing table.</p>', ], ], 'BasicCatalogTarget' => [ 'base' => '<p>Specifies a target that uses a Glue Data Catalog table.</p>', 'refs' => [ 'CodeGenConfigurationNode$CatalogTarget' => '<p>Specifies a target that uses a Glue Data Catalog table.</p>', ], ], 'BatchCreatePartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchCreatePartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeleteConnectionRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeleteConnectionResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeletePartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeletePartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeletePartitionValueList' => [ 'base' => NULL, 'refs' => [ 'BatchDeletePartitionRequest$PartitionsToDelete' => '<p>A list of <code>PartitionInput</code> structures that define the partitions to be deleted.</p>', ], ], 'BatchDeleteTableNameList' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteTableRequest$TablesToDelete' => '<p>A list of the table to delete.</p>', ], ], 'BatchDeleteTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeleteTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeleteTableVersionList' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteTableVersionRequest$VersionIds' => '<p>A list of the IDs of versions to be deleted. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.</p>', ], ], 'BatchDeleteTableVersionRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchDeleteTableVersionResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetBlueprintNames' => [ 'base' => NULL, 'refs' => [ 'BatchGetBlueprintsRequest$Names' => '<p>A list of blueprint names.</p>', ], ], 'BatchGetBlueprintsRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetBlueprintsResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetCrawlersRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetCrawlersResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetCustomEntityTypesRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetCustomEntityTypesResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetDevEndpointsRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetDevEndpointsResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetJobsRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetJobsResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetPartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetPartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetPartitionValueList' => [ 'base' => NULL, 'refs' => [ 'BatchGetPartitionRequest$PartitionsToGet' => '<p>A list of partition values identifying the partitions to retrieve.</p>', 'BatchGetPartitionResponse$UnprocessedKeys' => '<p>A list of the partition values in the request for which partitions were not returned.</p>', ], ], 'BatchGetTriggersRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetTriggersResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetWorkflowsRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchGetWorkflowsResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchSize' => [ 'base' => NULL, 'refs' => [ 'EventBatchingCondition$BatchSize' => '<p>Number of events that must be received from Amazon EventBridge before EventBridge event trigger fires.</p>', ], ], 'BatchStopJobRunError' => [ 'base' => '<p>Records an error that occurred when attempting to stop a specified job run.</p>', 'refs' => [ 'BatchStopJobRunErrorList$member' => NULL, ], ], 'BatchStopJobRunErrorList' => [ 'base' => NULL, 'refs' => [ 'BatchStopJobRunResponse$Errors' => '<p>A list of the errors that were encountered in trying to stop <code>JobRuns</code>, including the <code>JobRunId</code> for which each error was encountered and details about the error.</p>', ], ], 'BatchStopJobRunJobRunIdList' => [ 'base' => NULL, 'refs' => [ 'BatchStopJobRunRequest$JobRunIds' => '<p>A list of the <code>JobRunIds</code> that should be stopped for that job definition.</p>', ], ], 'BatchStopJobRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchStopJobRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchStopJobRunSuccessfulSubmission' => [ 'base' => '<p>Records a successful request to stop a specified <code>JobRun</code>.</p>', 'refs' => [ 'BatchStopJobRunSuccessfulSubmissionList$member' => NULL, ], ], 'BatchStopJobRunSuccessfulSubmissionList' => [ 'base' => NULL, 'refs' => [ 'BatchStopJobRunResponse$SuccessfulSubmissions' => '<p>A list of the JobRuns that were successfully submitted for stopping.</p>', ], ], 'BatchUpdatePartitionFailureEntry' => [ 'base' => '<p>Contains information about a batch update partition error.</p>', 'refs' => [ 'BatchUpdatePartitionFailureList$member' => NULL, ], ], 'BatchUpdatePartitionFailureList' => [ 'base' => NULL, 'refs' => [ 'BatchUpdatePartitionResponse$Errors' => '<p>The errors encountered when trying to update the requested partitions. A list of <code>BatchUpdatePartitionFailureEntry</code> objects.</p>', ], ], 'BatchUpdatePartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'BatchUpdatePartitionRequestEntry' => [ 'base' => '<p>A structure that contains the values and structure used to update a partition.</p>', 'refs' => [ 'BatchUpdatePartitionRequestEntryList$member' => NULL, ], ], 'BatchUpdatePartitionRequestEntryList' => [ 'base' => NULL, 'refs' => [ 'BatchUpdatePartitionRequest$Entries' => '<p>A list of up to 100 <code>BatchUpdatePartitionRequestEntry</code> objects to update.</p>', ], ], 'BatchUpdatePartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'BatchWindow' => [ 'base' => NULL, 'refs' => [ 'EventBatchingCondition$BatchWindow' => '<p>Window of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.</p>', ], ], 'BinaryColumnStatisticsData' => [ 'base' => '<p>Defines column statistics supported for bit sequence data values.</p>', 'refs' => [ 'ColumnStatisticsData$BinaryColumnStatisticsData' => '<p>Binary column statistics data.</p>', ], ], 'Blob' => [ 'base' => NULL, 'refs' => [ 'DecimalNumber$UnscaledValue' => '<p>The unscaled numeric value.</p>', ], ], 'Blueprint' => [ 'base' => '<p>The details of a blueprint.</p>', 'refs' => [ 'Blueprints$member' => NULL, 'GetBlueprintResponse$Blueprint' => '<p>Returns a <code>Blueprint</code> object.</p>', ], ], 'BlueprintDetails' => [ 'base' => '<p>The details of a blueprint.</p>', 'refs' => [ 'Workflow$BlueprintDetails' => '<p>This structure indicates the details of the blueprint that this particular workflow is created from.</p>', ], ], 'BlueprintNames' => [ 'base' => NULL, 'refs' => [ 'BatchGetBlueprintsResponse$MissingBlueprints' => '<p>Returns a list of <code>BlueprintNames</code> that were not found.</p>', 'ListBlueprintsResponse$Blueprints' => '<p>List of names of blueprints in the account.</p>', ], ], 'BlueprintParameterSpec' => [ 'base' => NULL, 'refs' => [ 'Blueprint$ParameterSpec' => '<p>A JSON string that indicates the list of parameter specifications for the blueprint.</p>', 'LastActiveDefinition$ParameterSpec' => '<p>A JSON string specifying the parameters for the blueprint.</p>', ], ], 'BlueprintParameters' => [ 'base' => NULL, 'refs' => [ 'BlueprintRun$Parameters' => '<p>The blueprint parameters as a string. You will have to provide a value for each key that is required from the parameter spec that is defined in the <code>Blueprint$ParameterSpec</code>.</p>', 'StartBlueprintRunRequest$Parameters' => '<p>Specifies the parameters as a <code>BlueprintParameters</code> object.</p>', ], ], 'BlueprintRun' => [ 'base' => '<p>The details of a blueprint run.</p>', 'refs' => [ 'BlueprintRuns$member' => NULL, 'GetBlueprintRunResponse$BlueprintRun' => '<p>Returns a <code>BlueprintRun</code> object.</p>', ], ], 'BlueprintRunState' => [ 'base' => NULL, 'refs' => [ 'BlueprintRun$State' => '<p>The state of the blueprint run. Possible values are:</p> <ul> <li> <p>Running — The blueprint run is in progress.</p> </li> <li> <p>Succeeded — The blueprint run completed successfully.</p> </li> <li> <p>Failed — The blueprint run failed and rollback is complete.</p> </li> <li> <p>Rolling Back — The blueprint run failed and rollback is in progress.</p> </li> </ul>', ], ], 'BlueprintRuns' => [ 'base' => NULL, 'refs' => [ 'GetBlueprintRunsResponse$BlueprintRuns' => '<p>Returns a list of <code>BlueprintRun</code> objects.</p>', ], ], 'BlueprintStatus' => [ 'base' => NULL, 'refs' => [ 'Blueprint$Status' => '<p>The status of the blueprint registration.</p> <ul> <li> <p>Creating — The blueprint registration is in progress.</p> </li> <li> <p>Active — The blueprint has been successfully registered.</p> </li> <li> <p>Updating — An update to the blueprint registration is in progress.</p> </li> <li> <p>Failed — The blueprint registration failed.</p> </li> </ul>', ], ], 'Blueprints' => [ 'base' => NULL, 'refs' => [ 'BatchGetBlueprintsResponse$Blueprints' => '<p>Returns a list of blueprint as a <code>Blueprints</code> object.</p>', ], ], 'Boolean' => [ 'base' => NULL, 'refs' => [ 'CatalogImportStatus$ImportCompleted' => '<p> <code>True</code> if the migration has completed, or <code>False</code> otherwise.</p>', 'CodeGenNodeArg$Param' => '<p>True if the value is used as a parameter.</p>', 'ConnectionPasswordEncryption$ReturnConnectionPasswordEncrypted' => '<p>When the <code>ReturnConnectionPasswordEncrypted</code> flag is set to "true", passwords remain encrypted in the responses of <code>GetConnection</code> and <code>GetConnections</code>. This encryption takes effect independently from catalog encryption. </p>', 'CrawlerMetrics$StillEstimating' => '<p>True if the crawler is still estimating how long it will take to complete this run.</p>', 'GetConnectionRequest$HidePassword' => '<p>Allows you to retrieve the connection metadata without returning the password. For instance, the Glue console uses this flag to retrieve the connection, and does not display the password. Set this parameter when the caller might not have permission to use the KMS key to decrypt the password, but it does have permission to access the rest of the connection properties.</p>', 'GetConnectionsRequest$HidePassword' => '<p>Allows you to retrieve the connection metadata without returning the password. For instance, the Glue console uses this flag to retrieve the connection, and does not display the password. Set this parameter when the caller might not have permission to use the KMS key to decrypt the password, but it does have permission to access the rest of the connection properties.</p>', 'GetUnfilteredPartitionMetadataResponse$IsRegisteredWithLakeFormation' => NULL, 'GetUnfilteredTableMetadataResponse$IsRegisteredWithLakeFormation' => NULL, 'StorageDescriptor$Compressed' => '<p> <code>True</code> if the data in the table is compressed, or <code>False</code> if not.</p>', 'StorageDescriptor$StoredAsSubDirectories' => '<p> <code>True</code> if the table data is stored in subdirectories, or <code>False</code> if not.</p>', 'Table$IsRegisteredWithLakeFormation' => '<p>Indicates whether the table has been registered with Lake Formation.</p>', 'UnfilteredPartition$IsRegisteredWithLakeFormation' => NULL, ], ], 'BooleanColumnStatisticsData' => [ 'base' => '<p>Defines column statistics supported for Boolean data columns.</p>', 'refs' => [ 'ColumnStatisticsData$BooleanColumnStatisticsData' => '<p>Boolean column statistics data.</p>', ], ], 'BooleanNullable' => [ 'base' => NULL, 'refs' => [ 'GetPartitionsRequest$ExcludeColumnSchema' => '<p>When true, specifies not returning the partition column schema. Useful when you are interested only in other partition attributes such as partition values or location. This approach avoids the problem of a large response by not returning duplicate data.</p>', 'UpdateTableRequest$SkipArchive' => '<p>By default, <code>UpdateTable</code> always creates an archived version of the table before updating it. However, if <code>skipArchive</code> is set to true, <code>UpdateTable</code> does not create the archived version.</p>', ], ], 'BooleanValue' => [ 'base' => NULL, 'refs' => [ 'CreateTriggerRequest$StartOnCreation' => '<p>Set to <code>true</code> to start <code>SCHEDULED</code> and <code>CONDITIONAL</code> triggers when created. True is not supported for <code>ON_DEMAND</code> triggers.</p>', 'GetJobRunRequest$PredecessorsIncluded' => '<p>True if a list of predecessor runs should be returned.</p>', 'S3CsvSource$OptimizePerformance' => '<p>A Boolean value that specifies whether to use the advanced SIMD CSV reader along with Apache Arrow based columnar memory formats. Only available in Glue version 3.0.</p>', 'UpdateDevEndpointRequest$UpdateEtlLibraries' => '<p> <code>True</code> if the list of custom libraries to be loaded in the development endpoint needs to be updated, or <code>False</code> if otherwise.</p>', ], ], 'BoundedPartitionValueList' => [ 'base' => NULL, 'refs' => [ 'BatchUpdatePartitionFailureEntry$PartitionValueList' => '<p>A list of values defining the partitions.</p>', 'BatchUpdatePartitionRequestEntry$PartitionValueList' => '<p>A list of values defining the partitions.</p>', 'UpdatePartitionRequest$PartitionValueList' => '<p>List of partition key values that define the partition to update.</p>', ], ], 'BoxedBoolean' => [ 'base' => NULL, 'refs' => [ 'CatalogKafkaSource$DetectSchema' => '<p>Whether to automatically determine the schema from the incoming data.</p>', 'CatalogKinesisSource$DetectSchema' => '<p>Whether to automatically determine the schema from the incoming data.</p>', 'CatalogSchemaChangePolicy$EnableUpdateCatalog' => '<p>Whether to use the specified update behavior when the crawler finds a changed schema.</p>', 'DirectKafkaSource$DetectSchema' => '<p>Whether to automatically determine the schema from the incoming data.</p>', 'DirectKinesisSource$DetectSchema' => '<p>Whether to automatically determine the schema from the incoming data.</p>', 'DirectSchemaChangePolicy$EnableUpdateCatalog' => '<p>Whether to use the specified update behavior when the crawler finds a changed schema.</p>', 'FilterExpression$Negated' => '<p>Whether the expression is to be negated.</p>', 'KinesisStreamingSourceOptions$AddIdleTimeBetweenReads' => '<p>Adds a time delay between two consecutive getRecords operations. The default value is <code>"False"</code>. This option is only configurable for Glue version 2.0 and above.</p>', 'KinesisStreamingSourceOptions$AvoidEmptyBatches' => '<p>Avoids creating an empty microbatch job by checking for unread data in the Kinesis data stream before the batch is started. The default value is <code>"False"</code>.</p>', 'Mapping$Dropped' => '<p>If true, then the column is removed.</p>', 'NullCheckBoxList$IsEmpty' => '<p>Specifies that an empty string is considered as a null value.</p>', 'NullCheckBoxList$IsNullString' => '<p>Specifies that a value spelling out the word \'null\' is considered as a null value.</p>', 'NullCheckBoxList$IsNegOne' => '<p>Specifies that an integer value of -1 is considered as a null value.</p>', 'S3CsvSource$Recurse' => '<p>If set to true, recursively reads files in all subdirectories under the specified paths.</p>', 'S3CsvSource$Multiline' => '<p>A Boolean value that specifies whether a single record can span multiple lines. This can occur when a field contains a quoted new-line character. You must set this option to True if any record spans multiple lines. The default value is <code>False</code>, which allows for more aggressive file-splitting during parsing.</p>', 'S3CsvSource$WithHeader' => '<p>A Boolean value that specifies whether to treat the first line as a header. The default value is <code>False</code>.</p>', 'S3CsvSource$WriteHeader' => '<p>A Boolean value that specifies whether to write the header to output. The default value is <code>True</code>. </p>', 'S3CsvSource$SkipFirst' => '<p>A Boolean value that specifies whether to skip the first data line. The default value is <code>False</code>.</p>', 'S3DirectSourceAdditionalOptions$EnableSamplePath' => '<p>Sets option to enable a sample path.</p>', 'S3JsonSource$Recurse' => '<p>If set to true, recursively reads files in all subdirectories under the specified paths.</p>', 'S3JsonSource$Multiline' => '<p>A Boolean value that specifies whether a single record can span multiple lines. This can occur when a field contains a quoted new-line character. You must set this option to True if any record spans multiple lines. The default value is <code>False</code>, which allows for more aggressive file-splitting during parsing.</p>', 'S3ParquetSource$Recurse' => '<p>If set to true, recursively reads files in all subdirectories under the specified paths.</p>', ], ], 'BoxedDoubleFraction' => [ 'base' => NULL, 'refs' => [ 'PIIDetection$SampleFraction' => '<p>Indicates the fraction of the data to sample when scanning for PII entities. </p>', 'PIIDetection$ThresholdFraction' => '<p>Indicates the fraction of the data that must be met in order for a column to be identified as PII data. </p>', ], ], 'BoxedLong' => [ 'base' => NULL, 'refs' => [ 'S3DirectSourceAdditionalOptions$BoundedSize' => '<p>Sets the upper limit for the target size of the dataset in bytes that will be processed.</p>', 'S3DirectSourceAdditionalOptions$BoundedFiles' => '<p>Sets the upper limit for the target number of files that will be processed.</p>', 'S3SourceAdditionalOptions$BoundedSize' => '<p>Sets the upper limit for the target size of the dataset in bytes that will be processed.</p>', 'S3SourceAdditionalOptions$BoundedFiles' => '<p>Sets the upper limit for the target number of files that will be processed.</p>', ], ], 'BoxedNonNegativeInt' => [ 'base' => NULL, 'refs' => [ 'KafkaStreamingSourceOptions$NumRetries' => '<p>The number of times to retry before failing to fetch Kafka offsets. The default value is <code>3</code>.</p>', 'KafkaStreamingSourceOptions$MinPartitions' => '<p>The desired minimum number of partitions to read from Kafka. The default value is null, which means that the number of spark partitions is equal to the number of Kafka partitions.</p>', 'KinesisStreamingSourceOptions$NumRetries' => '<p>The maximum number of retries for Kinesis Data Streams API requests. The default value is <code>3</code>.</p>', 'S3CsvSource$MaxBand' => '<p>This option controls the duration in milliseconds after which the s3 listing is likely to be consistent. Files with modification timestamps falling within the last maxBand milliseconds are tracked specially when using JobBookmarks to account for Amazon S3 eventual consistency. Most users don\'t need to set this option. The default is 900000 milliseconds, or 15 minutes.</p>', 'S3CsvSource$MaxFilesInBand' => '<p>This option specifies the maximum number of files to save from the last maxBand seconds. If this number is exceeded, extra files are skipped and only processed in the next job run.</p>', 'S3JsonSource$MaxBand' => '<p>This option controls the duration in milliseconds after which the s3 listing is likely to be consistent. Files with modification timestamps falling within the last maxBand milliseconds are tracked specially when using JobBookmarks to account for Amazon S3 eventual consistency. Most users don\'t need to set this option. The default is 900000 milliseconds, or 15 minutes.</p>', 'S3JsonSource$MaxFilesInBand' => '<p>This option specifies the maximum number of files to save from the last maxBand seconds. If this number is exceeded, extra files are skipped and only processed in the next job run.</p>', 'S3ParquetSource$MaxBand' => '<p>This option controls the duration in milliseconds after which the s3 listing is likely to be consistent. Files with modification timestamps falling within the last maxBand milliseconds are tracked specially when using JobBookmarks to account for Amazon S3 eventual consistency. Most users don\'t need to set this option. The default is 900000 milliseconds, or 15 minutes.</p>', 'S3ParquetSource$MaxFilesInBand' => '<p>This option specifies the maximum number of files to save from the last maxBand seconds. If this number is exceeded, extra files are skipped and only processed in the next job run.</p>', ], ], 'BoxedNonNegativeLong' => [ 'base' => NULL, 'refs' => [ 'JDBCConnectorOptions$LowerBound' => '<p>The minimum value of <code>partitionColumn</code> that is used to decide partition stride.</p>', 'JDBCConnectorOptions$UpperBound' => '<p>The maximum value of <code>partitionColumn</code> that is used to decide partition stride.</p>', 'JDBCConnectorOptions$NumPartitions' => '<p>The number of partitions. This value, along with <code>lowerBound</code> (inclusive) and <code>upperBound</code> (exclusive), form partition strides for generated <code>WHERE</code> clause expressions that are used to split the <code>partitionColumn</code>.</p>', 'KafkaStreamingSourceOptions$PollTimeoutMs' => '<p>The timeout in milliseconds to poll data from Kafka in Spark job executors. The default value is <code>512</code>.</p>', 'KafkaStreamingSourceOptions$RetryIntervalMs' => '<p>The time in milliseconds to wait before retrying to fetch Kafka offsets. The default value is <code>10</code>.</p>', 'KafkaStreamingSourceOptions$MaxOffsetsPerTrigger' => '<p>The rate limit on the maximum number of offsets that are processed per trigger interval. The specified total number of offsets is proportionally split across <code>topicPartitions</code> of different volumes. The default value is null, which means that the consumer reads all offsets until the known latest offset.</p>', 'KinesisStreamingSourceOptions$MaxFetchTimeInMs' => '<p>The maximum time spent in the job executor to fetch a record from the Kinesis data stream per shard, specified in milliseconds (ms). The default value is <code>1000</code>.</p>', 'KinesisStreamingSourceOptions$MaxFetchRecordsPerShard' => '<p>The maximum number of records to fetch per shard in the Kinesis data stream. The default value is <code>100000</code>.</p>', 'KinesisStreamingSourceOptions$MaxRecordPerRead' => '<p>The maximum number of records to fetch from the Kinesis data stream in each getRecords operation. The default value is <code>10000</code>.</p>', 'KinesisStreamingSourceOptions$IdleTimeBetweenReadsInMs' => '<p>The minimum time delay between two consecutive getRecords operations, specified in ms. The default value is <code>1000</code>. This option is only configurable for Glue version 2.0 and above.</p>', 'KinesisStreamingSourceOptions$DescribeShardInterval' => '<p>The minimum time interval between two ListShards API calls for your script to consider resharding. The default value is <code>1s</code>.</p>', 'KinesisStreamingSourceOptions$RetryIntervalMs' => '<p>The cool-off time period (specified in ms) before retrying the Kinesis Data Streams API call. The default value is <code>1000</code>.</p>', 'KinesisStreamingSourceOptions$MaxRetryIntervalMs' => '<p>The maximum cool-off time period (specified in ms) between two retries of a Kinesis Data Streams API call. The default value is <code>10000</code>.</p>', ], ], 'BoxedPositiveInt' => [ 'base' => NULL, 'refs' => [ 'CatalogKafkaSource$WindowSize' => '<p>The amount of time to spend processing each micro batch.</p>', 'CatalogKinesisSource$WindowSize' => '<p>The amount of time to spend processing each micro batch.</p>', 'DirectKafkaSource$WindowSize' => '<p>The amount of time to spend processing each micro batch.</p>', 'DirectKinesisSource$WindowSize' => '<p>The amount of time to spend processing each micro batch.</p>', ], ], 'CancelMLTaskRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'CancelMLTaskRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'CancelStatementRequest' => [ 'base' => NULL, 'refs' => [], ], 'CancelStatementResponse' => [ 'base' => NULL, 'refs' => [], ], 'CatalogEncryptionMode' => [ 'base' => NULL, 'refs' => [ 'EncryptionAtRest$CatalogEncryptionMode' => '<p>The encryption-at-rest mode for encrypting Data Catalog data.</p>', ], ], 'CatalogEntries' => [ 'base' => NULL, 'refs' => [ 'GetMappingRequest$Sinks' => '<p>A list of target tables.</p>', 'GetPlanRequest$Sinks' => '<p>The target tables.</p>', ], ], 'CatalogEntry' => [ 'base' => '<p>Specifies a table definition in the Glue Data Catalog.</p>', 'refs' => [ 'CatalogEntries$member' => NULL, 'GetMappingRequest$Source' => '<p>Specifies the source table.</p>', 'GetPlanRequest$Source' => '<p>The source table.</p>', ], ], 'CatalogGetterPageSize' => [ 'base' => NULL, 'refs' => [ 'GetDatabasesRequest$MaxResults' => '<p>The maximum number of databases to return in one response.</p>', 'GetTableVersionsRequest$MaxResults' => '<p>The maximum number of table versions to return in one response.</p>', 'GetTablesRequest$MaxResults' => '<p>The maximum number of tables to return in a single response.</p>', 'GetUserDefinedFunctionsRequest$MaxResults' => '<p>The maximum number of functions to return in one response.</p>', ], ], 'CatalogIdString' => [ 'base' => NULL, 'refs' => [ 'BatchCreatePartitionRequest$CatalogId' => '<p>The ID of the catalog in which the partition is to be created. Currently, this should be the Amazon Web Services account ID.</p>', 'BatchDeleteConnectionRequest$CatalogId' => '<p>The ID of the Data Catalog in which the connections reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'BatchDeletePartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partition to be deleted resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'BatchDeleteTableRequest$CatalogId' => '<p>The ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'BatchDeleteTableVersionRequest$CatalogId' => '<p>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'BatchGetPartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'BatchUpdatePartitionRequest$CatalogId' => '<p>The ID of the catalog in which the partition is to be updated. Currently, this should be the Amazon Web Services account ID.</p>', 'CreateConnectionRequest$CatalogId' => '<p>The ID of the Data Catalog in which to create the connection. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'CreateDatabaseRequest$CatalogId' => '<p>The ID of the Data Catalog in which to create the database. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'CreatePartitionIndexRequest$CatalogId' => '<p>The catalog ID where the table resides.</p>', 'CreatePartitionRequest$CatalogId' => '<p>The Amazon Web Services account ID of the catalog in which the partition is to be created.</p>', 'CreateTableRequest$CatalogId' => '<p>The ID of the Data Catalog in which to create the <code>Table</code>. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'CreateUserDefinedFunctionRequest$CatalogId' => '<p>The ID of the Data Catalog in which to create the function. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'Database$CatalogId' => '<p>The ID of the Data Catalog in which the database resides.</p>', 'DatabaseIdentifier$CatalogId' => '<p>The ID of the Data Catalog in which the database resides.</p>', 'DeleteColumnStatisticsForPartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'DeleteColumnStatisticsForTableRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'DeleteConnectionRequest$CatalogId' => '<p>The ID of the Data Catalog in which the connection resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'DeleteDatabaseRequest$CatalogId' => '<p>The ID of the Data Catalog in which the database resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'DeletePartitionIndexRequest$CatalogId' => '<p>The catalog ID where the table resides.</p>', 'DeletePartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partition to be deleted resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'DeleteTableRequest$CatalogId' => '<p>The ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'DeleteTableVersionRequest$CatalogId' => '<p>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'DeleteUserDefinedFunctionRequest$CatalogId' => '<p>The ID of the Data Catalog where the function to be deleted is located. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'GetCatalogImportStatusRequest$CatalogId' => '<p>The ID of the catalog to migrate. Currently, this should be the Amazon Web Services account ID.</p>', 'GetColumnStatisticsForPartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'GetColumnStatisticsForTableRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'GetConnectionRequest$CatalogId' => '<p>The ID of the Data Catalog in which the connection resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetConnectionsRequest$CatalogId' => '<p>The ID of the Data Catalog in which the connections reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetDataCatalogEncryptionSettingsRequest$CatalogId' => '<p>The ID of the Data Catalog to retrieve the security configuration for. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetDatabaseRequest$CatalogId' => '<p>The ID of the Data Catalog in which the database resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetDatabasesRequest$CatalogId' => '<p>The ID of the Data Catalog from which to retrieve <code>Databases</code>. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetPartitionIndexesRequest$CatalogId' => '<p>The catalog ID where the table resides.</p>', 'GetPartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partition in question resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetPartitionsRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetTableRequest$CatalogId' => '<p>The ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetTableVersionRequest$CatalogId' => '<p>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetTableVersionsRequest$CatalogId' => '<p>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetTablesRequest$CatalogId' => '<p>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetUnfilteredPartitionMetadataRequest$CatalogId' => NULL, 'GetUnfilteredPartitionsMetadataRequest$CatalogId' => NULL, 'GetUnfilteredTableMetadataRequest$CatalogId' => NULL, 'GetUserDefinedFunctionRequest$CatalogId' => '<p>The ID of the Data Catalog where the function to be retrieved is located. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'GetUserDefinedFunctionsRequest$CatalogId' => '<p>The ID of the Data Catalog where the functions to be retrieved are located. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'ImportCatalogToGlueRequest$CatalogId' => '<p>The ID of the catalog to import. Currently, this should be the Amazon Web Services account ID.</p>', 'Partition$CatalogId' => '<p>The ID of the Data Catalog in which the partition resides.</p>', 'PutDataCatalogEncryptionSettingsRequest$CatalogId' => '<p>The ID of the Data Catalog to set the security configuration for. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'SearchTablesRequest$CatalogId' => '<p>A unique identifier, consisting of <code> <i>account_id</i> </code>.</p>', 'Table$CatalogId' => '<p>The ID of the Data Catalog in which the table resides.</p>', 'TableIdentifier$CatalogId' => '<p>The ID of the Data Catalog in which the table resides.</p>', 'UpdateColumnStatisticsForPartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'UpdateColumnStatisticsForTableRequest$CatalogId' => '<p>The ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.</p>', 'UpdateConnectionRequest$CatalogId' => '<p>The ID of the Data Catalog in which the connection resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'UpdateDatabaseRequest$CatalogId' => '<p>The ID of the Data Catalog in which the metadata database resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'UpdatePartitionRequest$CatalogId' => '<p>The ID of the Data Catalog where the partition to be updated resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'UpdateTableRequest$CatalogId' => '<p>The ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'UpdateUserDefinedFunctionRequest$CatalogId' => '<p>The ID of the Data Catalog where the function to be updated is located. If none is provided, the Amazon Web Services account ID is used by default.</p>', 'UserDefinedFunction$CatalogId' => '<p>The ID of the Data Catalog in which the function resides.</p>', ], ], 'CatalogImportStatus' => [ 'base' => '<p>A structure containing migration status information.</p>', 'refs' => [ 'GetCatalogImportStatusResponse$ImportStatus' => '<p>The status of the specified catalog migration.</p>', ], ], 'CatalogKafkaSource' => [ 'base' => '<p>Specifies an Apache Kafka data store in the Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$CatalogKafkaSource' => '<p>Specifies an Apache Kafka data store in the Data Catalog.</p>', ], ], 'CatalogKinesisSource' => [ 'base' => '<p>Specifies a Kinesis data source in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$CatalogKinesisSource' => '<p>Specifies a Kinesis data source in the Glue Data Catalog.</p>', ], ], 'CatalogSchemaChangePolicy' => [ 'base' => '<p>A policy that specifies update behavior for the crawler.</p>', 'refs' => [ 'GovernedCatalogTarget$SchemaChangePolicy' => '<p>A policy that specifies update behavior for the governed catalog.</p>', 'S3CatalogTarget$SchemaChangePolicy' => '<p>A policy that specifies update behavior for the crawler.</p>', ], ], 'CatalogSource' => [ 'base' => '<p>Specifies a data store in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$CatalogSource' => '<p>Specifies a data store in the Glue Data Catalog.</p>', ], ], 'CatalogTablesList' => [ 'base' => NULL, 'refs' => [ 'CatalogTarget$Tables' => '<p>A list of the tables to be synchronized.</p>', ], ], 'CatalogTarget' => [ 'base' => '<p>Specifies an Glue Data Catalog target.</p>', 'refs' => [ 'CatalogTargetList$member' => NULL, ], ], 'CatalogTargetList' => [ 'base' => NULL, 'refs' => [ 'CrawlerTargets$CatalogTargets' => '<p>Specifies Glue Data Catalog targets.</p>', ], ], 'CheckSchemaVersionValidityInput' => [ 'base' => NULL, 'refs' => [], ], 'CheckSchemaVersionValidityResponse' => [ 'base' => NULL, 'refs' => [], ], 'Classification' => [ 'base' => NULL, 'refs' => [ 'CreateGrokClassifierRequest$Classification' => '<p>An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.</p>', 'CreateXMLClassifierRequest$Classification' => '<p>An identifier of the data format that the classifier matches.</p>', 'GrokClassifier$Classification' => '<p>An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, and so on.</p>', 'UpdateGrokClassifierRequest$Classification' => '<p>An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.</p>', 'UpdateXMLClassifierRequest$Classification' => '<p>An identifier of the data format that the classifier matches.</p>', 'XMLClassifier$Classification' => '<p>An identifier of the data format that the classifier matches.</p>', ], ], 'Classifier' => [ 'base' => '<p>Classifiers are triggered during a crawl task. A classifier checks whether a given file is in a format it can handle. If it is, the classifier creates a schema in the form of a <code>StructType</code> object that matches that data format.</p> <p>You can use the standard classifiers that Glue provides, or you can write your own classifiers to best categorize your data sources and specify the appropriate schemas to use for them. A classifier can be a <code>grok</code> classifier, an <code>XML</code> classifier, a <code>JSON</code> classifier, or a custom <code>CSV</code> classifier, as specified in one of the fields in the <code>Classifier</code> object.</p>', 'refs' => [ 'ClassifierList$member' => NULL, 'GetClassifierResponse$Classifier' => '<p>The requested classifier.</p>', ], ], 'ClassifierList' => [ 'base' => NULL, 'refs' => [ 'GetClassifiersResponse$Classifiers' => '<p>The requested list of classifier objects.</p>', ], ], 'ClassifierNameList' => [ 'base' => NULL, 'refs' => [ 'Crawler$Classifiers' => '<p>A list of UTF-8 strings that specify the custom classifiers that are associated with the crawler.</p>', 'CreateCrawlerRequest$Classifiers' => '<p>A list of custom classifiers that the user has registered. By default, all built-in classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.</p>', 'UpdateCrawlerRequest$Classifiers' => '<p>A list of custom classifiers that the user has registered. By default, all built-in classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.</p>', ], ], 'CloudWatchEncryption' => [ 'base' => '<p>Specifies how Amazon CloudWatch data should be encrypted.</p>', 'refs' => [ 'EncryptionConfiguration$CloudWatchEncryption' => '<p>The encryption configuration for Amazon CloudWatch.</p>', ], ], 'CloudWatchEncryptionMode' => [ 'base' => NULL, 'refs' => [ 'CloudWatchEncryption$CloudWatchEncryptionMode' => '<p>The encryption mode to use for CloudWatch data.</p>', ], ], 'CodeGenArgName' => [ 'base' => NULL, 'refs' => [ 'CodeGenEdge$TargetParameter' => '<p>The target of the edge.</p>', 'CodeGenNodeArg$Name' => '<p>The name of the argument or property.</p>', ], ], 'CodeGenArgValue' => [ 'base' => NULL, 'refs' => [ 'CodeGenNodeArg$Value' => '<p>The value of the argument or property.</p>', ], ], 'CodeGenConfigurationNode' => [ 'base' => '<p> <code>CodeGenConfigurationNode</code> enumerates all valid Node types. One and only one of its member variables can be populated.</p>', 'refs' => [ 'CodeGenConfigurationNodes$value' => NULL, ], ], 'CodeGenConfigurationNodes' => [ 'base' => NULL, 'refs' => [ 'CreateJobRequest$CodeGenConfigurationNodes' => '<p>The representation of a directed acyclic graph on which both the Glue Studio visual component and Glue Studio code generation is based.</p>', 'Job$CodeGenConfigurationNodes' => '<p>The representation of a directed acyclic graph on which both the Glue Studio visual component and Glue Studio code generation is based.</p>', 'JobUpdate$CodeGenConfigurationNodes' => '<p>The representation of a directed acyclic graph on which both the Glue Studio visual component and Glue Studio code generation is based.</p>', ], ], 'CodeGenEdge' => [ 'base' => '<p>Represents a directional edge in a directed acyclic graph (DAG).</p>', 'refs' => [ 'DagEdges$member' => NULL, ], ], 'CodeGenIdentifier' => [ 'base' => NULL, 'refs' => [ 'CodeGenEdge$Source' => '<p>The ID of the node at which the edge starts.</p>', 'CodeGenEdge$Target' => '<p>The ID of the node at which the edge ends.</p>', 'CodeGenNode$Id' => '<p>A node identifier that is unique within the node\'s graph.</p>', ], ], 'CodeGenNode' => [ 'base' => '<p>Represents a node in a directed acyclic graph (DAG)</p>', 'refs' => [ 'DagNodes$member' => NULL, ], ], 'CodeGenNodeArg' => [ 'base' => '<p>An argument or property of a node.</p>', 'refs' => [ 'CodeGenNodeArgs$member' => NULL, ], ], 'CodeGenNodeArgs' => [ 'base' => NULL, 'refs' => [ 'CodeGenNode$Args' => '<p>Properties of the node, in the form of name-value pairs.</p>', 'Location$Jdbc' => '<p>A JDBC location.</p>', 'Location$S3' => '<p>An Amazon Simple Storage Service (Amazon S3) location.</p>', 'Location$DynamoDB' => '<p>An Amazon DynamoDB table location.</p>', ], ], 'CodeGenNodeType' => [ 'base' => NULL, 'refs' => [ 'CodeGenNode$NodeType' => '<p>The type of node that this is.</p>', ], ], 'Column' => [ 'base' => '<p>A column in a <code>Table</code>.</p>', 'refs' => [ 'ColumnList$member' => NULL, ], ], 'ColumnError' => [ 'base' => '<p>Encapsulates a column name that failed and the reason for failure.</p>', 'refs' => [ 'ColumnErrors$member' => NULL, ], ], 'ColumnErrors' => [ 'base' => NULL, 'refs' => [ 'GetColumnStatisticsForPartitionResponse$Errors' => '<p>Error occurred during retrieving column statistics data.</p>', 'GetColumnStatisticsForTableResponse$Errors' => '<p>List of ColumnStatistics that failed to be retrieved.</p>', ], ], 'ColumnImportance' => [ 'base' => '<p>A structure containing the column name and column importance score for a column. </p> <p>Column importance helps you understand how columns contribute to your model, by identifying which columns in your records are more important than others.</p>', 'refs' => [ 'ColumnImportanceList$member' => NULL, ], ], 'ColumnImportanceList' => [ 'base' => NULL, 'refs' => [ 'FindMatchesMetrics$ColumnImportances' => '<p>A list of <code>ColumnImportance</code> structures containing column importance metrics, sorted in order of descending importance.</p>', ], ], 'ColumnList' => [ 'base' => NULL, 'refs' => [ 'StorageDescriptor$Columns' => '<p>A list of the <code>Columns</code> in the table.</p>', 'Table$PartitionKeys' => '<p>A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.</p> <p>When you create a table used by Amazon Athena, and you do not specify any <code>partitionKeys</code>, you must at least set the value of <code>partitionKeys</code> to an empty list. For example:</p> <p> <code>"PartitionKeys": []</code> </p>', 'TableInput$PartitionKeys' => '<p>A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.</p> <p>When you create a table used by Amazon Athena, and you do not specify any <code>partitionKeys</code>, you must at least set the value of <code>partitionKeys</code> to an empty list. For example:</p> <p> <code>"PartitionKeys": []</code> </p>', ], ], 'ColumnNameString' => [ 'base' => NULL, 'refs' => [ 'AuditColumnNamesList$member' => NULL, 'FindMatchesParameters$PrimaryKeyColumnName' => '<p>The name of a column that uniquely identifies rows in the source table. Used to help identify matching records.</p>', 'SchemaColumn$Name' => '<p>The name of the column.</p>', ], ], 'ColumnRowFilter' => [ 'base' => NULL, 'refs' => [ 'ColumnRowFilterList$member' => NULL, ], ], 'ColumnRowFilterList' => [ 'base' => NULL, 'refs' => [ 'GetUnfilteredTableMetadataResponse$CellFilters' => NULL, ], ], 'ColumnStatistics' => [ 'base' => '<p>Represents the generated column-level statistics for a table or partition.</p>', 'refs' => [ 'ColumnStatisticsError$ColumnStatistics' => '<p>The <code>ColumnStatistics</code> of the column.</p>', 'ColumnStatisticsList$member' => NULL, 'UpdateColumnStatisticsList$member' => NULL, ], ], 'ColumnStatisticsData' => [ 'base' => '<p>Contains the individual types of column statistics data. Only one data object should be set and indicated by the <code>Type</code> attribute.</p>', 'refs' => [ 'ColumnStatistics$StatisticsData' => '<p>A <code>ColumnStatisticData</code> object that contains the statistics data values.</p>', ], ], 'ColumnStatisticsError' => [ 'base' => '<p>Encapsulates a <code>ColumnStatistics</code> object that failed and the reason for failure.</p>', 'refs' => [ 'ColumnStatisticsErrors$member' => NULL, ], ], 'ColumnStatisticsErrors' => [ 'base' => NULL, 'refs' => [ 'UpdateColumnStatisticsForPartitionResponse$Errors' => '<p>Error occurred during updating column statistics data.</p>', 'UpdateColumnStatisticsForTableResponse$Errors' => '<p>List of ColumnStatisticsErrors.</p>', ], ], 'ColumnStatisticsList' => [ 'base' => NULL, 'refs' => [ 'GetColumnStatisticsForPartitionResponse$ColumnStatisticsList' => '<p>List of ColumnStatistics that failed to be retrieved.</p>', 'GetColumnStatisticsForTableResponse$ColumnStatisticsList' => '<p>List of ColumnStatistics that failed to be retrieved.</p>', ], ], 'ColumnStatisticsType' => [ 'base' => NULL, 'refs' => [ 'ColumnStatisticsData$Type' => '<p>The type of column statistics data.</p>', ], ], 'ColumnTypeString' => [ 'base' => NULL, 'refs' => [ 'Column$Type' => '<p>The data type of the <code>Column</code>.</p>', 'GlueStudioSchemaColumn$Type' => '<p>The hive type for this column in the Glue Studio schema.</p>', 'KeySchemaElement$Type' => '<p>The type of a partition key.</p>', 'SchemaColumn$DataType' => '<p>The type of data in the column.</p>', ], ], 'ColumnValueStringList' => [ 'base' => NULL, 'refs' => [ 'SkewedInfo$SkewedColumnValues' => '<p>A list of values that appear so frequently as to be considered skewed.</p>', ], ], 'ColumnValuesString' => [ 'base' => NULL, 'refs' => [ 'ColumnValueStringList$member' => NULL, 'LocationMap$key' => NULL, 'LocationMap$value' => NULL, ], ], 'CommentString' => [ 'base' => NULL, 'refs' => [ 'Column$Comment' => '<p>A free-form text comment.</p>', ], ], 'Comparator' => [ 'base' => NULL, 'refs' => [ 'PropertyPredicate$Comparator' => '<p>The comparator used to compare this property to others.</p>', ], ], 'Compatibility' => [ 'base' => NULL, 'refs' => [ 'CreateSchemaInput$Compatibility' => '<p>The compatibility mode of the schema. The possible values are:</p> <ul> <li> <p> <i>NONE</i>: No compatibility mode applies. You can use this choice in development scenarios or if you do not know the compatibility mode that you want to apply to schemas. Any new version added will be accepted without undergoing a compatibility check.</p> </li> <li> <p> <i>DISABLED</i>: This compatibility choice prevents versioning for a particular schema. You can use this choice to prevent future versioning of a schema.</p> </li> <li> <p> <i>BACKWARD</i>: This compatibility choice is recommended as it allows data receivers to read both the current and one previous schema version. This means that for instance, a new schema version cannot drop data fields or change the type of these fields, so they can\'t be read by readers using the previous version.</p> </li> <li> <p> <i>BACKWARD_ALL</i>: This compatibility choice allows data receivers to read both the current and all previous schema versions. You can use this choice when you need to delete fields or add optional fields, and check compatibility against all previous schema versions. </p> </li> <li> <p> <i>FORWARD</i>: This compatibility choice allows data receivers to read both the current and one next schema version, but not necessarily later versions. You can use this choice when you need to add fields or delete optional fields, but only check compatibility against the last schema version.</p> </li> <li> <p> <i>FORWARD_ALL</i>: This compatibility choice allows data receivers to read written by producers of any new registered schema. You can use this choice when you need to add fields or delete optional fields, and check compatibility against all previous schema versions.</p> </li> <li> <p> <i>FULL</i>: This compatibility choice allows data receivers to read data written by producers using the previous or next version of the schema, but not necessarily earlier or later versions. You can use this choice when you need to add or remove optional fields, but only check compatibility against the last schema version.</p> </li> <li> <p> <i>FULL_ALL</i>: This compatibility choice allows data receivers to read data written by producers using all previous schema versions. You can use this choice when you need to add or remove optional fields, and check compatibility against all previous schema versions.</p> </li> </ul>', 'CreateSchemaResponse$Compatibility' => '<p>The schema compatibility mode.</p>', 'GetSchemaResponse$Compatibility' => '<p>The compatibility mode of the schema.</p>', 'UpdateSchemaInput$Compatibility' => '<p>The new compatibility setting for the schema.</p>', ], ], 'CompressionType' => [ 'base' => NULL, 'refs' => [ 'S3CsvSource$CompressionType' => '<p>Specifies how the data is compressed. This is generally not necessary if the data has a standard file extension. Possible values are <code>"gzip"</code> and <code>"bzip"</code>).</p>', 'S3JsonSource$CompressionType' => '<p>Specifies how the data is compressed. This is generally not necessary if the data has a standard file extension. Possible values are <code>"gzip"</code> and <code>"bzip"</code>).</p>', ], ], 'ConcurrentModificationException' => [ 'base' => '<p>Two processes are trying to modify a resource simultaneously.</p>', 'refs' => [], ], 'ConcurrentRunsExceededException' => [ 'base' => '<p>Too many jobs are being run concurrently.</p>', 'refs' => [], ], 'Condition' => [ 'base' => '<p>Defines a condition under which a trigger fires.</p>', 'refs' => [ 'ConditionList$member' => NULL, ], ], 'ConditionCheckFailureException' => [ 'base' => '<p>A specified condition was not satisfied.</p>', 'refs' => [], ], 'ConditionList' => [ 'base' => NULL, 'refs' => [ 'Predicate$Conditions' => '<p>A list of the conditions that determine when the trigger will fire.</p>', ], ], 'ConflictException' => [ 'base' => '<p>The <code>CreatePartitions</code> API was called on a table that has indexes enabled. </p>', 'refs' => [], ], 'ConfusionMatrix' => [ 'base' => '<p>The confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Confusion_matrix">Confusion matrix</a> in Wikipedia.</p>', 'refs' => [ 'FindMatchesMetrics$ConfusionMatrix' => '<p>The confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Confusion_matrix">Confusion matrix</a> in Wikipedia.</p>', ], ], 'Connection' => [ 'base' => '<p>Defines a connection to a data source.</p>', 'refs' => [ 'ConnectionList$member' => NULL, 'GetConnectionResponse$Connection' => '<p>The requested connection definition.</p>', ], ], 'ConnectionInput' => [ 'base' => '<p>A structure that is used to specify a connection to create or update.</p>', 'refs' => [ 'CreateConnectionRequest$ConnectionInput' => '<p>A <code>ConnectionInput</code> object defining the connection to create.</p>', 'UpdateConnectionRequest$ConnectionInput' => '<p>A <code>ConnectionInput</code> object that redefines the connection in question.</p>', ], ], 'ConnectionList' => [ 'base' => NULL, 'refs' => [ 'GetConnectionsResponse$ConnectionList' => '<p>A list of requested connection definitions.</p>', ], ], 'ConnectionName' => [ 'base' => NULL, 'refs' => [ 'CatalogTarget$ConnectionName' => '<p>The name of the connection for an Amazon S3-backed Data Catalog table to be a target of the crawl when using a <code>Catalog</code> connection type paired with a <code>NETWORK</code> Connection type.</p>', 'DeltaTarget$ConnectionName' => '<p>The name of the connection to use to connect to the Delta table target.</p>', 'JdbcTarget$ConnectionName' => '<p>The name of the connection to use to connect to the JDBC target.</p>', 'MongoDBTarget$ConnectionName' => '<p>The name of the connection to use to connect to the Amazon DocumentDB or MongoDB target.</p>', 'S3Target$ConnectionName' => '<p>The name of a connection which allows a job or crawler to access data in Amazon S3 within an Amazon Virtual Private Cloud environment (Amazon VPC).</p>', ], ], 'ConnectionPasswordEncryption' => [ 'base' => '<p>The data structure used by the Data Catalog to encrypt the password as part of <code>CreateConnection</code> or <code>UpdateConnection</code> and store it in the <code>ENCRYPTED_PASSWORD</code> field in the connection properties. You can enable catalog encryption or only password encryption.</p> <p>When a <code>CreationConnection</code> request arrives containing a password, the Data Catalog first encrypts the password using your KMS key. It then encrypts the whole connection object again if catalog encryption is also enabled.</p> <p>This encryption requires that you set KMS key permissions to enable or restrict access on the password key according to your security requirements. For example, you might want only administrators to have decrypt permission on the password key.</p>', 'refs' => [ 'DataCatalogEncryptionSettings$ConnectionPasswordEncryption' => '<p>When connection password protection is enabled, the Data Catalog uses a customer-provided key to encrypt the password as part of <code>CreateConnection</code> or <code>UpdateConnection</code> and store it in the <code>ENCRYPTED_PASSWORD</code> field in the connection properties. You can enable catalog encryption or only password encryption.</p>', ], ], 'ConnectionProperties' => [ 'base' => NULL, 'refs' => [ 'Connection$ConnectionProperties' => '<p>These key-value pairs define parameters for the connection:</p> <ul> <li> <p> <code>HOST</code> - The host URI: either the fully qualified domain name (FQDN) or the IPv4 address of the database host.</p> </li> <li> <p> <code>PORT</code> - The port number, between 1024 and 65535, of the port on which the database host is listening for database connections.</p> </li> <li> <p> <code>USER_NAME</code> - The name under which to log in to the database. The value string for <code>USER_NAME</code> is "<code>USERNAME</code>".</p> </li> <li> <p> <code>PASSWORD</code> - A password, if one is used, for the user name.</p> </li> <li> <p> <code>ENCRYPTED_PASSWORD</code> - When you enable connection password protection by setting <code>ConnectionPasswordEncryption</code> in the Data Catalog encryption settings, this field stores the encrypted password.</p> </li> <li> <p> <code>JDBC_DRIVER_JAR_URI</code> - The Amazon Simple Storage Service (Amazon S3) path of the JAR file that contains the JDBC driver to use.</p> </li> <li> <p> <code>JDBC_DRIVER_CLASS_NAME</code> - The class name of the JDBC driver to use.</p> </li> <li> <p> <code>JDBC_ENGINE</code> - The name of the JDBC engine to use.</p> </li> <li> <p> <code>JDBC_ENGINE_VERSION</code> - The version of the JDBC engine to use.</p> </li> <li> <p> <code>CONFIG_FILES</code> - (Reserved for future use.)</p> </li> <li> <p> <code>INSTANCE_ID</code> - The instance ID to use.</p> </li> <li> <p> <code>JDBC_CONNECTION_URL</code> - The URL for connecting to a JDBC data source.</p> </li> <li> <p> <code>JDBC_ENFORCE_SSL</code> - A Boolean string (true, false) specifying whether Secure Sockets Layer (SSL) with hostname matching is enforced for the JDBC connection on the client. The default is false.</p> </li> <li> <p> <code>CUSTOM_JDBC_CERT</code> - An Amazon S3 location specifying the customer\'s root certificate. Glue uses this root certificate to validate the customer’s certificate when connecting to the customer database. Glue only handles X.509 certificates. The certificate provided must be DER-encoded and supplied in Base64 encoding PEM format.</p> </li> <li> <p> <code>SKIP_CUSTOM_JDBC_CERT_VALIDATION</code> - By default, this is <code>false</code>. Glue validates the Signature algorithm and Subject Public Key Algorithm for the customer certificate. The only permitted algorithms for the Signature algorithm are SHA256withRSA, SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm, the key length must be at least 2048. You can set the value of this property to <code>true</code> to skip Glue’s validation of the customer certificate.</p> </li> <li> <p> <code>CUSTOM_JDBC_CERT_STRING</code> - A custom JDBC certificate string which is used for domain match or distinguished name match to prevent a man-in-the-middle attack. In Oracle database, this is used as the <code>SSL_SERVER_CERT_DN</code>; in Microsoft SQL Server, this is used as the <code>hostNameInCertificate</code>.</p> </li> <li> <p> <code>CONNECTION_URL</code> - The URL for connecting to a general (non-JDBC) data source.</p> </li> <li> <p> <code>SECRET_ID</code> - The secret ID used for the secret manager of credentials.</p> </li> <li> <p> <code>CONNECTOR_URL</code> - The connector URL for a MARKETPLACE or CUSTOM connection.</p> </li> <li> <p> <code>CONNECTOR_TYPE</code> - The connector type for a MARKETPLACE or CUSTOM connection.</p> </li> <li> <p> <code>CONNECTOR_CLASS_NAME</code> - The connector class name for a MARKETPLACE or CUSTOM connection.</p> </li> <li> <p> <code>KAFKA_BOOTSTRAP_SERVERS</code> - A comma-separated list of host and port pairs that are the addresses of the Apache Kafka brokers in a Kafka cluster to which a Kafka client will connect to and bootstrap itself.</p> </li> <li> <p> <code>KAFKA_SSL_ENABLED</code> - Whether to enable or disable SSL on an Apache Kafka connection. Default value is "true".</p> </li> <li> <p> <code>KAFKA_CUSTOM_CERT</code> - The Amazon S3 URL for the private CA cert file (.pem format). The default is an empty string.</p> </li> <li> <p> <code>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</code> - Whether to skip the validation of the CA cert file or not. Glue validates for three algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default value is "false".</p> </li> <li> <p> <code>KAFKA_CLIENT_KEYSTORE</code> - The Amazon S3 location of the client keystore file for Kafka client side authentication (Optional).</p> </li> <li> <p> <code>KAFKA_CLIENT_KEYSTORE_PASSWORD</code> - The password to access the provided keystore (Optional).</p> </li> <li> <p> <code>KAFKA_CLIENT_KEY_PASSWORD</code> - A keystore can consist of multiple keys, so this is the password to access the client key to be used with the Kafka server side key (Optional).</p> </li> <li> <p> <code>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</code> - The encrypted version of the Kafka client keystore password (if the user has the Glue encrypt passwords setting selected).</p> </li> <li> <p> <code>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</code> - The encrypted version of the Kafka client key password (if the user has the Glue encrypt passwords setting selected).</p> </li> <li> <p> <code>KAFKA_SASL_MECHANISM</code> - <code>"SCRAM-SHA-512"</code> or <code>"GSSAPI"</code>. These are the two supported <a href="https://www.iana.org/assignments/sasl-mechanisms/sasl-mechanisms.xhtml">SASL Mechanisms</a>.</p> </li> <li> <p> <code>KAFKA_SASL_SCRAM_USERNAME</code> - A plaintext username used to authenticate with the "SCRAM-SHA-512" mechanism.</p> </li> <li> <p> <code>KAFKA_SASL_SCRAM_PASSWORD</code> - A plaintext password used to authenticate with the "SCRAM-SHA-512" mechanism.</p> </li> <li> <p> <code>ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD</code> - The encrypted version of the Kafka SASL SCRAM password (if the user has the Glue encrypt passwords setting selected).</p> </li> <li> <p> <code>KAFKA_SASL_GSSAPI_KEYTAB</code> - The S3 location of a Kerberos <code>keytab</code> file. A keytab stores long-term keys for one or more principals. For more information, see <a href="https://web.mit.edu/kerberos/krb5-latest/doc/basic/keytab_def.html">MIT Kerberos Documentation: Keytab</a>.</p> </li> <li> <p> <code>KAFKA_SASL_GSSAPI_KRB5_CONF</code> - The S3 location of a Kerberos <code>krb5.conf</code> file. A krb5.conf stores Kerberos configuration information, such as the location of the KDC server. For more information, see <a href="https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html">MIT Kerberos Documentation: krb5.conf</a>.</p> </li> <li> <p> <code>KAFKA_SASL_GSSAPI_SERVICE</code> - The Kerberos service name, as set with <code>sasl.kerberos.service.name</code> in your <a href="https://kafka.apache.org/documentation/#brokerconfigs_sasl.kerberos.service.name">Kafka Configuration</a>.</p> </li> <li> <p> <code>KAFKA_SASL_GSSAPI_PRINCIPAL</code> - The name of the Kerberos princial used by Glue. For more information, see <a href="https://kafka.apache.org/documentation/#security_sasl_kerberos_clientconfig">Kafka Documentation: Configuring Kafka Brokers</a>.</p> </li> </ul>', 'ConnectionInput$ConnectionProperties' => '<p>These key-value pairs define parameters for the connection.</p>', ], ], 'ConnectionPropertyKey' => [ 'base' => NULL, 'refs' => [ 'ConnectionProperties$key' => NULL, ], ], 'ConnectionType' => [ 'base' => NULL, 'refs' => [ 'Connection$ConnectionType' => '<p>The type of the connection. Currently, SFTP is not supported.</p>', 'ConnectionInput$ConnectionType' => '<p>The type of the connection. Currently, these types are supported:</p> <ul> <li> <p> <code>JDBC</code> - Designates a connection to a database through Java Database Connectivity (JDBC).</p> </li> <li> <p> <code>KAFKA</code> - Designates a connection to an Apache Kafka streaming platform.</p> </li> <li> <p> <code>MONGODB</code> - Designates a connection to a MongoDB document database.</p> </li> <li> <p> <code>NETWORK</code> - Designates a network connection to a data source within an Amazon Virtual Private Cloud environment (Amazon VPC).</p> </li> <li> <p> <code>MARKETPLACE</code> - Uses configuration settings contained in a connector purchased from Amazon Web Services Marketplace to read from and write to data stores that are not natively supported by Glue.</p> </li> <li> <p> <code>CUSTOM</code> - Uses configuration settings contained in a custom connector to read from and write to data stores that are not natively supported by Glue.</p> </li> </ul> <p>SFTP is not supported.</p>', 'GetConnectionsFilter$ConnectionType' => '<p>The type of connections to return. Currently, SFTP is not supported.</p>', ], ], 'ConnectionsList' => [ 'base' => '<p>Specifies the connections used by a job.</p>', 'refs' => [ 'CreateJobRequest$Connections' => '<p>The connections used for this job.</p>', 'CreateSessionRequest$Connections' => '<p>The number of connections to use for the session. </p>', 'Job$Connections' => '<p>The connections used for this job.</p>', 'JobUpdate$Connections' => '<p>The connections used for this job.</p>', 'Session$Connections' => '<p>The number of connections used for the session.</p>', ], ], 'ContextWords' => [ 'base' => NULL, 'refs' => [ 'CreateCustomEntityTypeRequest$ContextWords' => '<p>A list of context words. If none of these context words are found within the vicinity of the regular expression the data will not be detected as sensitive data.</p> <p>If no context words are passed only a regular expression is checked.</p>', 'CustomEntityType$ContextWords' => '<p>A list of context words. If none of these context words are found within the vicinity of the regular expression the data will not be detected as sensitive data.</p> <p>If no context words are passed only a regular expression is checked.</p>', 'GetCustomEntityTypeResponse$ContextWords' => '<p>A list of context words if specified when you created the custom pattern. If none of these context words are found within the vicinity of the regular expression the data will not be detected as sensitive data.</p>', ], ], 'Crawl' => [ 'base' => '<p>The details of a crawl in the workflow.</p>', 'refs' => [ 'CrawlList$member' => NULL, ], ], 'CrawlId' => [ 'base' => NULL, 'refs' => [ 'CrawlerHistory$CrawlId' => '<p>A UUID identifier for each crawl.</p>', ], ], 'CrawlList' => [ 'base' => NULL, 'refs' => [ 'CrawlerNodeDetails$Crawls' => '<p>A list of crawls represented by the crawl node.</p>', ], ], 'CrawlState' => [ 'base' => NULL, 'refs' => [ 'Condition$CrawlState' => '<p>The state of the crawler to which this condition applies.</p>', 'Crawl$State' => '<p>The state of the crawler.</p>', ], ], 'Crawler' => [ 'base' => '<p>Specifies a crawler program that examines a data source and uses classifiers to try to determine its schema. If successful, the crawler records metadata concerning the data source in the Glue Data Catalog.</p>', 'refs' => [ 'CrawlerList$member' => NULL, 'GetCrawlerResponse$Crawler' => '<p>The metadata for the specified crawler.</p>', ], ], 'CrawlerConfiguration' => [ 'base' => NULL, 'refs' => [ 'Crawler$Configuration' => '<p>Crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler\'s behavior. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/define-crawler.html#crawler-data-stores-exclude">Include and Exclude Patterns</a>.</p>', 'CreateCrawlerRequest$Configuration' => '<p>Crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler\'s behavior. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring a Crawler</a>.</p>', 'UpdateCrawlerRequest$Configuration' => '<p>Crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler\'s behavior. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring a Crawler</a>.</p>', ], ], 'CrawlerHistory' => [ 'base' => '<p>Contains the information for a run of a crawler.</p>', 'refs' => [ 'CrawlerHistoryList$member' => NULL, ], ], 'CrawlerHistoryList' => [ 'base' => NULL, 'refs' => [ 'ListCrawlsResponse$Crawls' => '<p>A list of <code>CrawlerHistory</code> objects representing the crawl runs that meet your criteria.</p>', ], ], 'CrawlerHistoryState' => [ 'base' => NULL, 'refs' => [ 'CrawlerHistory$State' => '<p>The state of the crawl.</p>', ], ], 'CrawlerLineageSettings' => [ 'base' => NULL, 'refs' => [ 'LineageConfiguration$CrawlerLineageSettings' => '<p>Specifies whether data lineage is enabled for the crawler. Valid values are:</p> <ul> <li> <p>ENABLE: enables data lineage for the crawler</p> </li> <li> <p>DISABLE: disables data lineage for the crawler</p> </li> </ul>', ], ], 'CrawlerList' => [ 'base' => NULL, 'refs' => [ 'BatchGetCrawlersResponse$Crawlers' => '<p>A list of crawler definitions.</p>', 'GetCrawlersResponse$Crawlers' => '<p>A list of crawler metadata.</p>', ], ], 'CrawlerMetrics' => [ 'base' => '<p>Metrics for a specified crawler.</p>', 'refs' => [ 'CrawlerMetricsList$member' => NULL, ], ], 'CrawlerMetricsList' => [ 'base' => NULL, 'refs' => [ 'GetCrawlerMetricsResponse$CrawlerMetricsList' => '<p>A list of metrics for the specified crawler.</p>', ], ], 'CrawlerNameList' => [ 'base' => NULL, 'refs' => [ 'BatchGetCrawlersRequest$CrawlerNames' => '<p>A list of crawler names, which might be the names returned from the <code>ListCrawlers</code> operation.</p>', 'BatchGetCrawlersResponse$CrawlersNotFound' => '<p>A list of names of crawlers that were not found.</p>', 'GetCrawlerMetricsRequest$CrawlerNameList' => '<p>A list of the names of crawlers about which to retrieve metrics.</p>', 'ListCrawlersResponse$CrawlerNames' => '<p>The names of all crawlers in the account, or the crawlers with the specified tags.</p>', ], ], 'CrawlerNodeDetails' => [ 'base' => '<p>The details of a Crawler node present in the workflow.</p>', 'refs' => [ 'Node$CrawlerDetails' => '<p>Details of the crawler when the node represents a crawler.</p>', ], ], 'CrawlerNotRunningException' => [ 'base' => '<p>The specified crawler is not running.</p>', 'refs' => [], ], 'CrawlerRunningException' => [ 'base' => '<p>The operation cannot be performed because the crawler is already running.</p>', 'refs' => [], ], 'CrawlerSecurityConfiguration' => [ 'base' => NULL, 'refs' => [ 'Crawler$CrawlerSecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.</p>', 'CreateCrawlerRequest$CrawlerSecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.</p>', 'UpdateCrawlerRequest$CrawlerSecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.</p>', ], ], 'CrawlerState' => [ 'base' => NULL, 'refs' => [ 'Crawler$State' => '<p>Indicates whether the crawler is running, or whether a run is pending.</p>', ], ], 'CrawlerStoppingException' => [ 'base' => '<p>The specified crawler is stopping.</p>', 'refs' => [], ], 'CrawlerTargets' => [ 'base' => '<p>Specifies data stores to crawl.</p>', 'refs' => [ 'Crawler$Targets' => '<p>A collection of targets to crawl.</p>', 'CreateCrawlerRequest$Targets' => '<p>A list of collection of targets to crawl.</p>', 'UpdateCrawlerRequest$Targets' => '<p>A list of targets to crawl.</p>', ], ], 'CrawlsFilter' => [ 'base' => '<p>A list of fields, comparators and value that you can use to filter the crawler runs for a specified crawler.</p>', 'refs' => [ 'CrawlsFilterList$member' => NULL, ], ], 'CrawlsFilterList' => [ 'base' => NULL, 'refs' => [ 'ListCrawlsRequest$Filters' => '<p>Filters the crawls by the criteria you specify in a list of <code>CrawlsFilter</code> objects.</p>', ], ], 'CreateBlueprintRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateBlueprintResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateClassifierRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateClassifierResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateConnectionRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateConnectionResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateCrawlerRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateCrawlerResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateCsvClassifierRequest' => [ 'base' => '<p>Specifies a custom CSV classifier for <code>CreateClassifier</code> to create.</p>', 'refs' => [ 'CreateClassifierRequest$CsvClassifier' => '<p>A <code>CsvClassifier</code> object specifying the classifier to create.</p>', ], ], 'CreateCustomEntityTypeRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateCustomEntityTypeResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateDatabaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateDatabaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateDevEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateDevEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateGrokClassifierRequest' => [ 'base' => '<p>Specifies a <code>grok</code> classifier for <code>CreateClassifier</code> to create.</p>', 'refs' => [ 'CreateClassifierRequest$GrokClassifier' => '<p>A <code>GrokClassifier</code> object specifying the classifier to create.</p>', ], ], 'CreateJobRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateJobResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateJsonClassifierRequest' => [ 'base' => '<p>Specifies a JSON classifier for <code>CreateClassifier</code> to create.</p>', 'refs' => [ 'CreateClassifierRequest$JsonClassifier' => '<p>A <code>JsonClassifier</code> object specifying the classifier to create.</p>', ], ], 'CreateMLTransformRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateMLTransformResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreatePartitionIndexRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreatePartitionIndexResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreatePartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreatePartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateRegistryInput' => [ 'base' => NULL, 'refs' => [], ], 'CreateRegistryResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateSchemaInput' => [ 'base' => NULL, 'refs' => [], ], 'CreateSchemaResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateScriptRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateScriptResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateSecurityConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateSecurityConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateSessionRequest' => [ 'base' => '<p>Request to create a new session.</p>', 'refs' => [], ], 'CreateSessionResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateTriggerRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateTriggerResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateUserDefinedFunctionRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateUserDefinedFunctionResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateWorkflowRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateWorkflowResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateXMLClassifierRequest' => [ 'base' => '<p>Specifies an XML classifier for <code>CreateClassifier</code> to create.</p>', 'refs' => [ 'CreateClassifierRequest$XMLClassifier' => '<p>An <code>XMLClassifier</code> object specifying the classifier to create.</p>', ], ], 'CreatedTimestamp' => [ 'base' => NULL, 'refs' => [ 'GetRegistryResponse$CreatedTime' => '<p>The date and time the registry was created.</p>', 'GetSchemaByDefinitionResponse$CreatedTime' => '<p>The date and time the schema was created.</p>', 'GetSchemaResponse$CreatedTime' => '<p>The date and time the schema was created.</p>', 'GetSchemaVersionResponse$CreatedTime' => '<p>The date and time the schema version was created.</p>', 'MetadataInfo$CreatedTime' => '<p>The time at which the entry was created.</p>', 'OtherMetadataValueListItem$CreatedTime' => '<p>The time at which the entry was created.</p>', 'RegistryListItem$CreatedTime' => '<p>The data the registry was created.</p>', 'SchemaListItem$CreatedTime' => '<p>The date and time that a schema was created.</p>', 'SchemaVersionListItem$CreatedTime' => '<p>The date and time the schema version was created.</p>', ], ], 'CronExpression' => [ 'base' => NULL, 'refs' => [ 'CreateCrawlerRequest$Schedule' => '<p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p>', 'Schedule$ScheduleExpression' => '<p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p>', 'UpdateCrawlerRequest$Schedule' => '<p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p>', 'UpdateCrawlerScheduleRequest$Schedule' => '<p>The updated <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p>', ], ], 'CsvClassifier' => [ 'base' => '<p>A classifier for custom <code>CSV</code> content.</p>', 'refs' => [ 'Classifier$CsvClassifier' => '<p>A classifier for comma-separated values (CSV).</p>', ], ], 'CsvColumnDelimiter' => [ 'base' => NULL, 'refs' => [ 'CreateCsvClassifierRequest$Delimiter' => '<p>A custom symbol to denote what separates each column entry in the row.</p>', 'CsvClassifier$Delimiter' => '<p>A custom symbol to denote what separates each column entry in the row.</p>', 'UpdateCsvClassifierRequest$Delimiter' => '<p>A custom symbol to denote what separates each column entry in the row.</p>', ], ], 'CsvHeader' => [ 'base' => NULL, 'refs' => [ 'CreateCsvClassifierRequest$Header' => '<p>A list of strings representing column names.</p>', 'CsvClassifier$Header' => '<p>A list of strings representing column names.</p>', 'UpdateCsvClassifierRequest$Header' => '<p>A list of strings representing column names.</p>', ], ], 'CsvHeaderOption' => [ 'base' => NULL, 'refs' => [ 'CreateCsvClassifierRequest$ContainsHeader' => '<p>Indicates whether the CSV file contains a header.</p>', 'CsvClassifier$ContainsHeader' => '<p>Indicates whether the CSV file contains a header.</p>', 'UpdateCsvClassifierRequest$ContainsHeader' => '<p>Indicates whether the CSV file contains a header.</p>', ], ], 'CsvQuoteSymbol' => [ 'base' => NULL, 'refs' => [ 'CreateCsvClassifierRequest$QuoteSymbol' => '<p>A custom symbol to denote what combines content into a single column value. Must be different from the column delimiter.</p>', 'CsvClassifier$QuoteSymbol' => '<p>A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.</p>', 'UpdateCsvClassifierRequest$QuoteSymbol' => '<p>A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.</p>', ], ], 'CustomCode' => [ 'base' => '<p>Specifies a transform that uses custom code you provide to perform the data transformation. The output is a collection of DynamicFrames.</p>', 'refs' => [ 'CodeGenConfigurationNode$CustomCode' => '<p>Specifies a transform that uses custom code you provide to perform the data transformation. The output is a collection of DynamicFrames.</p>', ], ], 'CustomEntityType' => [ 'base' => '<p>An object representing a custom pattern for detecting sensitive data across the columns and rows of your structured data.</p>', 'refs' => [ 'CustomEntityTypes$member' => NULL, ], ], 'CustomEntityTypeNames' => [ 'base' => NULL, 'refs' => [ 'BatchGetCustomEntityTypesRequest$Names' => '<p>A list of names of the custom patterns that you want to retrieve.</p>', 'BatchGetCustomEntityTypesResponse$CustomEntityTypesNotFound' => '<p>A list of the names of custom patterns that were not found.</p>', ], ], 'CustomEntityTypes' => [ 'base' => NULL, 'refs' => [ 'BatchGetCustomEntityTypesResponse$CustomEntityTypes' => '<p>A list of <code>CustomEntityType</code> objects representing the custom patterns that have been created.</p>', 'ListCustomEntityTypesResponse$CustomEntityTypes' => '<p>A list of <code>CustomEntityType</code> objects representing custom patterns.</p>', ], ], 'CustomPatterns' => [ 'base' => NULL, 'refs' => [ 'CreateGrokClassifierRequest$CustomPatterns' => '<p>Optional custom grok patterns used by this classifier.</p>', 'GrokClassifier$CustomPatterns' => '<p>Optional custom grok patterns defined by this classifier. For more information, see custom patterns in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html">Writing Custom Classifiers</a>.</p>', 'UpdateGrokClassifierRequest$CustomPatterns' => '<p>Optional custom grok patterns used by this classifier.</p>', ], ], 'DagEdges' => [ 'base' => NULL, 'refs' => [ 'CreateScriptRequest$DagEdges' => '<p>A list of the edges in the DAG.</p>', 'GetDataflowGraphResponse$DagEdges' => '<p>A list of the edges in the resulting DAG.</p>', ], ], 'DagNodes' => [ 'base' => NULL, 'refs' => [ 'CreateScriptRequest$DagNodes' => '<p>A list of the nodes in the DAG.</p>', 'GetDataflowGraphResponse$DagNodes' => '<p>A list of the nodes in the resulting DAG.</p>', ], ], 'DataCatalogEncryptionSettings' => [ 'base' => '<p>Contains configuration information for maintaining Data Catalog security.</p>', 'refs' => [ 'GetDataCatalogEncryptionSettingsResponse$DataCatalogEncryptionSettings' => '<p>The requested security configuration.</p>', 'PutDataCatalogEncryptionSettingsRequest$DataCatalogEncryptionSettings' => '<p>The security configuration to set.</p>', ], ], 'DataFormat' => [ 'base' => NULL, 'refs' => [ 'CheckSchemaVersionValidityInput$DataFormat' => '<p>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code> and <code>PROTOBUF</code> are supported.</p>', 'CreateSchemaInput$DataFormat' => '<p>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code> and <code>PROTOBUF</code> are supported.</p>', 'CreateSchemaResponse$DataFormat' => '<p>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code> and <code>PROTOBUF</code> are supported.</p>', 'GetSchemaByDefinitionResponse$DataFormat' => '<p>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code> and <code>PROTOBUF</code> are supported.</p>', 'GetSchemaResponse$DataFormat' => '<p>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code> and <code>PROTOBUF</code> are supported.</p>', 'GetSchemaVersionResponse$DataFormat' => '<p>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code> and <code>PROTOBUF</code> are supported.</p>', ], ], 'DataLakePrincipal' => [ 'base' => '<p>The Lake Formation principal.</p>', 'refs' => [ 'PrincipalPermissions$Principal' => '<p>The principal who is granted permissions.</p>', ], ], 'DataLakePrincipalString' => [ 'base' => NULL, 'refs' => [ 'DataLakePrincipal$DataLakePrincipalIdentifier' => '<p>An identifier for the Lake Formation principal.</p>', ], ], 'Database' => [ 'base' => '<p>The <code>Database</code> object represents a logical grouping of tables that might reside in a Hive metastore or an RDBMS.</p>', 'refs' => [ 'DatabaseList$member' => NULL, 'GetDatabaseResponse$Database' => '<p>The definition of the specified database in the Data Catalog.</p>', ], ], 'DatabaseIdentifier' => [ 'base' => '<p>A structure that describes a target database for resource linking.</p>', 'refs' => [ 'Database$TargetDatabase' => '<p>A <code>DatabaseIdentifier</code> structure that describes a target database for resource linking.</p>', 'DatabaseInput$TargetDatabase' => '<p>A <code>DatabaseIdentifier</code> structure that describes a target database for resource linking.</p>', ], ], 'DatabaseInput' => [ 'base' => '<p>The structure used to create or update a database.</p>', 'refs' => [ 'CreateDatabaseRequest$DatabaseInput' => '<p>The metadata for the database.</p>', 'UpdateDatabaseRequest$DatabaseInput' => '<p>A <code>DatabaseInput</code> object specifying the new definition of the metadata database in the catalog.</p>', ], ], 'DatabaseList' => [ 'base' => NULL, 'refs' => [ 'GetDatabasesResponse$DatabaseList' => '<p>A list of <code>Database</code> objects from the specified catalog.</p>', ], ], 'DatabaseName' => [ 'base' => NULL, 'refs' => [ 'Crawler$DatabaseName' => '<p>The name of the database in which the crawler\'s output is stored.</p>', 'CreateCrawlerRequest$DatabaseName' => '<p>The Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.</p>', 'UpdateCrawlerRequest$DatabaseName' => '<p>The Glue database where results are stored, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.</p>', ], ], 'Datatype' => [ 'base' => '<p>A structure representing the datatype of the value.</p>', 'refs' => [ 'NullValueField$Datatype' => '<p>The datatype of the value.</p>', ], ], 'DateColumnStatisticsData' => [ 'base' => '<p>Defines column statistics supported for timestamp data columns.</p>', 'refs' => [ 'ColumnStatisticsData$DateColumnStatisticsData' => '<p>Date column statistics data.</p>', ], ], 'DecimalColumnStatisticsData' => [ 'base' => '<p>Defines column statistics supported for fixed-point number data columns.</p>', 'refs' => [ 'ColumnStatisticsData$DecimalColumnStatisticsData' => '<p>Decimal column statistics data.</p>', ], ], 'DecimalNumber' => [ 'base' => '<p>Contains a numeric value in decimal format.</p>', 'refs' => [ 'DecimalColumnStatisticsData$MinimumValue' => '<p>The lowest value in the column.</p>', 'DecimalColumnStatisticsData$MaximumValue' => '<p>The highest value in the column.</p>', ], ], 'DeleteBehavior' => [ 'base' => NULL, 'refs' => [ 'SchemaChangePolicy$DeleteBehavior' => '<p>The deletion behavior when the crawler finds a deleted object.</p>', ], ], 'DeleteBlueprintRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteBlueprintResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteClassifierRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteClassifierResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteColumnStatisticsForPartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteColumnStatisticsForPartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteColumnStatisticsForTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteColumnStatisticsForTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteConnectionNameList' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteConnectionRequest$ConnectionNameList' => '<p>A list of names of the connections to delete.</p>', ], ], 'DeleteConnectionRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteConnectionResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteCrawlerRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteCrawlerResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteCustomEntityTypeRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteCustomEntityTypeResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteDatabaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteDatabaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteDevEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteDevEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteJobRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteJobResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteMLTransformRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteMLTransformResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeletePartitionIndexRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeletePartitionIndexResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeletePartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeletePartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteRegistryInput' => [ 'base' => NULL, 'refs' => [], ], 'DeleteRegistryResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteResourcePolicyRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteResourcePolicyResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSchemaInput' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSchemaResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSchemaVersionsInput' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSchemaVersionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSecurityConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSecurityConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSessionRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteSessionResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteTableVersionRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteTableVersionResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteTriggerRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteTriggerResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteUserDefinedFunctionRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteUserDefinedFunctionResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteWorkflowRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteWorkflowResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeltaTarget' => [ 'base' => '<p>Specifies a Delta data store to crawl one or more Delta tables.</p>', 'refs' => [ 'DeltaTargetList$member' => NULL, ], ], 'DeltaTargetList' => [ 'base' => NULL, 'refs' => [ 'CrawlerTargets$DeltaTargets' => '<p>Specifies Delta data store targets.</p>', ], ], 'DescriptionString' => [ 'base' => NULL, 'refs' => [ 'Connection$Description' => '<p>The description of the connection.</p>', 'ConnectionInput$Description' => '<p>The description of the connection.</p>', 'Crawl$ErrorMessage' => '<p>The error message associated with the crawl.</p>', 'Crawler$Description' => '<p>A description of the crawler.</p>', 'CrawlerHistory$ErrorMessage' => '<p>If an error occurred, the error message associated with the crawl.</p>', 'CreateCrawlerRequest$Description' => '<p>A description of the new crawler.</p>', 'CreateJobRequest$Description' => '<p>Description of the job being defined.</p>', 'CreateMLTransformRequest$Description' => '<p>A description of the machine learning transform that is being defined. The default is an empty string.</p>', 'CreateRegistryInput$Description' => '<p>A description of the registry. If description is not provided, there will not be any default value for this.</p>', 'CreateRegistryResponse$Description' => '<p>A description of the registry.</p>', 'CreateSchemaInput$Description' => '<p>An optional description of the schema. If description is not provided, there will not be any automatic default value for this.</p>', 'CreateSchemaResponse$Description' => '<p>A description of the schema if specified when created.</p>', 'CreateSessionRequest$Description' => '<p>The description of the session. </p>', 'CreateTriggerRequest$Description' => '<p>A description of the new trigger.</p>', 'Database$Description' => '<p>A description of the database.</p>', 'DatabaseInput$Description' => '<p>A description of the database.</p>', 'ErrorDetail$ErrorMessage' => '<p>A message describing the error.</p>', 'GetMLTransformResponse$Description' => '<p>A description of the transform.</p>', 'GetRegistryResponse$Description' => '<p>A description of the registry.</p>', 'GetSchemaResponse$Description' => '<p>A description of schema if specified when created</p>', 'Job$Description' => '<p>A description of the job.</p>', 'JobUpdate$Description' => '<p>Description of the job being defined.</p>', 'LastCrawlInfo$ErrorMessage' => '<p>If an error occurred, the error information about the last crawl.</p>', 'MLTransform$Description' => '<p>A user-defined, long-form description text for the machine learning transform. Descriptions are not guaranteed to be unique and can be changed at any time.</p>', 'RegistryListItem$Description' => '<p>A description of the registry.</p>', 'SchemaListItem$Description' => '<p>A description for the schema.</p>', 'Session$ErrorMessage' => '<p>The error message displayed during the session.</p>', 'Session$Description' => '<p>The description of the session.</p>', 'Table$Description' => '<p>A description of the table.</p>', 'TableInput$Description' => '<p>A description of the table.</p>', 'Trigger$Description' => '<p>A description of this trigger.</p>', 'TriggerUpdate$Description' => '<p>A description of this trigger.</p>', 'UpdateMLTransformRequest$Description' => '<p>A description of the transform. The default is an empty string.</p>', 'UpdateRegistryInput$Description' => '<p>A description of the registry. If description is not provided, this field will not be updated.</p>', 'UpdateSchemaInput$Description' => '<p>The new description for the schema.</p>', ], ], 'DescriptionStringRemovable' => [ 'base' => NULL, 'refs' => [ 'UpdateCrawlerRequest$Description' => '<p>A description of the new crawler.</p>', ], ], 'DevEndpoint' => [ 'base' => '<p>A development endpoint where a developer can remotely debug extract, transform, and load (ETL) scripts.</p>', 'refs' => [ 'DevEndpointList$member' => NULL, 'GetDevEndpointResponse$DevEndpoint' => '<p>A <code>DevEndpoint</code> definition.</p>', ], ], 'DevEndpointCustomLibraries' => [ 'base' => '<p>Custom libraries to be loaded into a development endpoint.</p>', 'refs' => [ 'UpdateDevEndpointRequest$CustomLibraries' => '<p>Custom Python or Java libraries to be loaded in the <code>DevEndpoint</code>.</p>', ], ], 'DevEndpointList' => [ 'base' => NULL, 'refs' => [ 'BatchGetDevEndpointsResponse$DevEndpoints' => '<p>A list of <code>DevEndpoint</code> definitions.</p>', 'GetDevEndpointsResponse$DevEndpoints' => '<p>A list of <code>DevEndpoint</code> definitions.</p>', ], ], 'DevEndpointNameList' => [ 'base' => NULL, 'refs' => [ 'ListDevEndpointsResponse$DevEndpointNames' => '<p>The names of all the <code>DevEndpoint</code>s in the account, or the <code>DevEndpoint</code>s with the specified tags.</p>', ], ], 'DevEndpointNames' => [ 'base' => NULL, 'refs' => [ 'BatchGetDevEndpointsRequest$DevEndpointNames' => '<p>The list of <code>DevEndpoint</code> names, which might be the names returned from the <code>ListDevEndpoint</code> operation.</p>', 'BatchGetDevEndpointsResponse$DevEndpointsNotFound' => '<p>A list of <code>DevEndpoints</code> not found.</p>', ], ], 'DirectKafkaSource' => [ 'base' => '<p>Specifies an Apache Kafka data store.</p>', 'refs' => [ 'CodeGenConfigurationNode$DirectKafkaSource' => '<p>Specifies an Apache Kafka data store.</p>', ], ], 'DirectKinesisSource' => [ 'base' => '<p>Specifies a direct Amazon Kinesis data source.</p>', 'refs' => [ 'CodeGenConfigurationNode$DirectKinesisSource' => '<p>Specifies a direct Amazon Kinesis data source.</p>', ], ], 'DirectSchemaChangePolicy' => [ 'base' => '<p>A policy that specifies update behavior for the crawler.</p>', 'refs' => [ 'S3DirectTarget$SchemaChangePolicy' => '<p>A policy that specifies update behavior for the crawler.</p>', 'S3GlueParquetTarget$SchemaChangePolicy' => '<p>A policy that specifies update behavior for the crawler.</p>', ], ], 'Double' => [ 'base' => NULL, 'refs' => [ 'DoubleColumnStatisticsData$MinimumValue' => '<p>The lowest value in the column.</p>', 'DoubleColumnStatisticsData$MaximumValue' => '<p>The highest value in the column.</p>', ], ], 'DoubleColumnStatisticsData' => [ 'base' => '<p>Defines column statistics supported for floating-point number data columns.</p>', 'refs' => [ 'ColumnStatisticsData$DoubleColumnStatisticsData' => '<p>Double column statistics data.</p>', ], ], 'DoubleValue' => [ 'base' => NULL, 'refs' => [ 'Session$Progress' => '<p>The code execution progress of the session.</p>', 'Statement$Progress' => '<p>The code execution progress.</p>', ], ], 'DropDuplicates' => [ 'base' => '<p>Specifies a transform that removes rows of repeating data from a data set. </p>', 'refs' => [ 'CodeGenConfigurationNode$DropDuplicates' => '<p>Specifies a transform that removes rows of repeating data from a data set.</p>', ], ], 'DropFields' => [ 'base' => '<p>Specifies a transform that chooses the data property keys that you want to drop.</p>', 'refs' => [ 'CodeGenConfigurationNode$DropFields' => '<p>Specifies a transform that chooses the data property keys that you want to drop.</p>', ], ], 'DropNullFields' => [ 'base' => '<p>Specifies a transform that removes columns from the dataset if all values in the column are \'null\'. By default, Glue Studio will recognize null objects, but some values such as empty strings, strings that are "null", -1 integers or other placeholders such as zeros, are not automatically recognized as nulls.</p>', 'refs' => [ 'CodeGenConfigurationNode$DropNullFields' => '<p>Specifies a transform that removes columns from the dataset if all values in the column are \'null\'. By default, Glue Studio will recognize null objects, but some values such as empty strings, strings that are "null", -1 integers or other placeholders such as zeros, are not automatically recognized as nulls.</p>', ], ], 'DynamoDBCatalogSource' => [ 'base' => '<p>Specifies a DynamoDB data source in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$DynamoDBCatalogSource' => NULL, ], ], 'DynamoDBTarget' => [ 'base' => '<p>Specifies an Amazon DynamoDB table to crawl.</p>', 'refs' => [ 'DynamoDBTargetList$member' => NULL, ], ], 'DynamoDBTargetList' => [ 'base' => NULL, 'refs' => [ 'CrawlerTargets$DynamoDBTargets' => '<p>Specifies Amazon DynamoDB targets.</p>', ], ], 'Edge' => [ 'base' => '<p>An edge represents a directed connection between two Glue components that are part of the workflow the edge belongs to.</p>', 'refs' => [ 'EdgeList$member' => NULL, ], ], 'EdgeList' => [ 'base' => NULL, 'refs' => [ 'WorkflowGraph$Edges' => '<p>A list of all the directed connections between the nodes belonging to the workflow.</p>', ], ], 'EnableHybridValues' => [ 'base' => NULL, 'refs' => [ 'PutResourcePolicyRequest$EnableHybrid' => '<p>If <code>\'TRUE\'</code>, indicates that you are using both methods to grant cross-account access to Data Catalog resources:</p> <ul> <li> <p>By directly updating the resource policy with <code>PutResourePolicy</code> </p> </li> <li> <p>By using the <b>Grant permissions</b> command on the Amazon Web Services Management Console.</p> </li> </ul> <p>Must be set to <code>\'TRUE\'</code> if you have already used the Management Console to grant cross-account access, otherwise the call fails. Default is \'FALSE\'.</p>', ], ], 'EnclosedInStringProperties' => [ 'base' => NULL, 'refs' => [ 'AggregateOperation$Column' => '<p>Specifies the column on the data set on which the aggregation function will be applied.</p>', 'FilterValue$Value' => '<p>The value to be associated.</p>', 'GlueStudioPathList$member' => NULL, 'JDBCConnectorOptions$JobBookmarkKeys' => '<p>The name of the job bookmark keys on which to sort.</p>', 'Mapping$FromPath' => '<p>The table or column to be modified.</p>', 'PIIDetection$EntityTypesToDetect' => '<p>Indicates the types of entities the PIIDetection transform will identify as PII data. </p> <p> PII type entities include: PERSON_NAME, DATE, USA_SNN, EMAIL, USA_ITIN, USA_PASSPORT_NUMBER, PHONE_NUMBER, BANK_ACCOUNT, IP_ADDRESS, MAC_ADDRESS, USA_CPT_CODE, USA_HCPCS_CODE, USA_NATIONAL_DRUG_CODE, USA_MEDICARE_BENEFICIARY_IDENTIFIER, USA_HEALTH_INSURANCE_CLAIM_NUMBER,CREDIT_CARD,USA_NATIONAL_PROVIDER_IDENTIFIER,USA_DEA_NUMBER,USA_DRIVING_LICENSE </p>', 'RenameField$SourcePath' => '<p>A JSON path to a variable in the data structure for the source data.</p>', 'RenameField$TargetPath' => '<p>A JSON path to a variable in the data structure for the target data.</p>', 'S3CsvSource$Paths' => '<p>A list of the Amazon S3 paths to read from.</p>', 'S3CsvSource$Exclusions' => '<p>A string containing a JSON list of Unix-style glob patterns to exclude. For example, "[\\"**.pdf\\"]" excludes all PDF files. </p>', 'S3JsonSource$Paths' => '<p>A list of the Amazon S3 paths to read from.</p>', 'S3JsonSource$Exclusions' => '<p>A string containing a JSON list of Unix-style glob patterns to exclude. For example, "[\\"**.pdf\\"]" excludes all PDF files. </p>', 'S3ParquetSource$Paths' => '<p>A list of the Amazon S3 paths to read from.</p>', 'S3ParquetSource$Exclusions' => '<p>A string containing a JSON list of Unix-style glob patterns to exclude. For example, "[\\"**.pdf\\"]" excludes all PDF files. </p>', ], ], 'EnclosedInStringPropertiesMinOne' => [ 'base' => NULL, 'refs' => [ 'UpsertRedshiftTargetOptions$UpsertKeys' => '<p>The keys used to determine whether to perform an update or insert.</p>', ], ], 'EnclosedInStringProperty' => [ 'base' => NULL, 'refs' => [ 'AdditionalOptions$key' => NULL, 'AdditionalOptions$value' => NULL, 'AthenaConnectorSource$ConnectionName' => '<p>The name of the connection that is associated with the connector.</p>', 'AthenaConnectorSource$ConnectorName' => '<p>The name of a connector that assists with accessing the data store in Glue Studio.</p>', 'AthenaConnectorSource$ConnectionType' => '<p>The type of connection, such as marketplace.athena or custom.athena, designating a connection to an Amazon Athena data store.</p>', 'AthenaConnectorSource$SchemaName' => '<p>The name of the Cloudwatch log group to read from. For example, <code>/aws-glue/jobs/output</code>.</p>', 'BasicCatalogTarget$Database' => '<p>The database that contains the table you want to use as the target. This database must already exist in the Data Catalog.</p>', 'BasicCatalogTarget$Table' => '<p>The table that defines the schema of your output data. This table must already exist in the Data Catalog.</p>', 'CatalogKafkaSource$Table' => '<p>The name of the table in the database to read from.</p>', 'CatalogKafkaSource$Database' => '<p>The name of the database to read from.</p>', 'CatalogKinesisSource$Table' => '<p>The name of the table in the database to read from.</p>', 'CatalogKinesisSource$Database' => '<p>The name of the database to read from.</p>', 'CatalogSource$Database' => '<p>The name of the database to read from.</p>', 'CatalogSource$Table' => '<p>The name of the table in the database to read from.</p>', 'CustomCode$ClassName' => '<p>The name defined for the custom code node class.</p>', 'DirectSchemaChangePolicy$Table' => '<p>Specifies the table in the database that the schema change policy applies to.</p>', 'DirectSchemaChangePolicy$Database' => '<p>Specifies the database that the schema change policy applies to.</p>', 'DynamoDBCatalogSource$Database' => '<p>The name of the database to read from.</p>', 'DynamoDBCatalogSource$Table' => '<p>The name of the table in the database to read from.</p>', 'EnclosedInStringProperties$member' => NULL, 'EnclosedInStringPropertiesMinOne$member' => NULL, 'FillMissingValues$ImputedPath' => '<p>A JSON path to a variable in the data structure for the dataset that is imputed.</p>', 'FillMissingValues$FilledPath' => '<p>A JSON path to a variable in the data structure for the dataset that is filled.</p>', 'GovernedCatalogSource$Database' => '<p>The database to read from.</p>', 'GovernedCatalogSource$Table' => '<p>The database table to read from.</p>', 'GovernedCatalogSource$PartitionPredicate' => '<p>Partitions satisfying this predicate are deleted. Files within the retention period in these partitions are not deleted. Set to <code>""</code> – empty by default.</p>', 'GovernedCatalogTarget$Table' => '<p>The name of the table in the database to write to.</p>', 'GovernedCatalogTarget$Database' => '<p>The name of the database to write to.</p>', 'JDBCConnectorOptions$FilterPredicate' => '<p>Extra condition clause to filter data from source. For example:</p> <p> <code>BillingCity=\'Mountain View\'</code> </p> <p>When using a query instead of a table name, you should validate that the query works with the specified <code>filterPredicate</code>.</p>', 'JDBCConnectorOptions$PartitionColumn' => '<p>The name of an integer column that is used for partitioning. This option works only when it\'s included with <code>lowerBound</code>, <code>upperBound</code>, and <code>numPartitions</code>. This option works the same way as in the Spark SQL JDBC reader.</p>', 'JDBCConnectorOptions$JobBookmarkKeysSortOrder' => '<p>Specifies an ascending or descending sort order.</p>', 'JDBCConnectorSource$ConnectionName' => '<p>The name of the connection that is associated with the connector.</p>', 'JDBCConnectorSource$ConnectorName' => '<p>The name of a connector that assists with accessing the data store in Glue Studio.</p>', 'JDBCConnectorSource$ConnectionType' => '<p>The type of connection, such as marketplace.jdbc or custom.jdbc, designating a connection to a JDBC data store.</p>', 'JDBCConnectorTarget$ConnectionName' => '<p>The name of the connection that is associated with the connector.</p>', 'JDBCConnectorTarget$ConnectorName' => '<p>The name of a connector that will be used.</p>', 'JDBCConnectorTarget$ConnectionType' => '<p>The type of connection, such as marketplace.jdbc or custom.jdbc, designating a connection to a JDBC data target.</p>', 'JoinColumn$From' => '<p>The column to be joined.</p>', 'KafkaStreamingSourceOptions$BootstrapServers' => '<p>A list of bootstrap server URLs, for example, as <code>b-1.vpc-test-2.o4q88o.c6.kafka.us-east-1.amazonaws.com:9094</code>. This option must be specified in the API call or defined in the table metadata in the Data Catalog.</p>', 'KafkaStreamingSourceOptions$SecurityProtocol' => '<p>The protocol used to communicate with brokers. The possible values are <code>"SSL"</code> or <code>"PLAINTEXT"</code>.</p>', 'KafkaStreamingSourceOptions$ConnectionName' => '<p>The name of the connection.</p>', 'KafkaStreamingSourceOptions$TopicName' => '<p>The topic name as specified in Apache Kafka. You must specify at least one of <code>"topicName"</code>, <code>"assign"</code> or <code>"subscribePattern"</code>.</p>', 'KafkaStreamingSourceOptions$Assign' => '<p>The specific <code>TopicPartitions</code> to consume. You must specify at least one of <code>"topicName"</code>, <code>"assign"</code> or <code>"subscribePattern"</code>.</p>', 'KafkaStreamingSourceOptions$SubscribePattern' => '<p>A Java regex string that identifies the topic list to subscribe to. You must specify at least one of <code>"topicName"</code>, <code>"assign"</code> or <code>"subscribePattern"</code>.</p>', 'KafkaStreamingSourceOptions$Classification' => '<p>An optional classification.</p>', 'KafkaStreamingSourceOptions$Delimiter' => '<p>Specifies the delimiter character.</p>', 'KafkaStreamingSourceOptions$StartingOffsets' => '<p>The starting position in the Kafka topic to read data from. The possible values are <code>"earliest"</code> or <code>"latest"</code>. The default value is <code>"latest"</code>.</p>', 'KafkaStreamingSourceOptions$EndingOffsets' => '<p>The end point when a batch query is ended. Possible values are either <code>"latest"</code> or a JSON string that specifies an ending offset for each <code>TopicPartition</code>.</p>', 'KinesisStreamingSourceOptions$EndpointUrl' => '<p>The URL of the Kinesis endpoint.</p>', 'KinesisStreamingSourceOptions$StreamName' => '<p>The name of the Kinesis data stream.</p>', 'KinesisStreamingSourceOptions$Classification' => '<p>An optional classification.</p>', 'KinesisStreamingSourceOptions$Delimiter' => '<p>Specifies the delimiter character.</p>', 'KinesisStreamingSourceOptions$StreamArn' => '<p>The Amazon Resource Name (ARN) of the Kinesis data stream.</p>', 'KinesisStreamingSourceOptions$RoleArn' => '<p>The Amazon Resource Name (ARN) of the role to assume using AWS Security Token Service (AWS STS). This role must have permissions for describe or read record operations for the Kinesis data stream. You must use this parameter when accessing a data stream in a different account. Used in conjunction with <code>"awsSTSSessionName"</code>.</p>', 'KinesisStreamingSourceOptions$RoleSessionName' => '<p>An identifier for the session assuming the role using AWS STS. You must use this parameter when accessing a data stream in a different account. Used in conjunction with <code>"awsSTSRoleARN"</code>.</p>', 'Mapping$ToKey' => '<p>After the apply mapping, what the name of the column should be. Can be the same as <code>FromPath</code>.</p>', 'Mapping$FromType' => '<p>The type of the data to be modified.</p>', 'Mapping$ToType' => '<p>The data type that the data is to be modified to.</p>', 'MicrosoftSQLServerCatalogSource$Database' => '<p>The name of the database to read from.</p>', 'MicrosoftSQLServerCatalogSource$Table' => '<p>The name of the table in the database to read from.</p>', 'MicrosoftSQLServerCatalogTarget$Database' => '<p>The name of the database to write to.</p>', 'MicrosoftSQLServerCatalogTarget$Table' => '<p>The name of the table in the database to write to.</p>', 'MySQLCatalogSource$Database' => '<p>The name of the database to read from.</p>', 'MySQLCatalogSource$Table' => '<p>The name of the table in the database to read from.</p>', 'MySQLCatalogTarget$Database' => '<p>The name of the database to write to.</p>', 'MySQLCatalogTarget$Table' => '<p>The name of the table in the database to write to.</p>', 'NullValueField$Value' => '<p>The value of the null placeholder.</p>', 'OracleSQLCatalogSource$Database' => '<p>The name of the database to read from.</p>', 'OracleSQLCatalogSource$Table' => '<p>The name of the table in the database to read from.</p>', 'OracleSQLCatalogTarget$Database' => '<p>The name of the database to write to.</p>', 'OracleSQLCatalogTarget$Table' => '<p>The name of the table in the database to write to.</p>', 'PIIDetection$OutputColumnName' => '<p>Indicates the output column name that will contain any entity type detected in that row. </p>', 'PostgreSQLCatalogSource$Database' => '<p>The name of the database to read from.</p>', 'PostgreSQLCatalogSource$Table' => '<p>The name of the table in the database to read from.</p>', 'PostgreSQLCatalogTarget$Database' => '<p>The name of the database to write to.</p>', 'PostgreSQLCatalogTarget$Table' => '<p>The name of the table in the database to write to.</p>', 'RedshiftSource$Database' => '<p>The database to read from.</p>', 'RedshiftSource$Table' => '<p>The database table to read from.</p>', 'RedshiftSource$RedshiftTmpDir' => '<p>The Amazon S3 path where temporary data can be staged when copying out of the database.</p>', 'RedshiftSource$TmpDirIAMRole' => '<p>The IAM role with permissions.</p>', 'RedshiftTarget$Database' => '<p>The name of the database to write to.</p>', 'RedshiftTarget$Table' => '<p>The name of the table in the database to write to.</p>', 'RedshiftTarget$RedshiftTmpDir' => '<p>The Amazon S3 path where temporary data can be staged when copying out of the database.</p>', 'RedshiftTarget$TmpDirIAMRole' => '<p>The IAM role with permissions.</p>', 'RelationalCatalogSource$Database' => '<p>The name of the database to read from.</p>', 'RelationalCatalogSource$Table' => '<p>The name of the table in the database to read from.</p>', 'S3CatalogSource$Database' => '<p>The database to read from.</p>', 'S3CatalogSource$Table' => '<p>The database table to read from.</p>', 'S3CatalogSource$PartitionPredicate' => '<p>Partitions satisfying this predicate are deleted. Files within the retention period in these partitions are not deleted. Set to <code>""</code> – empty by default.</p>', 'S3CatalogTarget$Table' => '<p>The name of the table in the database to write to.</p>', 'S3CatalogTarget$Database' => '<p>The name of the database to write to.</p>', 'S3CsvSource$GroupSize' => '<p>The target group size in bytes. The default is computed based on the input data size and the size of your cluster. When there are fewer than 50,000 input files, <code>"groupFiles"</code> must be set to <code>"inPartition"</code> for this to take effect.</p>', 'S3CsvSource$GroupFiles' => '<p>Grouping files is turned on by default when the input contains more than 50,000 files. To turn on grouping with fewer than 50,000 files, set this parameter to "inPartition". To disable grouping when there are more than 50,000 files, set this parameter to <code>"none"</code>.</p>', 'S3DirectSourceAdditionalOptions$SamplePath' => '<p>If enabled, specifies the sample path.</p>', 'S3DirectTarget$Path' => '<p>A single Amazon S3 path to write to.</p>', 'S3DirectTarget$Compression' => '<p>Specifies how the data is compressed. This is generally not necessary if the data has a standard file extension. Possible values are <code>"gzip"</code> and <code>"bzip"</code>).</p>', 'S3GlueParquetTarget$Path' => '<p>A single Amazon S3 path to write to.</p>', 'S3JsonSource$GroupSize' => '<p>The target group size in bytes. The default is computed based on the input data size and the size of your cluster. When there are fewer than 50,000 input files, <code>"groupFiles"</code> must be set to <code>"inPartition"</code> for this to take effect.</p>', 'S3JsonSource$GroupFiles' => '<p>Grouping files is turned on by default when the input contains more than 50,000 files. To turn on grouping with fewer than 50,000 files, set this parameter to "inPartition". To disable grouping when there are more than 50,000 files, set this parameter to <code>"none"</code>.</p>', 'S3JsonSource$JsonPath' => '<p>A JsonPath string defining the JSON data.</p>', 'S3ParquetSource$GroupSize' => '<p>The target group size in bytes. The default is computed based on the input data size and the size of your cluster. When there are fewer than 50,000 input files, <code>"groupFiles"</code> must be set to <code>"inPartition"</code> for this to take effect.</p>', 'S3ParquetSource$GroupFiles' => '<p>Grouping files is turned on by default when the input contains more than 50,000 files. To turn on grouping with fewer than 50,000 files, set this parameter to "inPartition". To disable grouping when there are more than 50,000 files, set this parameter to <code>"none"</code>.</p>', 'SparkConnectorSource$ConnectionName' => '<p>The name of the connection that is associated with the connector.</p>', 'SparkConnectorSource$ConnectorName' => '<p>The name of a connector that assists with accessing the data store in Glue Studio.</p>', 'SparkConnectorSource$ConnectionType' => '<p>The type of connection, such as marketplace.spark or custom.spark, designating a connection to an Apache Spark data store.</p>', 'SparkConnectorTarget$ConnectionName' => '<p>The name of a connection for an Apache Spark connector.</p>', 'SparkConnectorTarget$ConnectorName' => '<p>The name of an Apache Spark connector.</p>', 'SparkConnectorTarget$ConnectionType' => '<p>The type of connection, such as marketplace.spark or custom.spark, designating a connection to an Apache Spark data store.</p>', 'Spigot$Path' => '<p>A path in Amazon S3 where the transform will write a subset of records from the dataset to a JSON file in an Amazon S3 bucket.</p>', 'UpsertRedshiftTargetOptions$TableLocation' => '<p>The physical location of the Redshift table.</p>', 'UpsertRedshiftTargetOptions$ConnectionName' => '<p>The name of the connection to use to write to Redshift.</p>', ], ], 'EnclosedInStringPropertyWithQuote' => [ 'base' => NULL, 'refs' => [ 'AthenaConnectorSource$ConnectionTable' => '<p>The name of the table in the data source.</p>', 'JDBCConnectorSource$ConnectionTable' => '<p>The name of the table in the data source.</p>', 'JDBCConnectorTarget$ConnectionTable' => '<p>The name of the table in the data target.</p>', 'S3CsvSource$Escaper' => '<p>Specifies a character to use for escaping. This option is used only when reading CSV files. The default value is <code>none</code>. If enabled, the character which immediately follows is used as-is, except for a small set of well-known escapes (<code>\\n</code>, <code>\\r</code>, <code>\\t</code>, and <code>\\0</code>).</p>', 'SqlAlias$Alias' => '<p>A temporary name given to a table, or a column in a table.</p>', ], ], 'EncryptionAtRest' => [ 'base' => '<p>Specifies the encryption-at-rest configuration for the Data Catalog.</p>', 'refs' => [ 'DataCatalogEncryptionSettings$EncryptionAtRest' => '<p>Specifies the encryption-at-rest configuration for the Data Catalog.</p>', ], ], 'EncryptionConfiguration' => [ 'base' => '<p>Specifies an encryption configuration.</p>', 'refs' => [ 'CreateSecurityConfigurationRequest$EncryptionConfiguration' => '<p>The encryption configuration for the new security configuration.</p>', 'SecurityConfiguration$EncryptionConfiguration' => '<p>The encryption configuration associated with this security configuration.</p>', ], ], 'EntityNotFoundException' => [ 'base' => '<p>A specified entity does not exist</p>', 'refs' => [], ], 'ErrorByName' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteConnectionResponse$Errors' => '<p>A map of the names of connections that were not successfully deleted to error details.</p>', ], ], 'ErrorCodeString' => [ 'base' => NULL, 'refs' => [ 'ErrorDetails$ErrorCode' => '<p>The error code for an error.</p>', ], ], 'ErrorDetail' => [ 'base' => '<p>Contains details about an error.</p>', 'refs' => [ 'BatchStopJobRunError$ErrorDetail' => '<p>Specifies details about the error that was encountered.</p>', 'BatchUpdatePartitionFailureEntry$ErrorDetail' => '<p>The details about the batch update partition error.</p>', 'ColumnError$Error' => '<p>An error message with the reason for the failure of an operation.</p>', 'ColumnStatisticsError$Error' => '<p>An error message with the reason for the failure of an operation.</p>', 'ErrorByName$value' => NULL, 'PartitionError$ErrorDetail' => '<p>The details about the partition error.</p>', 'TableError$ErrorDetail' => '<p>The details about the error.</p>', 'TableVersionError$ErrorDetail' => '<p>The details about the error.</p>', ], ], 'ErrorDetails' => [ 'base' => '<p>An object containing error details.</p>', 'refs' => [ 'SchemaVersionErrorItem$ErrorDetails' => '<p>The details of the error for the schema version.</p>', ], ], 'ErrorMessageString' => [ 'base' => NULL, 'refs' => [ 'ErrorDetails$ErrorMessage' => '<p>The error message for an error.</p>', ], ], 'ErrorString' => [ 'base' => NULL, 'refs' => [ 'Blueprint$ErrorMessage' => '<p>An error message.</p>', 'JobRun$ErrorMessage' => '<p>An error message associated with this job run.</p>', 'WorkflowRun$ErrorMessage' => '<p>This error message describes any error that may have occurred in starting the workflow run. Currently the only error message is "Concurrent runs exceeded for workflow: <code>foo</code>."</p>', ], ], 'EvaluationMetrics' => [ 'base' => '<p>Evaluation metrics provide an estimate of the quality of your machine learning transform.</p>', 'refs' => [ 'GetMLTransformResponse$EvaluationMetrics' => '<p>The latest evaluation metrics.</p>', 'MLTransform$EvaluationMetrics' => '<p>An <code>EvaluationMetrics</code> object. Evaluation metrics provide an estimate of the quality of your machine learning transform.</p>', ], ], 'EventBatchingCondition' => [ 'base' => '<p>Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.</p>', 'refs' => [ 'CreateTriggerRequest$EventBatchingCondition' => '<p>Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.</p>', 'Trigger$EventBatchingCondition' => '<p>Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.</p>', 'TriggerUpdate$EventBatchingCondition' => '<p>Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.</p>', ], ], 'EventQueueArn' => [ 'base' => NULL, 'refs' => [ 'S3Target$EventQueueArn' => '<p>A valid Amazon SQS ARN. For example, <code>arn:aws:sqs:region:account:sqs</code>.</p>', 'S3Target$DlqEventQueueArn' => '<p>A valid Amazon dead-letter SQS ARN. For example, <code>arn:aws:sqs:region:account:deadLetterQueue</code>.</p>', ], ], 'ExecutionClass' => [ 'base' => NULL, 'refs' => [ 'CreateJobRequest$ExecutionClass' => '<p>Indicates whether the job is run with a standard or flexible execution class. The standard execution-class is ideal for time-sensitive workloads that require fast job startup and dedicated resources.</p> <p>The flexible execution class is appropriate for time-insensitive jobs whose start and completion times may vary. </p> <p>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution class is available for Spark jobs.</p>', 'Job$ExecutionClass' => '<p>Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources.</p> <p>The flexible execution class is appropriate for time-insensitive jobs whose start and completion times may vary. </p> <p>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution class is available for Spark jobs.</p>', 'JobRun$ExecutionClass' => '<p>Indicates whether the job is run with a standard or flexible execution class. The standard execution-class is ideal for time-sensitive workloads that require fast job startup and dedicated resources.</p> <p>The flexible execution class is appropriate for time-insensitive jobs whose start and completion times may vary. </p> <p>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution class is available for Spark jobs.</p>', 'JobUpdate$ExecutionClass' => '<p>Indicates whether the job is run with a standard or flexible execution class. The standard execution-class is ideal for time-sensitive workloads that require fast job startup and dedicated resources.</p> <p>The flexible execution class is appropriate for time-insensitive jobs whose start and completion times may vary. </p> <p>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution class is available for Spark jobs.</p>', 'StartJobRunRequest$ExecutionClass' => '<p>Indicates whether the job is run with a standard or flexible execution class. The standard execution-class is ideal for time-sensitive workloads that require fast job startup and dedicated resources.</p> <p>The flexible execution class is appropriate for time-insensitive jobs whose start and completion times may vary. </p> <p>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution class is available for Spark jobs.</p>', ], ], 'ExecutionProperty' => [ 'base' => '<p>An execution property of a job.</p>', 'refs' => [ 'CreateJobRequest$ExecutionProperty' => '<p>An <code>ExecutionProperty</code> specifying the maximum number of concurrent runs allowed for this job.</p>', 'Job$ExecutionProperty' => '<p>An <code>ExecutionProperty</code> specifying the maximum number of concurrent runs allowed for this job.</p>', 'JobUpdate$ExecutionProperty' => '<p>An <code>ExecutionProperty</code> specifying the maximum number of concurrent runs allowed for this job.</p>', ], ], 'ExecutionTime' => [ 'base' => NULL, 'refs' => [ 'GetMLTaskRunResponse$ExecutionTime' => '<p>The amount of time (in seconds) that the task run consumed resources.</p>', 'JobRun$ExecutionTime' => '<p>The amount of time (in seconds) that the job run consumed resources.</p>', 'TaskRun$ExecutionTime' => '<p>The amount of time (in seconds) that the task run consumed resources.</p>', ], ], 'ExistCondition' => [ 'base' => NULL, 'refs' => [ 'PutResourcePolicyRequest$PolicyExistsCondition' => '<p>A value of <code>MUST_EXIST</code> is used to update a policy. A value of <code>NOT_EXIST</code> is used to create a new policy. If a value of <code>NONE</code> or a null value is used, the call does not depend on the existence of a policy.</p>', ], ], 'ExportLabelsTaskRunProperties' => [ 'base' => '<p>Specifies configuration properties for an exporting labels task run.</p>', 'refs' => [ 'TaskRunProperties$ExportLabelsTaskRunProperties' => '<p>The configuration properties for an exporting labels task run.</p>', ], ], 'ExtendedString' => [ 'base' => NULL, 'refs' => [ 'CustomCode$Code' => '<p>The custom code that is used to perform the data transformation.</p>', ], ], 'FieldName' => [ 'base' => NULL, 'refs' => [ 'CrawlsFilter$FieldName' => '<p>A key used to filter the crawler runs for a specified crawler. Valid values for each of the field names are:</p> <ul> <li> <p> <code>CRAWL_ID</code>: A string representing the UUID identifier for a crawl.</p> </li> <li> <p> <code>STATE</code>: A string representing the state of the crawl.</p> </li> <li> <p> <code>START_TIME</code> and <code>END_TIME</code>: The epoch timestamp in milliseconds.</p> </li> <li> <p> <code>DPU_HOUR</code>: The number of data processing unit (DPU) hours used for the crawl.</p> </li> </ul>', ], ], 'FieldType' => [ 'base' => NULL, 'refs' => [ 'MappingEntry$SourceType' => '<p>The source type.</p>', 'MappingEntry$TargetType' => '<p>The target type.</p>', ], ], 'FillMissingValues' => [ 'base' => '<p>Specifies a transform that locates records in the dataset that have missing values and adds a new field with a value determined by imputation. The input data set is used to train the machine learning model that determines what the missing value should be.</p>', 'refs' => [ 'CodeGenConfigurationNode$FillMissingValues' => '<p>Specifies a transform that locates records in the dataset that have missing values and adds a new field with a value determined by imputation. The input data set is used to train the machine learning model that determines what the missing value should be.</p>', ], ], 'Filter' => [ 'base' => '<p>Specifies a transform that splits a dataset into two, based on a filter condition.</p>', 'refs' => [ 'CodeGenConfigurationNode$Filter' => '<p>Specifies a transform that splits a dataset into two, based on a filter condition.</p>', ], ], 'FilterExpression' => [ 'base' => '<p>Specifies a filter expression.</p>', 'refs' => [ 'FilterExpressions$member' => NULL, ], ], 'FilterExpressions' => [ 'base' => NULL, 'refs' => [ 'Filter$Filters' => '<p>Specifies a filter expression.</p>', ], ], 'FilterLogicalOperator' => [ 'base' => NULL, 'refs' => [ 'Filter$LogicalOperator' => '<p>The operator used to filter rows by comparing the key value to a specified value.</p>', ], ], 'FilterOperation' => [ 'base' => NULL, 'refs' => [ 'FilterExpression$Operation' => '<p>The type of operation to perform in the expression.</p>', ], ], 'FilterOperator' => [ 'base' => NULL, 'refs' => [ 'CrawlsFilter$FilterOperator' => '<p>A defined comparator that operates on the value. The available operators are:</p> <ul> <li> <p> <code>GT</code>: Greater than.</p> </li> <li> <p> <code>GE</code>: Greater than or equal to.</p> </li> <li> <p> <code>LT</code>: Less than.</p> </li> <li> <p> <code>LE</code>: Less than or equal to.</p> </li> <li> <p> <code>EQ</code>: Equal to.</p> </li> <li> <p> <code>NE</code>: Not equal to.</p> </li> </ul>', ], ], 'FilterString' => [ 'base' => NULL, 'refs' => [ 'GetTablesRequest$Expression' => '<p>A regular expression pattern. If present, only those tables whose names match the pattern are returned.</p>', ], ], 'FilterValue' => [ 'base' => '<p>Represents a single entry in the list of values for a <code>FilterExpression</code>. </p>', 'refs' => [ 'FilterValues$member' => NULL, ], ], 'FilterValueType' => [ 'base' => NULL, 'refs' => [ 'FilterValue$Type' => '<p>The type of filter value.</p>', ], ], 'FilterValues' => [ 'base' => NULL, 'refs' => [ 'FilterExpression$Values' => '<p>A list of filter values.</p>', ], ], 'FindMatchesMetrics' => [ 'base' => '<p>The evaluation metrics for the find matches algorithm. The quality of your machine learning transform is measured by getting your transform to predict some matches and comparing the results to known matches from the same dataset. The quality metrics are based on a subset of your data, so they are not precise.</p>', 'refs' => [ 'EvaluationMetrics$FindMatchesMetrics' => '<p>The evaluation metrics for the find matches algorithm.</p>', ], ], 'FindMatchesParameters' => [ 'base' => '<p>The parameters to configure the find matches transform.</p>', 'refs' => [ 'TransformParameters$FindMatchesParameters' => '<p>The parameters for the find matches algorithm.</p>', ], ], 'FindMatchesTaskRunProperties' => [ 'base' => '<p>Specifies configuration properties for a Find Matches task run.</p>', 'refs' => [ 'TaskRunProperties$FindMatchesTaskRunProperties' => '<p>The configuration properties for a find matches task run.</p>', ], ], 'FormatString' => [ 'base' => NULL, 'refs' => [ 'StorageDescriptor$InputFormat' => '<p>The input format: <code>SequenceFileInputFormat</code> (binary), or <code>TextInputFormat</code>, or a custom format.</p>', 'StorageDescriptor$OutputFormat' => '<p>The output format: <code>SequenceFileOutputFormat</code> (binary), or <code>IgnoreKeyTextOutputFormat</code>, or a custom format.</p>', ], ], 'Generic512CharString' => [ 'base' => NULL, 'refs' => [ 'Blueprint$Description' => '<p>The description of the blueprint.</p>', 'CreateBlueprintRequest$Description' => '<p>A description of the blueprint.</p>', 'LastActiveDefinition$Description' => '<p>The description of the blueprint.</p>', 'UpdateBlueprintRequest$Description' => '<p>A description of the blueprint.</p>', ], ], 'GenericBoundedDouble' => [ 'base' => NULL, 'refs' => [ 'ColumnImportance$Importance' => '<p>The column importance score for the column, as a decimal.</p>', 'FindMatchesMetrics$AreaUnderPRCurve' => '<p>The area under the precision/recall curve (AUPRC) is a single number measuring the overall quality of the transform, that is independent of the choice made for precision vs. recall. Higher values indicate that you have a more attractive precision vs. recall tradeoff.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Precision_and_recall">Precision and recall</a> in Wikipedia.</p>', 'FindMatchesMetrics$Precision' => '<p>The precision metric indicates when often your transform is correct when it predicts a match. Specifically, it measures how well the transform finds true positives from the total true positives possible.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Precision_and_recall">Precision and recall</a> in Wikipedia.</p>', 'FindMatchesMetrics$Recall' => '<p>The recall metric indicates that for an actual match, how often your transform predicts the match. Specifically, it measures how well the transform finds true positives from the total records in the source data.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Precision_and_recall">Precision and recall</a> in Wikipedia.</p>', 'FindMatchesMetrics$F1' => '<p>The maximum F1 metric indicates the transform\'s accuracy between 0 and 1, where 1 is the best accuracy.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/F1_score">F1 score</a> in Wikipedia.</p>', 'FindMatchesParameters$PrecisionRecallTradeoff' => '<p>The value selected when tuning your transform for a balance between precision and recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff, choosing values close to 1.0 means very low recall, and choosing values close to 0.0 results in very low precision.</p> <p>The precision metric indicates how often your model is correct when it predicts a match. </p> <p>The recall metric indicates that for an actual match, how often your model predicts the match.</p>', 'FindMatchesParameters$AccuracyCostTradeoff' => '<p>The value that is selected when tuning your transform for a balance between accuracy and cost. A value of 0.5 means that the system balances accuracy and cost concerns. A value of 1.0 means a bias purely for accuracy, which typically results in a higher cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost, which results in a less accurate <code>FindMatches</code> transform, sometimes with unacceptable accuracy.</p> <p>Accuracy measures how well the transform finds true positives and true negatives. Increasing accuracy requires more machine resources and cost. But it also results in increased recall. </p> <p>Cost measures how many compute resources, and thus money, are consumed to run the transform.</p>', ], ], 'GenericLimitedString' => [ 'base' => NULL, 'refs' => [ 'Datatype$Id' => '<p>The datatype of the value.</p>', 'Datatype$Label' => '<p>A label assigned to the datatype.</p>', 'LimitedStringList$member' => NULL, ], ], 'GenericMap' => [ 'base' => NULL, 'refs' => [ 'Action$Arguments' => '<p>The job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by Glue</a> topic in the developer guide.</p>', 'CreateJobRequest$DefaultArguments' => '<p>The default arguments for this job.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.</p> <p>Job arguments may be logged. Do not pass plaintext secrets as arguments. Retrieve secrets from a Glue Connection, Secrets Manager or other secret management mechanism if you intend to keep them within the Job. </p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by Glue</a> topic in the developer guide.</p>', 'CreateJobRequest$NonOverridableArguments' => '<p>Non-overridable arguments for this job, specified as name-value pairs.</p>', 'Job$DefaultArguments' => '<p>The default arguments for this job, specified as name-value pairs.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by Glue</a> topic in the developer guide.</p>', 'Job$NonOverridableArguments' => '<p>Non-overridable arguments for this job, specified as name-value pairs.</p>', 'JobRun$Arguments' => '<p>The job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.</p> <p>For information about how to specify and consume your own job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by Glue</a> topic in the developer guide.</p>', 'JobUpdate$DefaultArguments' => '<p>The default arguments for this job.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by Glue</a> topic in the developer guide.</p>', 'JobUpdate$NonOverridableArguments' => '<p>Non-overridable arguments for this job, specified as name-value pairs.</p>', 'StartJobRunRequest$Arguments' => '<p>The job arguments specifically for this run. For this job run, they replace the default arguments set in the job definition itself.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.</p> <p>Job arguments may be logged. Do not pass plaintext secrets as arguments. Retrieve secrets from a Glue Connection, Secrets Manager or other secret management mechanism if you intend to keep them within the Job. </p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by Glue</a> topic in the developer guide.</p>', ], ], 'GenericString' => [ 'base' => NULL, 'refs' => [ 'AdditionalPlanOptionsMap$key' => NULL, 'AdditionalPlanOptionsMap$value' => NULL, 'Blueprint$BlueprintLocation' => '<p>Specifies the path in Amazon S3 where the blueprint is published.</p>', 'Blueprint$BlueprintServiceLocation' => '<p>Specifies a path in Amazon S3 where the blueprint is copied when you call <code>CreateBlueprint/UpdateBlueprint</code> to register the blueprint in Glue.</p>', 'CrawlsFilter$FieldValue' => '<p>The value provided for comparison on the crawl field. </p>', 'CreateDevEndpointRequest$EndpointName' => '<p>The name to be assigned to the new <code>DevEndpoint</code>.</p>', 'CreateDevEndpointRequest$SubnetId' => '<p>The subnet ID for the new <code>DevEndpoint</code> to use.</p>', 'CreateDevEndpointRequest$PublicKey' => '<p>The public key to be used by this <code>DevEndpoint</code> for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.</p>', 'CreateDevEndpointRequest$ExtraPythonLibsS3Path' => '<p>The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a comma.</p> <note> <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a> Python data analysis library, are not yet supported.</p> </note>', 'CreateDevEndpointRequest$ExtraJarsS3Path' => '<p>The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded in your <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$EndpointName' => '<p>The name assigned to the new <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$Status' => '<p>The current status of the new <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$SubnetId' => '<p>The subnet ID assigned to the new <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$YarnEndpointAddress' => '<p>The address of the YARN endpoint used by this <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$AvailabilityZone' => '<p>The AWS Availability Zone where this <code>DevEndpoint</code> is located.</p>', 'CreateDevEndpointResponse$VpcId' => '<p>The ID of the virtual private cloud (VPC) used by this <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$ExtraPythonLibsS3Path' => '<p>The paths to one or more Python libraries in an S3 bucket that will be loaded in your <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$ExtraJarsS3Path' => '<p>Path to one or more Java <code>.jar</code> files in an S3 bucket that will be loaded in your <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$FailureReason' => '<p>The reason for a current failure in this <code>DevEndpoint</code>.</p>', 'CreateTriggerRequest$Schedule' => '<p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p> <p>This field is required when the trigger type is SCHEDULED.</p>', 'CreateWorkflowRequest$Description' => '<p>A description of the workflow.</p>', 'DeleteDevEndpointRequest$EndpointName' => '<p>The name of the <code>DevEndpoint</code>.</p>', 'DevEndpoint$EndpointName' => '<p>The name of the <code>DevEndpoint</code>.</p>', 'DevEndpoint$SubnetId' => '<p>The subnet ID for this <code>DevEndpoint</code>.</p>', 'DevEndpoint$YarnEndpointAddress' => '<p>The YARN endpoint address used by this <code>DevEndpoint</code>.</p>', 'DevEndpoint$PrivateAddress' => '<p>A private IP address to access the <code>DevEndpoint</code> within a VPC if the <code>DevEndpoint</code> is created within one. The <code>PrivateAddress</code> field is present only when you create the <code>DevEndpoint</code> within your VPC.</p>', 'DevEndpoint$PublicAddress' => '<p>The public IP address used by this <code>DevEndpoint</code>. The <code>PublicAddress</code> field is present only when you create a non-virtual private cloud (VPC) <code>DevEndpoint</code>.</p>', 'DevEndpoint$Status' => '<p>The current status of this <code>DevEndpoint</code>.</p>', 'DevEndpoint$AvailabilityZone' => '<p>The AWS Availability Zone where this <code>DevEndpoint</code> is located.</p>', 'DevEndpoint$VpcId' => '<p>The ID of the virtual private cloud (VPC) used by this <code>DevEndpoint</code>.</p>', 'DevEndpoint$ExtraPythonLibsS3Path' => '<p>The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a comma.</p> <note> <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a> Python data analysis library, are not currently supported.</p> </note>', 'DevEndpoint$ExtraJarsS3Path' => '<p>The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded in your <code>DevEndpoint</code>.</p> <note> <p>You can only use pure Java/Scala libraries with a <code>DevEndpoint</code>.</p> </note>', 'DevEndpoint$FailureReason' => '<p>The reason for a current failure in this <code>DevEndpoint</code>.</p>', 'DevEndpoint$LastUpdateStatus' => '<p>The status of the last update.</p>', 'DevEndpoint$PublicKey' => '<p>The public key to be used by this <code>DevEndpoint</code> for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.</p>', 'DevEndpointCustomLibraries$ExtraPythonLibsS3Path' => '<p>The paths to one or more Python libraries in an Amazon Simple Storage Service (Amazon S3) bucket that should be loaded in your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a comma.</p> <note> <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a> Python data analysis library, are not currently supported.</p> </note>', 'DevEndpointCustomLibraries$ExtraJarsS3Path' => '<p>The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded in your <code>DevEndpoint</code>.</p> <note> <p>You can only use pure Java/Scala libraries with a <code>DevEndpoint</code>.</p> </note>', 'DevEndpointNames$member' => NULL, 'GenericMap$key' => NULL, 'GenericMap$value' => NULL, 'GetBlueprintRunsRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'GetBlueprintRunsResponse$NextToken' => '<p>A continuation token, if not all blueprint runs have been returned.</p>', 'GetDevEndpointRequest$EndpointName' => '<p>Name of the <code>DevEndpoint</code> to retrieve information for.</p>', 'GetDevEndpointsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetDevEndpointsResponse$NextToken' => '<p>A continuation token, if not all <code>DevEndpoint</code> definitions have yet been returned.</p>', 'GetJobRunsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetJobRunsResponse$NextToken' => '<p>A continuation token, if not all requested job runs have been returned.</p>', 'GetJobsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetJobsResponse$NextToken' => '<p>A continuation token, if not all job definitions have yet been returned.</p>', 'GetMLTaskRunResponse$LogGroupName' => '<p>The names of the log groups that are associated with the task run.</p>', 'GetMLTaskRunResponse$ErrorString' => '<p>The error strings that are associated with the task run.</p>', 'GetSecurityConfigurationsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetSecurityConfigurationsResponse$NextToken' => '<p>A continuation token, if there are more security configurations to return.</p>', 'GetTriggersRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetTriggersResponse$NextToken' => '<p>A continuation token, if not all the requested triggers have yet been returned.</p>', 'GetWorkflowRunsRequest$NextToken' => '<p>The maximum size of the response.</p>', 'GetWorkflowRunsResponse$NextToken' => '<p>A continuation token, if not all requested workflow runs have been returned.</p>', 'JobCommand$Name' => '<p>The name of the job command. For an Apache Spark ETL job, this must be <code>glueetl</code>. For a Python shell job, it must be <code>pythonshell</code>. For an Apache Spark streaming ETL job, this must be <code>gluestreaming</code>.</p>', 'JobRun$LogGroupName' => '<p>The name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be <code>/aws-glue/jobs/</code>, in which case the default encryption is <code>NONE</code>. If you add a role name and <code>SecurityConfiguration</code> name (in other words, <code>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</code>), then that security configuration is used to encrypt the log group.</p>', 'LastActiveDefinition$BlueprintLocation' => '<p>Specifies a path in Amazon S3 where the blueprint is published by the Glue developer.</p>', 'LastActiveDefinition$BlueprintServiceLocation' => '<p>Specifies a path in Amazon S3 where the blueprint is copied when you create or update the blueprint.</p>', 'ListBlueprintsRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'ListBlueprintsResponse$NextToken' => '<p>A continuation token, if not all blueprint names have been returned.</p>', 'ListDevEndpointsRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'ListDevEndpointsResponse$NextToken' => '<p>A continuation token, if the returned list does not contain the last metric available.</p>', 'ListJobsRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'ListJobsResponse$NextToken' => '<p>A continuation token, if the returned list does not contain the last metric available.</p>', 'ListTriggersRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'ListTriggersResponse$NextToken' => '<p>A continuation token, if the returned list does not contain the last metric available.</p>', 'ListWorkflowsRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'ListWorkflowsResponse$NextToken' => '<p>A continuation token, if not all workflow names have been returned.</p>', 'MapValue$key' => NULL, 'MapValue$value' => NULL, 'OrchestrationStringList$member' => NULL, 'PublicKeysList$member' => NULL, 'Statement$Code' => '<p>The execution code of the statement.</p>', 'StatementOutput$ErrorName' => '<p>The name of the error in the output.</p>', 'StatementOutput$ErrorValue' => '<p>The error value of the output.</p>', 'StatementOutputData$TextPlain' => '<p>The code execution output in text format.</p>', 'StringList$member' => NULL, 'TaskRun$LogGroupName' => '<p>The names of the log group for secure logging, associated with this task run.</p>', 'TaskRun$ErrorString' => '<p>The list of error strings associated with this task run.</p>', 'Trigger$Schedule' => '<p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p>', 'TriggerUpdate$Schedule' => '<p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p>', 'UpdateDevEndpointRequest$EndpointName' => '<p>The name of the <code>DevEndpoint</code> to be updated.</p>', 'UpdateDevEndpointRequest$PublicKey' => '<p>The public key for the <code>DevEndpoint</code> to use.</p>', 'UpdateWorkflowRequest$Description' => '<p>The description of the workflow.</p>', 'Workflow$Description' => '<p>A description of the workflow.</p>', 'WorkflowRunProperties$value' => NULL, ], ], 'GetBlueprintRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetBlueprintResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetBlueprintRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetBlueprintRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetBlueprintRunsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetBlueprintRunsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetCatalogImportStatusRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetCatalogImportStatusResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetClassifierRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetClassifierResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetClassifiersRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetClassifiersResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetColumnNamesList' => [ 'base' => NULL, 'refs' => [ 'GetColumnStatisticsForPartitionRequest$ColumnNames' => '<p>A list of the column names.</p>', 'GetColumnStatisticsForTableRequest$ColumnNames' => '<p>A list of the column names.</p>', ], ], 'GetColumnStatisticsForPartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetColumnStatisticsForPartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetColumnStatisticsForTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetColumnStatisticsForTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetConnectionRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetConnectionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetConnectionsFilter' => [ 'base' => '<p>Filters the connection definitions that are returned by the <code>GetConnections</code> API operation.</p>', 'refs' => [ 'GetConnectionsRequest$Filter' => '<p>A filter that controls which connections are returned.</p>', ], ], 'GetConnectionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetConnectionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetCrawlerMetricsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetCrawlerMetricsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetCrawlerRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetCrawlerResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetCrawlersRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetCrawlersResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetCustomEntityTypeRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetCustomEntityTypeResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDataCatalogEncryptionSettingsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDataCatalogEncryptionSettingsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDatabaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDatabaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDatabasesRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDatabasesResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDataflowGraphRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDataflowGraphResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDevEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDevEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDevEndpointsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDevEndpointsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetJobBookmarkRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetJobBookmarkResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetJobRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetJobResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetJobRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetJobRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetJobRunsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetJobRunsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetJobsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetJobsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTaskRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTaskRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTaskRunsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTaskRunsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTransformRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTransformResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTransformsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetMLTransformsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetMappingRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetMappingResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetPartitionIndexesRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetPartitionIndexesResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetPartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetPartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetPartitionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetPartitionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetPlanRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetPlanResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetRegistryInput' => [ 'base' => NULL, 'refs' => [], ], 'GetRegistryResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetResourcePoliciesRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetResourcePoliciesResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetResourcePoliciesResponseList' => [ 'base' => NULL, 'refs' => [ 'GetResourcePoliciesResponse$GetResourcePoliciesResponseList' => '<p>A list of the individual resource policies and the account-level resource policy.</p>', ], ], 'GetResourcePolicyRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetResourcePolicyResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaByDefinitionInput' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaByDefinitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaInput' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaVersionInput' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaVersionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaVersionsDiffInput' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaVersionsDiffResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSecurityConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetSecurityConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSecurityConfigurationsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetSecurityConfigurationsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSessionRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetSessionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetStatementRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetStatementResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetTableVersionRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetTableVersionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetTableVersionsList' => [ 'base' => NULL, 'refs' => [ 'GetTableVersionsResponse$TableVersions' => '<p>A list of strings identifying available versions of the specified table.</p>', ], ], 'GetTableVersionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetTableVersionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetTablesRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetTablesResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetTagsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetTagsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetTriggerRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetTriggerResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetTriggersRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetTriggersResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetUnfilteredPartitionMetadataRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetUnfilteredPartitionMetadataResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetUnfilteredPartitionsMetadataRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetUnfilteredPartitionsMetadataResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetUnfilteredTableMetadataRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetUnfilteredTableMetadataResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetUserDefinedFunctionRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetUserDefinedFunctionResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetUserDefinedFunctionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetUserDefinedFunctionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowRunPropertiesRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowRunPropertiesResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowRunsRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetWorkflowRunsResponse' => [ 'base' => NULL, 'refs' => [], ], 'GlueEncryptionException' => [ 'base' => '<p>An encryption operation failed.</p>', 'refs' => [], ], 'GluePolicy' => [ 'base' => '<p>A structure for returning a resource policy.</p>', 'refs' => [ 'GetResourcePoliciesResponseList$member' => NULL, ], ], 'GlueRecordType' => [ 'base' => NULL, 'refs' => [ 'JDBCDataTypeMapping$value' => NULL, ], ], 'GlueResourceArn' => [ 'base' => NULL, 'refs' => [ 'CreateRegistryResponse$RegistryArn' => '<p>The Amazon Resource Name (ARN) of the newly created registry.</p>', 'CreateSchemaResponse$RegistryArn' => '<p>The Amazon Resource Name (ARN) of the registry.</p>', 'CreateSchemaResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema.</p>', 'DeleteRegistryResponse$RegistryArn' => '<p>The Amazon Resource Name (ARN) of the registry being deleted.</p>', 'DeleteResourcePolicyRequest$ResourceArn' => '<p>The ARN of the Glue resource for the resource policy to be deleted.</p>', 'DeleteSchemaResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema being deleted.</p>', 'GetRegistryResponse$RegistryArn' => '<p>The Amazon Resource Name (ARN) of the registry.</p>', 'GetResourcePolicyRequest$ResourceArn' => '<p>The ARN of the Glue resource for which to retrieve the resource policy. If not supplied, the Data Catalog resource policy is returned. Use <code>GetResourcePolicies</code> to view all existing resource policies. For more information see <a href="https://docs.aws.amazon.com/glue/latest/dg/glue-specifying-resource-arns.html">Specifying Glue Resource ARNs</a>. </p>', 'GetSchemaByDefinitionResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema.</p>', 'GetSchemaResponse$RegistryArn' => '<p>The Amazon Resource Name (ARN) of the registry.</p>', 'GetSchemaResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema.</p>', 'GetSchemaVersionResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema.</p>', 'GetTagsRequest$ResourceArn' => '<p>The Amazon Resource Name (ARN) of the resource for which to retrieve tags.</p>', 'PutResourcePolicyRequest$ResourceArn' => '<p>Do not use. For internal use only.</p>', 'PutSchemaVersionMetadataResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) for the schema.</p>', 'RegistryId$RegistryArn' => '<p>Arn of the registry to be updated. One of <code>RegistryArn</code> or <code>RegistryName</code> has to be provided.</p>', 'RegistryListItem$RegistryArn' => '<p>The Amazon Resource Name (ARN) of the registry.</p>', 'RemoveSchemaVersionMetadataResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema.</p>', 'SchemaId$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p>', 'SchemaListItem$SchemaArn' => '<p>The Amazon Resource Name (ARN) for the schema.</p>', 'SchemaVersionListItem$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema.</p>', 'TagResourceRequest$ResourceArn' => '<p>The ARN of the Glue resource to which to add the tags. For more information about Glue resource ARNs, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html#aws-glue-api-regex-aws-glue-arn-id">Glue ARN string pattern</a>.</p>', 'UntagResourceRequest$ResourceArn' => '<p>The Amazon Resource Name (ARN) of the resource from which to remove the tags.</p>', 'UpdateRegistryResponse$RegistryArn' => '<p>The Amazon Resource name (ARN) of the updated registry.</p>', 'UpdateSchemaResponse$SchemaArn' => '<p>The Amazon Resource Name (ARN) of the schema.</p>', ], ], 'GlueSchema' => [ 'base' => '<p>Specifies a user-defined schema when a schema cannot be determined by AWS Glue.</p>', 'refs' => [ 'GlueSchemas$member' => NULL, ], ], 'GlueSchemas' => [ 'base' => NULL, 'refs' => [ 'AthenaConnectorSource$OutputSchemas' => '<p>Specifies the data schema for the custom Athena source.</p>', 'CustomCode$OutputSchemas' => '<p>Specifies the data schema for the custom code transform.</p>', 'JDBCConnectorSource$OutputSchemas' => '<p>Specifies the data schema for the custom JDBC source.</p>', 'JDBCConnectorTarget$OutputSchemas' => '<p>Specifies the data schema for the JDBC target.</p>', 'S3CsvSource$OutputSchemas' => '<p>Specifies the data schema for the S3 CSV source.</p>', 'S3JsonSource$OutputSchemas' => '<p>Specifies the data schema for the S3 JSON source.</p>', 'S3ParquetSource$OutputSchemas' => '<p>Specifies the data schema for the S3 Parquet source.</p>', 'SparkConnectorSource$OutputSchemas' => '<p>Specifies data schema for the custom spark source.</p>', 'SparkConnectorTarget$OutputSchemas' => '<p>Specifies the data schema for the custom spark target.</p>', 'SparkSQL$OutputSchemas' => '<p>Specifies the data schema for the SparkSQL transform.</p>', ], ], 'GlueStudioColumnNameString' => [ 'base' => NULL, 'refs' => [ 'GlueStudioSchemaColumn$Name' => '<p>The name of the column in the Glue Studio schema.</p>', ], ], 'GlueStudioPathList' => [ 'base' => NULL, 'refs' => [ 'Aggregate$Groups' => '<p>Specifies the fields to group by.</p>', 'DropFields$Paths' => '<p>A JSON path to a variable in the data structure.</p>', 'GovernedCatalogTarget$PartitionKeys' => '<p>Specifies native partitioning using a sequence of keys.</p>', 'JoinColumn$Keys' => '<p>The key of the column to be joined.</p>', 'Merge$PrimaryKeys' => '<p>The list of primary key fields to match records from the source and staging dynamic frames.</p>', 'S3CatalogTarget$PartitionKeys' => '<p>Specifies native partitioning using a sequence of keys.</p>', 'S3DirectTarget$PartitionKeys' => '<p>Specifies native partitioning using a sequence of keys.</p>', 'S3GlueParquetTarget$PartitionKeys' => '<p>Specifies native partitioning using a sequence of keys.</p>', 'SelectFields$Paths' => '<p>A JSON path to a variable in the data structure.</p>', 'SplitFields$Paths' => '<p>A JSON path to a variable in the data structure.</p>', ], ], 'GlueStudioSchemaColumn' => [ 'base' => '<p>Specifies a single column in a Glue schema definition.</p>', 'refs' => [ 'GlueStudioSchemaColumnList$member' => NULL, ], ], 'GlueStudioSchemaColumnList' => [ 'base' => NULL, 'refs' => [ 'GlueSchema$Columns' => '<p>Specifies the column definitions that make up a Glue schema.</p>', ], ], 'GlueTable' => [ 'base' => '<p>The database and table in the Glue Data Catalog that is used for input or output data.</p>', 'refs' => [ 'GlueTables$member' => NULL, ], ], 'GlueTables' => [ 'base' => NULL, 'refs' => [ 'CreateMLTransformRequest$InputRecordTables' => '<p>A list of Glue table definitions used by the transform.</p>', 'GetMLTransformResponse$InputRecordTables' => '<p>A list of Glue table definitions used by the transform.</p>', 'MLTransform$InputRecordTables' => '<p>A list of Glue table definitions used by the transform.</p>', ], ], 'GlueVersionString' => [ 'base' => NULL, 'refs' => [ 'CreateDevEndpointRequest$GlueVersion' => '<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Development endpoints that are created without specifying a Glue version default to Glue 0.9.</p> <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>', 'CreateDevEndpointResponse$GlueVersion' => '<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p>', 'CreateJobRequest$GlueVersion' => '<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>', 'CreateMLTransformRequest$GlueVersion' => '<p>This value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue Versions</a> in the developer guide.</p>', 'CreateSessionRequest$GlueVersion' => '<p>The Glue version determines the versions of Apache Spark and Python that Glue supports. The GlueVersion must be greater than 2.0. </p>', 'DevEndpoint$GlueVersion' => '<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Development endpoints that are created without specifying a Glue version default to Glue 0.9.</p> <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>', 'GetMLTransformResponse$GlueVersion' => '<p>This value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue Versions</a> in the developer guide.</p>', 'Job$GlueVersion' => '<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>', 'JobRun$GlueVersion' => '<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>', 'JobUpdate$GlueVersion' => '<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p>', 'MLTransform$GlueVersion' => '<p>This value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue Versions</a> in the developer guide.</p>', 'Session$GlueVersion' => '<p>The Glue version determines the versions of Apache Spark and Python that Glue supports. The GlueVersion must be greater than 2.0.</p>', 'TransformFilterCriteria$GlueVersion' => '<p>This value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue Versions</a> in the developer guide.</p>', 'UpdateMLTransformRequest$GlueVersion' => '<p>This value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue Versions</a> in the developer guide.</p>', ], ], 'GovernedCatalogSource' => [ 'base' => '<p>Specifies the data store in the governed Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$GovernedCatalogSource' => '<p>Specifies a data source in a goverened Data Catalog.</p>', ], ], 'GovernedCatalogTarget' => [ 'base' => '<p>Specifies a data target that writes to Amazon S3 using the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$GovernedCatalogTarget' => '<p>Specifies a data target that writes to a goverened catalog.</p>', ], ], 'GrokClassifier' => [ 'base' => '<p>A classifier that uses <code>grok</code> patterns.</p>', 'refs' => [ 'Classifier$GrokClassifier' => '<p>A classifier that uses <code>grok</code>.</p>', ], ], 'GrokPattern' => [ 'base' => NULL, 'refs' => [ 'CreateGrokClassifierRequest$GrokPattern' => '<p>The grok pattern used by this classifier.</p>', 'GrokClassifier$GrokPattern' => '<p>The grok pattern applied to a data store by this classifier. For more information, see built-in patterns in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html">Writing Custom Classifiers</a>.</p>', 'UpdateGrokClassifierRequest$GrokPattern' => '<p>The grok pattern used by this classifier.</p>', ], ], 'HashString' => [ 'base' => NULL, 'refs' => [ 'CancelMLTaskRunRequest$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'CancelMLTaskRunRequest$TaskRunId' => '<p>A unique identifier for the task run.</p>', 'CancelMLTaskRunResponse$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'CancelMLTaskRunResponse$TaskRunId' => '<p>The unique identifier for the task run.</p>', 'CreateMLTransformResponse$TransformId' => '<p>A unique identifier that is generated for the transform.</p>', 'DeleteMLTransformRequest$TransformId' => '<p>The unique identifier of the transform to delete.</p>', 'DeleteMLTransformResponse$TransformId' => '<p>The unique identifier of the transform that was deleted.</p>', 'DeleteResourcePolicyRequest$PolicyHashCondition' => '<p>The hash value returned when this policy was set.</p>', 'FindMatchesTaskRunProperties$JobId' => '<p>The job ID for the Find Matches task run.</p>', 'FindMatchesTaskRunProperties$JobRunId' => '<p>The job run ID for the Find Matches task run.</p>', 'GetMLTaskRunRequest$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'GetMLTaskRunRequest$TaskRunId' => '<p>The unique identifier of the task run.</p>', 'GetMLTaskRunResponse$TransformId' => '<p>The unique identifier of the task run.</p>', 'GetMLTaskRunResponse$TaskRunId' => '<p>The unique run identifier associated with this run.</p>', 'GetMLTaskRunsRequest$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'GetMLTransformRequest$TransformId' => '<p>The unique identifier of the transform, generated at the time that the transform was created.</p>', 'GetMLTransformResponse$TransformId' => '<p>The unique identifier of the transform, generated at the time that the transform was created.</p>', 'GetResourcePolicyResponse$PolicyHash' => '<p>Contains the hash value associated with this policy.</p>', 'GluePolicy$PolicyHash' => '<p>Contains the hash value associated with this policy.</p>', 'MLTransform$TransformId' => '<p>The unique transform ID that is generated for the machine learning transform. The ID is guaranteed to be unique and does not change.</p>', 'PutResourcePolicyRequest$PolicyHashCondition' => '<p>The hash value returned when the previous policy was set using <code>PutResourcePolicy</code>. Its purpose is to prevent concurrent modifications of a policy. Do not use this parameter if no previous policy has been set.</p>', 'PutResourcePolicyResponse$PolicyHash' => '<p>A hash of the policy that has just been set. This must be included in a subsequent call that overwrites or updates this policy.</p>', 'StartExportLabelsTaskRunRequest$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'StartExportLabelsTaskRunResponse$TaskRunId' => '<p>The unique identifier for the task run.</p>', 'StartImportLabelsTaskRunRequest$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'StartImportLabelsTaskRunResponse$TaskRunId' => '<p>The unique identifier for the task run.</p>', 'StartMLEvaluationTaskRunRequest$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'StartMLEvaluationTaskRunResponse$TaskRunId' => '<p>The unique identifier associated with this run.</p>', 'StartMLLabelingSetGenerationTaskRunRequest$TransformId' => '<p>The unique identifier of the machine learning transform.</p>', 'StartMLLabelingSetGenerationTaskRunResponse$TaskRunId' => '<p>The unique run identifier that is associated with this task run.</p>', 'TaskRun$TransformId' => '<p>The unique identifier for the transform.</p>', 'TaskRun$TaskRunId' => '<p>The unique identifier for this task run.</p>', 'TransformIdList$member' => NULL, 'UpdateMLTransformRequest$TransformId' => '<p>A unique identifier that was generated when the transform was created.</p>', 'UpdateMLTransformResponse$TransformId' => '<p>The unique identifier for the transform that was updated.</p>', ], ], 'IdString' => [ 'base' => NULL, 'refs' => [ 'BatchStopJobRunError$JobRunId' => '<p>The <code>JobRunId</code> of the job run in question.</p>', 'BatchStopJobRunJobRunIdList$member' => NULL, 'BatchStopJobRunSuccessfulSubmission$JobRunId' => '<p>The <code>JobRunId</code> of the job run that was stopped.</p>', 'BlueprintDetails$RunId' => '<p>The run ID for this blueprint.</p>', 'BlueprintRun$RunId' => '<p>The run ID for this blueprint run.</p>', 'GetBlueprintRunRequest$RunId' => '<p>The run ID for the blueprint run you want to retrieve.</p>', 'GetJobRunRequest$RunId' => '<p>The ID of the job run.</p>', 'GetWorkflowRunPropertiesRequest$RunId' => '<p>The ID of the workflow run whose run properties should be returned.</p>', 'GetWorkflowRunRequest$RunId' => '<p>The ID of the workflow run.</p>', 'JobRun$Id' => '<p>The ID of this job run.</p>', 'JobRun$PreviousRunId' => '<p>The ID of the previous run of this job. For example, the <code>JobRunId</code> specified in the <code>StartJobRun</code> action.</p>', 'Predecessor$RunId' => '<p>The job-run ID of the predecessor job run.</p>', 'PutWorkflowRunPropertiesRequest$RunId' => '<p>The ID of the workflow run for which the run properties should be updated.</p>', 'ResumeWorkflowRunRequest$RunId' => '<p>The ID of the workflow run to resume.</p>', 'ResumeWorkflowRunResponse$RunId' => '<p>The new ID assigned to the resumed workflow run. Each resume of a workflow run will have a new run ID.</p>', 'StartBlueprintRunResponse$RunId' => '<p>The run ID for this blueprint run.</p>', 'StartJobRunRequest$JobRunId' => '<p>The ID of a previous <code>JobRun</code> to retry.</p>', 'StartJobRunResponse$JobRunId' => '<p>The ID assigned to this job run.</p>', 'StartWorkflowRunResponse$RunId' => '<p>An Id for the new run.</p>', 'StopWorkflowRunRequest$RunId' => '<p>The ID of the workflow run to stop.</p>', 'Trigger$Id' => '<p>Reserved for future use.</p>', 'WorkflowRun$WorkflowRunId' => '<p>The ID of this workflow run.</p>', 'WorkflowRun$PreviousRunId' => '<p>The ID of the previous workflow run.</p>', 'WorkflowRunProperties$key' => NULL, ], ], 'IdempotentParameterMismatchException' => [ 'base' => '<p>The same unique identifier was associated with two different records.</p>', 'refs' => [], ], 'IllegalBlueprintStateException' => [ 'base' => '<p>The blueprint is in an invalid state to perform a requested operation.</p>', 'refs' => [], ], 'IllegalSessionStateException' => [ 'base' => '<p>The session is in an invalid state to perform a requested operation.</p>', 'refs' => [], ], 'IllegalWorkflowStateException' => [ 'base' => '<p>The workflow is in an invalid state to perform a requested operation.</p>', 'refs' => [], ], 'ImportCatalogToGlueRequest' => [ 'base' => NULL, 'refs' => [], ], 'ImportCatalogToGlueResponse' => [ 'base' => NULL, 'refs' => [], ], 'ImportLabelsTaskRunProperties' => [ 'base' => '<p>Specifies configuration properties for an importing labels task run.</p>', 'refs' => [ 'TaskRunProperties$ImportLabelsTaskRunProperties' => '<p>The configuration properties for an importing labels task run.</p>', ], ], 'Integer' => [ 'base' => NULL, 'refs' => [ 'CodeGenNode$LineNumber' => '<p>The line number of the node.</p>', 'DecimalNumber$Scale' => '<p>The scale that determines where the decimal point falls in the unscaled value.</p>', 'StorageDescriptor$NumberOfBuckets' => '<p>Must be specified if the table contains any dimension columns.</p>', ], ], 'IntegerFlag' => [ 'base' => NULL, 'refs' => [ 'Order$SortOrder' => '<p>Indicates that the column is sorted in ascending order (<code>== 1</code>), or in descending order (<code>==0</code>).</p>', ], ], 'IntegerValue' => [ 'base' => NULL, 'refs' => [ 'CancelStatementRequest$Id' => '<p>The ID of the statement to be cancelled.</p>', 'CreateDevEndpointRequest$NumberOfNodes' => '<p>The number of Glue Data Processing Units (DPUs) to allocate to this <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$ZeppelinRemoteSparkInterpreterPort' => '<p>The Apache Zeppelin port for the remote Apache Spark interpreter.</p>', 'CreateDevEndpointResponse$NumberOfNodes' => '<p>The number of Glue Data Processing Units (DPUs) allocated to this DevEndpoint.</p>', 'CreateJobRequest$AllocatedCapacity' => '<p>This parameter is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of Glue data processing units (DPUs) to allocate to this Job. You can allocate a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p>', 'DevEndpoint$ZeppelinRemoteSparkInterpreterPort' => '<p>The Apache Zeppelin port for the remote Apache Spark interpreter.</p>', 'DevEndpoint$NumberOfNodes' => '<p>The number of Glue Data Processing Units (DPUs) allocated to this <code>DevEndpoint</code>.</p>', 'GetStatementRequest$Id' => '<p>The Id of the statement.</p>', 'Job$AllocatedCapacity' => '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of Glue data processing units (DPUs) allocated to runs of this job. You can allocate a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p> <p/>', 'JobBookmarkEntry$Version' => '<p>The version of the job.</p>', 'JobBookmarkEntry$Run' => '<p>The run ID number.</p>', 'JobBookmarkEntry$Attempt' => '<p>The attempt ID number.</p>', 'JobRun$AllocatedCapacity' => '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p>', 'JobUpdate$AllocatedCapacity' => '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of Glue data processing units (DPUs) to allocate to this job. You can allocate a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p>', 'RunStatementResponse$Id' => '<p>Returns the Id of the statement that was run.</p>', 'StartJobRunRequest$AllocatedCapacity' => '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of Glue data processing units (DPUs) to allocate to this JobRun. You can allocate a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p>', 'Statement$Id' => '<p>The ID of the statement.</p>', 'StatementOutput$ExecutionCount' => '<p>The execution count of the output.</p>', 'WorkflowRunStatistics$TotalActions' => '<p>Total number of Actions in the workflow run.</p>', 'WorkflowRunStatistics$TimeoutActions' => '<p>Total number of Actions that timed out.</p>', 'WorkflowRunStatistics$FailedActions' => '<p>Total number of Actions that have failed.</p>', 'WorkflowRunStatistics$StoppedActions' => '<p>Total number of Actions that have stopped.</p>', 'WorkflowRunStatistics$SucceededActions' => '<p>Total number of Actions that have succeeded.</p>', 'WorkflowRunStatistics$RunningActions' => '<p>Total number Actions in running state.</p>', 'WorkflowRunStatistics$ErroredActions' => '<p>Indicates the count of job runs in the ERROR state in the workflow run.</p>', 'WorkflowRunStatistics$WaitingActions' => '<p>Indicates the count of job runs in WAITING state in the workflow run.</p>', ], ], 'InternalServiceException' => [ 'base' => '<p>An internal service error occurred.</p>', 'refs' => [], ], 'InvalidInputException' => [ 'base' => '<p>The input provided was not valid.</p>', 'refs' => [], ], 'InvalidStateException' => [ 'base' => '<p>An error that indicates your data is in an invalid state.</p>', 'refs' => [], ], 'IsVersionValid' => [ 'base' => NULL, 'refs' => [ 'CheckSchemaVersionValidityResponse$Valid' => '<p>Return true, if the schema is valid and false otherwise.</p>', ], ], 'JDBCConnectorOptions' => [ 'base' => '<p>Additional connection options for the connector.</p>', 'refs' => [ 'JDBCConnectorSource$AdditionalOptions' => '<p>Additional connection options for the connector.</p>', ], ], 'JDBCConnectorSource' => [ 'base' => '<p>Specifies a connector to a JDBC data source.</p>', 'refs' => [ 'CodeGenConfigurationNode$JDBCConnectorSource' => '<p>Specifies a connector to a JDBC data source.</p>', ], ], 'JDBCConnectorTarget' => [ 'base' => '<p>Specifies a data target that writes to Amazon S3 in Apache Parquet columnar storage.</p>', 'refs' => [ 'CodeGenConfigurationNode$JDBCConnectorTarget' => '<p>Specifies a data target that writes to Amazon S3 in Apache Parquet columnar storage.</p>', ], ], 'JDBCDataType' => [ 'base' => NULL, 'refs' => [ 'JDBCDataTypeMapping$key' => NULL, ], ], 'JDBCDataTypeMapping' => [ 'base' => NULL, 'refs' => [ 'JDBCConnectorOptions$DataTypeMapping' => '<p>Custom data type mapping that builds a mapping from a JDBC data type to an Glue data type. For example, the option <code>"dataTypeMapping":{"FLOAT":"STRING"}</code> maps data fields of JDBC type <code>FLOAT</code> into the Java <code>String</code> type by calling the <code>ResultSet.getString()</code> method of the driver, and uses it to build the Glue record. The <code>ResultSet</code> object is implemented by each driver, so the behavior is specific to the driver you use. Refer to the documentation for your JDBC driver to understand how the driver performs the conversions.</p>', ], ], 'JdbcTarget' => [ 'base' => '<p>Specifies a JDBC data store to crawl.</p>', 'refs' => [ 'JdbcTargetList$member' => NULL, ], ], 'JdbcTargetList' => [ 'base' => NULL, 'refs' => [ 'CrawlerTargets$JdbcTargets' => '<p>Specifies JDBC targets.</p>', ], ], 'Job' => [ 'base' => '<p>Specifies a job definition.</p>', 'refs' => [ 'GetJobResponse$Job' => '<p>The requested job definition.</p>', 'JobList$member' => NULL, ], ], 'JobBookmarkEntry' => [ 'base' => '<p>Defines a point that a job can resume processing.</p>', 'refs' => [ 'GetJobBookmarkResponse$JobBookmarkEntry' => '<p>A structure that defines a point that a job can resume processing.</p>', 'ResetJobBookmarkResponse$JobBookmarkEntry' => '<p>The reset bookmark entry.</p>', ], ], 'JobBookmarksEncryption' => [ 'base' => '<p>Specifies how job bookmark data should be encrypted.</p>', 'refs' => [ 'EncryptionConfiguration$JobBookmarksEncryption' => '<p>The encryption configuration for job bookmarks.</p>', ], ], 'JobBookmarksEncryptionMode' => [ 'base' => NULL, 'refs' => [ 'JobBookmarksEncryption$JobBookmarksEncryptionMode' => '<p>The encryption mode to use for job bookmarks data.</p>', ], ], 'JobCommand' => [ 'base' => '<p>Specifies code that runs when a job is run.</p>', 'refs' => [ 'CreateJobRequest$Command' => '<p>The <code>JobCommand</code> that runs this job.</p>', 'Job$Command' => '<p>The <code>JobCommand</code> that runs this job.</p>', 'JobUpdate$Command' => '<p>The <code>JobCommand</code> that runs this job (required).</p>', ], ], 'JobList' => [ 'base' => NULL, 'refs' => [ 'BatchGetJobsResponse$Jobs' => '<p>A list of job definitions.</p>', 'GetJobsResponse$Jobs' => '<p>A list of job definitions.</p>', ], ], 'JobName' => [ 'base' => NULL, 'refs' => [ 'GetJobBookmarkRequest$JobName' => '<p>The name of the job in question.</p>', 'JobBookmarkEntry$JobName' => '<p>The name of the job in question.</p>', 'ResetJobBookmarkRequest$JobName' => '<p>The name of the job in question.</p>', ], ], 'JobNameList' => [ 'base' => NULL, 'refs' => [ 'BatchGetJobsRequest$JobNames' => '<p>A list of job names, which might be the names returned from the <code>ListJobs</code> operation.</p>', 'BatchGetJobsResponse$JobsNotFound' => '<p>A list of names of jobs not found.</p>', 'ListJobsResponse$JobNames' => '<p>The names of all jobs in the account, or the jobs with the specified tags.</p>', ], ], 'JobNodeDetails' => [ 'base' => '<p>The details of a Job node present in the workflow.</p>', 'refs' => [ 'Node$JobDetails' => '<p>Details of the Job when the node represents a Job.</p>', ], ], 'JobRun' => [ 'base' => '<p>Contains information about a job run.</p>', 'refs' => [ 'GetJobRunResponse$JobRun' => '<p>The requested job-run metadata.</p>', 'JobRunList$member' => NULL, ], ], 'JobRunList' => [ 'base' => NULL, 'refs' => [ 'GetJobRunsResponse$JobRuns' => '<p>A list of job-run metadata objects.</p>', 'JobNodeDetails$JobRuns' => '<p>The information for the job runs represented by the job node.</p>', ], ], 'JobRunState' => [ 'base' => NULL, 'refs' => [ 'Condition$State' => '<p>The condition state. Currently, the only job states that a trigger can listen for are <code>SUCCEEDED</code>, <code>STOPPED</code>, <code>FAILED</code>, and <code>TIMEOUT</code>. The only crawler states that a trigger can listen for are <code>SUCCEEDED</code>, <code>FAILED</code>, and <code>CANCELLED</code>.</p>', 'JobRun$JobRunState' => '<p>The current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see <a href="https://docs.aws.amazon.com/glue/latest/dg/job-run-statuses.html">Glue Job Run Statuses</a>.</p>', ], ], 'JobUpdate' => [ 'base' => '<p>Specifies information used to update an existing job definition. The previous job definition is completely overwritten by this information.</p>', 'refs' => [ 'UpdateJobRequest$JobUpdate' => '<p>Specifies the values with which to update the job definition. Unspecified configuration is removed or reset to default values.</p>', ], ], 'Join' => [ 'base' => '<p>Specifies a transform that joins two datasets into one dataset using a comparison phrase on the specified data property keys. You can use inner, outer, left, right, left semi, and left anti joins.</p>', 'refs' => [ 'CodeGenConfigurationNode$Join' => '<p>Specifies a transform that joins two datasets into one dataset using a comparison phrase on the specified data property keys. You can use inner, outer, left, right, left semi, and left anti joins.</p>', ], ], 'JoinColumn' => [ 'base' => '<p>Specifies a column to be joined.</p>', 'refs' => [ 'JoinColumns$member' => NULL, ], ], 'JoinColumns' => [ 'base' => NULL, 'refs' => [ 'Join$Columns' => '<p>A list of the two columns to be joined.</p>', ], ], 'JoinType' => [ 'base' => NULL, 'refs' => [ 'Join$JoinType' => '<p>Specifies the type of join to be performed on the datasets.</p>', ], ], 'JsonClassifier' => [ 'base' => '<p>A classifier for <code>JSON</code> content.</p>', 'refs' => [ 'Classifier$JsonClassifier' => '<p>A classifier for JSON content.</p>', ], ], 'JsonPath' => [ 'base' => NULL, 'refs' => [ 'CreateJsonClassifierRequest$JsonPath' => '<p>A <code>JsonPath</code> string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing JsonPath Custom Classifiers</a>.</p>', 'JsonClassifier$JsonPath' => '<p>A <code>JsonPath</code> string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing JsonPath Custom Classifiers</a>.</p>', 'UpdateJsonClassifierRequest$JsonPath' => '<p>A <code>JsonPath</code> string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing JsonPath Custom Classifiers</a>.</p>', ], ], 'JsonValue' => [ 'base' => NULL, 'refs' => [ 'JobBookmarkEntry$JobBookmark' => '<p>The bookmark itself.</p>', ], ], 'KafkaStreamingSourceOptions' => [ 'base' => '<p>Additional options for streaming.</p>', 'refs' => [ 'CatalogKafkaSource$StreamingOptions' => '<p>Specifies the streaming options.</p>', 'DirectKafkaSource$StreamingOptions' => '<p>Specifies the streaming options.</p>', ], ], 'KeyList' => [ 'base' => NULL, 'refs' => [ 'PartitionIndex$Keys' => '<p>The keys for the partition index.</p>', ], ], 'KeySchemaElement' => [ 'base' => '<p>A partition key pair consisting of a name and a type.</p>', 'refs' => [ 'KeySchemaElementList$member' => NULL, ], ], 'KeySchemaElementList' => [ 'base' => NULL, 'refs' => [ 'PartitionIndexDescriptor$Keys' => '<p>A list of one or more keys, as <code>KeySchemaElement</code> structures, for the partition index.</p>', ], ], 'KeyString' => [ 'base' => NULL, 'refs' => [ 'ParametersMap$key' => NULL, ], ], 'KinesisStreamingSourceOptions' => [ 'base' => '<p>Additional options for the Amazon Kinesis streaming data source.</p>', 'refs' => [ 'CatalogKinesisSource$StreamingOptions' => '<p>Additional options for the Kinesis streaming data source.</p>', 'DirectKinesisSource$StreamingOptions' => '<p>Additional options for the Kinesis streaming data source.</p>', ], ], 'KmsKeyArn' => [ 'base' => NULL, 'refs' => [ 'CloudWatchEncryption$KmsKeyArn' => '<p>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</p>', 'JobBookmarksEncryption$KmsKeyArn' => '<p>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</p>', 'S3Encryption$KmsKeyArn' => '<p>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</p>', ], ], 'LabelCount' => [ 'base' => NULL, 'refs' => [ 'GetMLTransformResponse$LabelCount' => '<p>The number of labels available for this transform.</p>', 'MLTransform$LabelCount' => '<p>A count identifier for the labeling files generated by Glue for this transform. As you create a better transform, you can iteratively download, label, and upload the labeling file.</p>', ], ], 'LabelingSetGenerationTaskRunProperties' => [ 'base' => '<p>Specifies configuration properties for a labeling set generation task run.</p>', 'refs' => [ 'TaskRunProperties$LabelingSetGenerationTaskRunProperties' => '<p>The configuration properties for a labeling set generation task run.</p>', ], ], 'LakeFormationConfiguration' => [ 'base' => '<p>Specifies Lake Formation configuration settings for the crawler.</p>', 'refs' => [ 'Crawler$LakeFormationConfiguration' => '<p>Specifies whether the crawler should use Lake Formation credentials for the crawler instead of the IAM role credentials.</p>', 'CreateCrawlerRequest$LakeFormationConfiguration' => '<p>Specifies Lake Formation configuration settings for the crawler.</p>', 'UpdateCrawlerRequest$LakeFormationConfiguration' => '<p>Specifies Lake Formation configuration settings for the crawler.</p>', ], ], 'Language' => [ 'base' => NULL, 'refs' => [ 'CreateScriptRequest$Language' => '<p>The programming language of the resulting code from the DAG.</p>', 'GetPlanRequest$Language' => '<p>The programming language of the code to perform the mapping.</p>', ], ], 'LastActiveDefinition' => [ 'base' => '<p>When there are multiple versions of a blueprint and the latest version has some errors, this attribute indicates the last successful blueprint definition that is available with the service.</p>', 'refs' => [ 'Blueprint$LastActiveDefinition' => '<p>When there are multiple versions of a blueprint and the latest version has some errors, this attribute indicates the last successful blueprint definition that is available with the service.</p>', ], ], 'LastCrawlInfo' => [ 'base' => '<p>Status and error information about the most recent crawl.</p>', 'refs' => [ 'Crawler$LastCrawl' => '<p>The status of the last crawl, and potentially error information if an error occurred.</p>', ], ], 'LastCrawlStatus' => [ 'base' => NULL, 'refs' => [ 'LastCrawlInfo$Status' => '<p>Status of the last crawl.</p>', ], ], 'LatestSchemaVersionBoolean' => [ 'base' => NULL, 'refs' => [ 'PutSchemaVersionMetadataResponse$LatestVersion' => '<p>The latest version of the schema.</p>', 'RemoveSchemaVersionMetadataResponse$LatestVersion' => '<p>The latest version of the schema.</p>', 'SchemaVersionNumber$LatestVersion' => '<p>The latest version available for the schema.</p>', ], ], 'LimitedPathList' => [ 'base' => NULL, 'refs' => [ 'DropDuplicates$Columns' => '<p>The name of the columns to be merged or removed if repeating.</p>', ], ], 'LimitedStringList' => [ 'base' => NULL, 'refs' => [ 'LimitedPathList$member' => NULL, ], ], 'LineageConfiguration' => [ 'base' => '<p>Specifies data lineage configuration settings for the crawler.</p>', 'refs' => [ 'Crawler$LineageConfiguration' => '<p>A configuration that specifies whether data lineage is enabled for the crawler.</p>', 'CreateCrawlerRequest$LineageConfiguration' => '<p>Specifies data lineage configuration settings for the crawler.</p>', 'UpdateCrawlerRequest$LineageConfiguration' => '<p>Specifies data lineage configuration settings for the crawler.</p>', ], ], 'ListBlueprintsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListBlueprintsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListCrawlersRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListCrawlersResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListCrawlsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListCrawlsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListCustomEntityTypesRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListCustomEntityTypesResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListDevEndpointsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListDevEndpointsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListJobsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListJobsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListMLTransformsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListMLTransformsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListRegistriesInput' => [ 'base' => NULL, 'refs' => [], ], 'ListRegistriesResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListSchemaVersionsInput' => [ 'base' => NULL, 'refs' => [], ], 'ListSchemaVersionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListSchemasInput' => [ 'base' => NULL, 'refs' => [], ], 'ListSchemasResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListSessionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListSessionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListStatementsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListStatementsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListTriggersRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListTriggersResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListWorkflowsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListWorkflowsResponse' => [ 'base' => NULL, 'refs' => [], ], 'Location' => [ 'base' => '<p>The location of resources.</p>', 'refs' => [ 'GetMappingRequest$Location' => '<p>Parameters for the mapping.</p>', 'GetPlanRequest$Location' => '<p>The parameters for the mapping.</p>', ], ], 'LocationMap' => [ 'base' => NULL, 'refs' => [ 'SkewedInfo$SkewedColumnValueLocationMaps' => '<p>A mapping of skewed values to the columns that contain them.</p>', ], ], 'LocationString' => [ 'base' => NULL, 'refs' => [ 'LocationStringList$member' => NULL, 'StorageDescriptor$Location' => '<p>The physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.</p>', ], ], 'LocationStringList' => [ 'base' => NULL, 'refs' => [ 'StorageDescriptor$AdditionalLocations' => '<p>A list of locations that point to the path where a Delta table is located.</p>', ], ], 'LogGroup' => [ 'base' => NULL, 'refs' => [ 'Crawl$LogGroup' => '<p>The log group associated with the crawl.</p>', 'CrawlerHistory$LogGroup' => '<p>The log group associated with the crawl.</p>', 'LastCrawlInfo$LogGroup' => '<p>The log group for the last crawl.</p>', ], ], 'LogStream' => [ 'base' => NULL, 'refs' => [ 'Crawl$LogStream' => '<p>The log stream associated with the crawl.</p>', 'CrawlerHistory$LogStream' => '<p>The log stream associated with the crawl.</p>', 'LastCrawlInfo$LogStream' => '<p>The log stream for the last crawl.</p>', ], ], 'Logical' => [ 'base' => NULL, 'refs' => [ 'Predicate$Logical' => '<p>An optional field if only one condition is listed. If multiple conditions are listed, then this field is required.</p>', ], ], 'LogicalOperator' => [ 'base' => NULL, 'refs' => [ 'Condition$LogicalOperator' => '<p>A logical operator.</p>', ], ], 'Long' => [ 'base' => NULL, 'refs' => [ 'LongColumnStatisticsData$MinimumValue' => '<p>The lowest value in the column.</p>', 'LongColumnStatisticsData$MaximumValue' => '<p>The highest value in the column.</p>', ], ], 'LongColumnStatisticsData' => [ 'base' => '<p>Defines column statistics supported for integer data columns.</p>', 'refs' => [ 'ColumnStatisticsData$LongColumnStatisticsData' => '<p>Long column statistics data.</p>', ], ], 'LongValue' => [ 'base' => NULL, 'refs' => [ 'Statement$StartedOn' => '<p>The unix time and date that the job definition was started.</p>', 'Statement$CompletedOn' => '<p>The unix time and date that the job definition was completed.</p>', ], ], 'MLTransform' => [ 'base' => '<p>A structure for a machine learning transform.</p>', 'refs' => [ 'TransformList$member' => NULL, ], ], 'MLTransformNotReadyException' => [ 'base' => '<p>The machine learning transform is not ready to run.</p>', 'refs' => [], ], 'MLUserDataEncryption' => [ 'base' => '<p>The encryption-at-rest settings of the transform that apply to accessing user data.</p>', 'refs' => [ 'TransformEncryption$MlUserDataEncryption' => '<p>An <code>MLUserDataEncryption</code> object containing the encryption mode and customer-provided KMS key ID.</p>', ], ], 'MLUserDataEncryptionModeString' => [ 'base' => NULL, 'refs' => [ 'MLUserDataEncryption$MlUserDataEncryptionMode' => '<p>The encryption mode applied to user data. Valid values are:</p> <ul> <li> <p>DISABLED: encryption is disabled</p> </li> <li> <p>SSEKMS: use of server-side encryption with Key Management Service (SSE-KMS) for user data stored in Amazon S3.</p> </li> </ul>', ], ], 'ManyInputs' => [ 'base' => NULL, 'refs' => [ 'CustomCode$Inputs' => '<p>The data inputs identified by their node names.</p>', 'SparkSQL$Inputs' => '<p>The data inputs identified by their node names. You can associate a table name with each input node to use in the SQL query. The name you choose must meet the Spark SQL naming restrictions.</p>', ], ], 'MapValue' => [ 'base' => NULL, 'refs' => [ 'CreateDevEndpointRequest$Arguments' => '<p>A map of arguments used to configure the <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$Arguments' => '<p>The map of arguments used to configure this <code>DevEndpoint</code>.</p> <p>Valid arguments are:</p> <ul> <li> <p> <code>"--enable-glue-datacatalog": ""</code> </p> </li> </ul> <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>', 'DevEndpoint$Arguments' => '<p>A map of arguments used to configure the <code>DevEndpoint</code>.</p> <p>Valid arguments are:</p> <ul> <li> <p> <code>"--enable-glue-datacatalog": ""</code> </p> </li> </ul> <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>', 'UpdateDevEndpointRequest$AddArguments' => '<p>The map of arguments to add the map of arguments used to configure the <code>DevEndpoint</code>.</p> <p>Valid arguments are:</p> <ul> <li> <p> <code>"--enable-glue-datacatalog": ""</code> </p> </li> </ul> <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>', ], ], 'Mapping' => [ 'base' => '<p>Specifies the mapping of data property keys.</p>', 'refs' => [ 'Mappings$member' => NULL, ], ], 'MappingEntry' => [ 'base' => '<p>Defines a mapping.</p>', 'refs' => [ 'MappingList$member' => NULL, ], ], 'MappingList' => [ 'base' => NULL, 'refs' => [ 'GetMappingResponse$Mapping' => '<p>A list of mappings to the specified targets.</p>', 'GetPlanRequest$Mapping' => '<p>The list of mappings from a source table to target tables.</p>', ], ], 'Mappings' => [ 'base' => NULL, 'refs' => [ 'ApplyMapping$Mapping' => '<p>Specifies the mapping of data property keys in the data source to data property keys in the data target.</p>', 'Mapping$Children' => '<p>Only applicable to nested data structures. If you want to change the parent structure, but also one of its children, you can fill out this data strucutre. It is also <code>Mapping</code>, but its <code>FromPath</code> will be the parent\'s <code>FromPath</code> plus the <code>FromPath</code> from this structure.</p> <p>For the children part, suppose you have the structure:</p> <p> <code>{ "FromPath": "OuterStructure", "ToKey": "OuterStructure", "ToType": "Struct", "Dropped": false, "Chidlren": [{ "FromPath": "inner", "ToKey": "inner", "ToType": "Double", "Dropped": false, }] }</code> </p> <p>You can specify a <code>Mapping</code> that looks like:</p> <p> <code>{ "FromPath": "OuterStructure", "ToKey": "OuterStructure", "ToType": "Struct", "Dropped": false, "Chidlren": [{ "FromPath": "inner", "ToKey": "inner", "ToType": "Double", "Dropped": false, }] }</code> </p>', ], ], 'MaskValue' => [ 'base' => NULL, 'refs' => [ 'PIIDetection$MaskValue' => '<p>Indicates the value that will replace the detected entity. </p>', ], ], 'MatchCriteria' => [ 'base' => NULL, 'refs' => [ 'Connection$MatchCriteria' => '<p>A list of criteria that can be used in selecting this connection.</p>', 'ConnectionInput$MatchCriteria' => '<p>A list of criteria that can be used in selecting this connection.</p>', 'GetConnectionsFilter$MatchCriteria' => '<p>A criteria string that must match the criteria recorded in the connection definition for that connection definition to be returned.</p>', ], ], 'MaxConcurrentRuns' => [ 'base' => NULL, 'refs' => [ 'ExecutionProperty$MaxConcurrentRuns' => '<p>The maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.</p>', ], ], 'MaxResultsNumber' => [ 'base' => NULL, 'refs' => [ 'ListRegistriesInput$MaxResults' => '<p>Maximum number of results required per page. If the value is not supplied, this will be defaulted to 25 per page.</p>', 'ListSchemaVersionsInput$MaxResults' => '<p>Maximum number of results required per page. If the value is not supplied, this will be defaulted to 25 per page.</p>', 'ListSchemasInput$MaxResults' => '<p>Maximum number of results required per page. If the value is not supplied, this will be defaulted to 25 per page.</p>', ], ], 'MaxRetries' => [ 'base' => NULL, 'refs' => [ 'CreateJobRequest$MaxRetries' => '<p>The maximum number of times to retry this job if it fails.</p>', 'Job$MaxRetries' => '<p>The maximum number of times to retry this job after a JobRun fails.</p>', 'JobUpdate$MaxRetries' => '<p>The maximum number of times to retry this job if it fails.</p>', ], ], 'Merge' => [ 'base' => '<p>Specifies a transform that merges a <code>DynamicFrame</code> with a staging <code>DynamicFrame</code> based on the specified primary keys to identify records. Duplicate records (records with the same primary keys) are not de-duplicated. </p>', 'refs' => [ 'CodeGenConfigurationNode$Merge' => '<p>Specifies a transform that merges a <code>DynamicFrame</code> with a staging <code>DynamicFrame</code> based on the specified primary keys to identify records. Duplicate records (records with the same primary keys) are not de-duplicated. </p>', ], ], 'MessagePrefix' => [ 'base' => NULL, 'refs' => [ 'CrawlerHistory$MessagePrefix' => '<p>The prefix for a CloudWatch message about this crawl.</p>', 'LastCrawlInfo$MessagePrefix' => '<p>The prefix for a message about this crawl.</p>', ], ], 'MessageString' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$Message' => '<p>A message describing the problem.</p>', 'AlreadyExistsException$Message' => '<p>A message describing the problem.</p>', 'BlueprintRun$ErrorMessage' => '<p>Indicates any errors that are seen while running the blueprint.</p>', 'BlueprintRun$RollbackErrorMessage' => '<p>If there are any errors while creating the entities of a workflow, we try to roll back the created entities until that point and delete them. This attribute indicates the errors seen while trying to delete the entities that are created.</p>', 'ConcurrentModificationException$Message' => '<p>A message describing the problem.</p>', 'ConcurrentRunsExceededException$Message' => '<p>A message describing the problem.</p>', 'ConditionCheckFailureException$Message' => '<p>A message describing the problem.</p>', 'ConflictException$Message' => '<p>A message describing the problem.</p>', 'CrawlerNotRunningException$Message' => '<p>A message describing the problem.</p>', 'CrawlerRunningException$Message' => '<p>A message describing the problem.</p>', 'CrawlerStoppingException$Message' => '<p>A message describing the problem.</p>', 'EntityNotFoundException$Message' => '<p>A message describing the problem.</p>', 'GlueEncryptionException$Message' => '<p>The message describing the problem.</p>', 'IdempotentParameterMismatchException$Message' => '<p>A message describing the problem.</p>', 'IllegalBlueprintStateException$Message' => '<p>A message describing the problem.</p>', 'IllegalSessionStateException$Message' => '<p>A message describing the problem.</p>', 'IllegalWorkflowStateException$Message' => '<p>A message describing the problem.</p>', 'InternalServiceException$Message' => '<p>A message describing the problem.</p>', 'InvalidInputException$Message' => '<p>A message describing the problem.</p>', 'InvalidStateException$Message' => '<p>A message describing the problem.</p>', 'MLTransformNotReadyException$Message' => '<p>A message describing the problem.</p>', 'NoScheduleException$Message' => '<p>A message describing the problem.</p>', 'OperationTimeoutException$Message' => '<p>A message describing the problem.</p>', 'PermissionTypeMismatchException$Message' => NULL, 'ResourceNotReadyException$Message' => '<p>A message describing the problem.</p>', 'ResourceNumberLimitExceededException$Message' => '<p>A message describing the problem.</p>', 'SchedulerNotRunningException$Message' => '<p>A message describing the problem.</p>', 'SchedulerRunningException$Message' => '<p>A message describing the problem.</p>', 'SchedulerTransitioningException$Message' => '<p>A message describing the problem.</p>', 'ValidationException$Message' => '<p>A message describing the problem.</p>', 'VersionMismatchException$Message' => '<p>A message describing the problem.</p>', ], ], 'MetadataInfo' => [ 'base' => '<p>A structure containing metadata information for a schema version.</p>', 'refs' => [ 'MetadataInfoMap$value' => NULL, ], ], 'MetadataInfoMap' => [ 'base' => NULL, 'refs' => [ 'QuerySchemaVersionMetadataResponse$MetadataInfoMap' => '<p>A map of a metadata key and associated values.</p>', ], ], 'MetadataKeyString' => [ 'base' => NULL, 'refs' => [ 'MetadataInfoMap$key' => NULL, 'MetadataKeyValuePair$MetadataKey' => '<p>A metadata key.</p>', 'PutSchemaVersionMetadataResponse$MetadataKey' => '<p>The metadata key.</p>', 'RemoveSchemaVersionMetadataResponse$MetadataKey' => '<p>The metadata key.</p>', ], ], 'MetadataKeyValuePair' => [ 'base' => '<p>A structure containing a key value pair for metadata.</p>', 'refs' => [ 'MetadataList$member' => NULL, 'PutSchemaVersionMetadataInput$MetadataKeyValue' => '<p>The metadata key\'s corresponding value.</p>', 'RemoveSchemaVersionMetadataInput$MetadataKeyValue' => '<p>The value of the metadata key.</p>', ], ], 'MetadataList' => [ 'base' => NULL, 'refs' => [ 'QuerySchemaVersionMetadataInput$MetadataList' => '<p>Search key-value pairs for metadata, if they are not provided all the metadata information will be fetched.</p>', ], ], 'MetadataValueString' => [ 'base' => NULL, 'refs' => [ 'MetadataInfo$MetadataValue' => '<p>The metadata key’s corresponding value.</p>', 'MetadataKeyValuePair$MetadataValue' => '<p>A metadata key’s corresponding value.</p>', 'OtherMetadataValueListItem$MetadataValue' => '<p>The metadata key’s corresponding value for the other metadata belonging to the same metadata key.</p>', 'PutSchemaVersionMetadataResponse$MetadataValue' => '<p>The value of the metadata key.</p>', 'RemoveSchemaVersionMetadataResponse$MetadataValue' => '<p>The value of the metadata key.</p>', ], ], 'MicrosoftSQLServerCatalogSource' => [ 'base' => '<p>Specifies a Microsoft SQL server data source in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$MicrosoftSQLServerCatalogSource' => '<p>Specifies a Microsoft SQL server data source in the Glue Data Catalog.</p>', ], ], 'MicrosoftSQLServerCatalogTarget' => [ 'base' => '<p>Specifies a target that uses Microsoft SQL.</p>', 'refs' => [ 'CodeGenConfigurationNode$MicrosoftSQLServerCatalogTarget' => '<p>Specifies a target that uses Microsoft SQL.</p>', ], ], 'MillisecondsCount' => [ 'base' => NULL, 'refs' => [ 'Crawler$CrawlElapsedTime' => '<p>If the crawler is running, contains the total time elapsed since the last crawl began.</p>', ], ], 'MongoDBTarget' => [ 'base' => '<p>Specifies an Amazon DocumentDB or MongoDB data store to crawl.</p>', 'refs' => [ 'MongoDBTargetList$member' => NULL, ], ], 'MongoDBTargetList' => [ 'base' => NULL, 'refs' => [ 'CrawlerTargets$MongoDBTargets' => '<p>Specifies Amazon DocumentDB or MongoDB targets.</p>', ], ], 'MySQLCatalogSource' => [ 'base' => '<p>Specifies a MySQL data source in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$MySQLCatalogSource' => '<p>Specifies a MySQL data source in the Glue Data Catalog.</p>', ], ], 'MySQLCatalogTarget' => [ 'base' => '<p>Specifies a target that uses MySQL.</p>', 'refs' => [ 'CodeGenConfigurationNode$MySQLCatalogTarget' => '<p>Specifies a target that uses MySQL.</p>', ], ], 'NameString' => [ 'base' => NULL, 'refs' => [ 'Action$JobName' => '<p>The name of a job to be run.</p>', 'Action$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this action.</p>', 'Action$CrawlerName' => '<p>The name of the crawler to be used with this action.</p>', 'BatchCreatePartitionRequest$DatabaseName' => '<p>The name of the metadata database in which the partition is to be created.</p>', 'BatchCreatePartitionRequest$TableName' => '<p>The name of the metadata table in which the partition is to be created.</p>', 'BatchDeletePartitionRequest$DatabaseName' => '<p>The name of the catalog database in which the table in question resides.</p>', 'BatchDeletePartitionRequest$TableName' => '<p>The name of the table that contains the partitions to be deleted.</p>', 'BatchDeleteTableNameList$member' => NULL, 'BatchDeleteTableRequest$DatabaseName' => '<p>The name of the catalog database in which the tables to delete reside. For Hive compatibility, this name is entirely lowercase.</p>', 'BatchDeleteTableVersionRequest$DatabaseName' => '<p>The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.</p>', 'BatchDeleteTableVersionRequest$TableName' => '<p>The name of the table. For Hive compatibility, this name is entirely lowercase.</p>', 'BatchGetPartitionRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'BatchGetPartitionRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'BatchStopJobRunError$JobName' => '<p>The name of the job definition that is used in the job run in question.</p>', 'BatchStopJobRunRequest$JobName' => '<p>The name of the job definition for which to stop job runs.</p>', 'BatchStopJobRunSuccessfulSubmission$JobName' => '<p>The name of the job definition used in the job run that was stopped.</p>', 'BatchUpdatePartitionRequest$DatabaseName' => '<p>The name of the metadata database in which the partition is to be updated.</p>', 'BatchUpdatePartitionRequest$TableName' => '<p>The name of the metadata table in which the partition is to be updated.</p>', 'BlueprintRun$WorkflowName' => '<p>The name of a workflow that is created as a result of a successful blueprint run. If a blueprint run has an error, there will not be a workflow created.</p>', 'CancelStatementRequest$SessionId' => '<p>The Session ID of the statement to be cancelled.</p>', 'CatalogEntry$DatabaseName' => '<p>The database in which the table metadata resides.</p>', 'CatalogEntry$TableName' => '<p>The name of the table in question.</p>', 'CatalogImportStatus$ImportedBy' => '<p>The name of the person who initiated the migration.</p>', 'CatalogTablesList$member' => NULL, 'CatalogTarget$DatabaseName' => '<p>The name of the database to be synchronized.</p>', 'ClassifierNameList$member' => NULL, 'Column$Name' => '<p>The name of the <code>Column</code>.</p>', 'ColumnError$ColumnName' => '<p>The name of the column that failed.</p>', 'ColumnImportance$ColumnName' => '<p>The name of a column.</p>', 'ColumnRowFilter$ColumnName' => NULL, 'ColumnStatistics$ColumnName' => '<p>Name of column which statistics belong to.</p>', 'Condition$JobName' => '<p>The name of the job whose <code>JobRuns</code> this condition applies to, and on which this trigger waits.</p>', 'Condition$CrawlerName' => '<p>The name of the crawler to which this condition applies.</p>', 'Connection$Name' => '<p>The name of the connection definition.</p>', 'Connection$LastUpdatedBy' => '<p>The user, group, or role that last updated this connection definition.</p>', 'ConnectionInput$Name' => '<p>The name of the connection.</p>', 'ConnectionPasswordEncryption$AwsKmsKeyId' => '<p>An KMS key that is used to encrypt the connection password. </p> <p>If connection password protection is enabled, the caller of <code>CreateConnection</code> and <code>UpdateConnection</code> needs at least <code>kms:Encrypt</code> permission on the specified KMS key, to encrypt passwords before storing them in the Data Catalog. </p> <p>You can set the decrypt permission to enable or restrict access on the password key according to your security requirements.</p>', 'ContextWords$member' => NULL, 'Crawler$Name' => '<p>The name of the crawler.</p>', 'CrawlerHistory$Summary' => '<p>A run summary for the specific crawl in JSON. Contains the catalog tables and partitions that were added, updated, or deleted.</p>', 'CrawlerMetrics$CrawlerName' => '<p>The name of the crawler.</p>', 'CrawlerNameList$member' => NULL, 'CreateBlueprintResponse$Name' => '<p>Returns the name of the blueprint that was registered.</p>', 'CreateCrawlerRequest$Name' => '<p>Name of the new crawler.</p>', 'CreateCsvClassifierRequest$Name' => '<p>The name of the classifier.</p>', 'CreateCustomEntityTypeRequest$Name' => '<p>A name for the custom pattern that allows it to be retrieved or deleted later. This name must be unique per Amazon Web Services account.</p>', 'CreateCustomEntityTypeRequest$RegexString' => '<p>A regular expression string that is used for detecting sensitive data in a custom pattern.</p>', 'CreateCustomEntityTypeResponse$Name' => '<p>The name of the custom pattern you created.</p>', 'CreateDevEndpointRequest$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure being used with this <code>DevEndpoint</code>.</p>', 'CreateGrokClassifierRequest$Name' => '<p>The name of the new classifier.</p>', 'CreateJobRequest$Name' => '<p>The name you assign to this job definition. It must be unique in your account.</p>', 'CreateJobRequest$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this job.</p>', 'CreateJobResponse$Name' => '<p>The unique name that was provided for this job definition.</p>', 'CreateJsonClassifierRequest$Name' => '<p>The name of the classifier.</p>', 'CreateMLTransformRequest$Name' => '<p>The unique name that you give the transform when you create it.</p>', 'CreatePartitionIndexRequest$DatabaseName' => '<p>Specifies the name of a database in which you want to create a partition index.</p>', 'CreatePartitionIndexRequest$TableName' => '<p>Specifies the name of a table in which you want to create a partition index.</p>', 'CreatePartitionRequest$DatabaseName' => '<p>The name of the metadata database in which the partition is to be created.</p>', 'CreatePartitionRequest$TableName' => '<p>The name of the metadata table in which the partition is to be created.</p>', 'CreateSecurityConfigurationRequest$Name' => '<p>The name for the new security configuration.</p>', 'CreateSecurityConfigurationResponse$Name' => '<p>The name assigned to the new security configuration.</p>', 'CreateSessionRequest$Id' => '<p>The ID of the session request. </p>', 'CreateSessionRequest$SecurityConfiguration' => '<p>The name of the SecurityConfiguration structure to be used with the session </p>', 'CreateTableRequest$DatabaseName' => '<p>The catalog database in which to create the new table. For Hive compatibility, this name is entirely lowercase.</p>', 'CreateTriggerRequest$Name' => '<p>The name of the trigger.</p>', 'CreateTriggerRequest$WorkflowName' => '<p>The name of the workflow associated with the trigger.</p>', 'CreateTriggerResponse$Name' => '<p>The name of the trigger.</p>', 'CreateUserDefinedFunctionRequest$DatabaseName' => '<p>The name of the catalog database in which to create the function.</p>', 'CreateWorkflowRequest$Name' => '<p>The name to be assigned to the workflow. It should be unique within your account.</p>', 'CreateWorkflowResponse$Name' => '<p>The name of the workflow which was provided as part of the request.</p>', 'CreateXMLClassifierRequest$Name' => '<p>The name of the classifier.</p>', 'CsvClassifier$Name' => '<p>The name of the classifier.</p>', 'CsvHeader$member' => NULL, 'CustomEntityType$Name' => '<p>A name for the custom pattern that allows it to be retrieved or deleted later. This name must be unique per Amazon Web Services account.</p>', 'CustomEntityType$RegexString' => '<p>A regular expression string that is used for detecting sensitive data in a custom pattern.</p>', 'CustomEntityTypeNames$member' => NULL, 'Database$Name' => '<p>The name of the database. For Hive compatibility, this is folded to lowercase when it is stored.</p>', 'DatabaseIdentifier$DatabaseName' => '<p>The name of the catalog database.</p>', 'DatabaseInput$Name' => '<p>The name of the database. For Hive compatibility, this is folded to lowercase when it is stored.</p>', 'DeleteBlueprintRequest$Name' => '<p>The name of the blueprint to delete.</p>', 'DeleteBlueprintResponse$Name' => '<p>Returns the name of the blueprint that was deleted.</p>', 'DeleteClassifierRequest$Name' => '<p>Name of the classifier to remove.</p>', 'DeleteColumnStatisticsForPartitionRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'DeleteColumnStatisticsForPartitionRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'DeleteColumnStatisticsForPartitionRequest$ColumnName' => '<p>Name of the column.</p>', 'DeleteColumnStatisticsForTableRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'DeleteColumnStatisticsForTableRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'DeleteColumnStatisticsForTableRequest$ColumnName' => '<p>The name of the column.</p>', 'DeleteConnectionNameList$member' => NULL, 'DeleteConnectionRequest$ConnectionName' => '<p>The name of the connection to delete.</p>', 'DeleteCrawlerRequest$Name' => '<p>The name of the crawler to remove.</p>', 'DeleteCustomEntityTypeRequest$Name' => '<p>The name of the custom pattern that you want to delete.</p>', 'DeleteCustomEntityTypeResponse$Name' => '<p>The name of the custom pattern you deleted.</p>', 'DeleteDatabaseRequest$Name' => '<p>The name of the database to delete. For Hive compatibility, this must be all lowercase.</p>', 'DeleteJobRequest$JobName' => '<p>The name of the job definition to delete.</p>', 'DeleteJobResponse$JobName' => '<p>The name of the job definition that was deleted.</p>', 'DeletePartitionIndexRequest$DatabaseName' => '<p>Specifies the name of a database from which you want to delete a partition index.</p>', 'DeletePartitionIndexRequest$TableName' => '<p>Specifies the name of a table from which you want to delete a partition index.</p>', 'DeletePartitionIndexRequest$IndexName' => '<p>The name of the partition index to be deleted.</p>', 'DeletePartitionRequest$DatabaseName' => '<p>The name of the catalog database in which the table in question resides.</p>', 'DeletePartitionRequest$TableName' => '<p>The name of the table that contains the partition to be deleted.</p>', 'DeleteSecurityConfigurationRequest$Name' => '<p>The name of the security configuration to delete.</p>', 'DeleteSessionRequest$Id' => '<p>The ID of the session to be deleted.</p>', 'DeleteSessionResponse$Id' => '<p>Returns the ID of the deleted session.</p>', 'DeleteTableRequest$DatabaseName' => '<p>The name of the catalog database in which the table resides. For Hive compatibility, this name is entirely lowercase.</p>', 'DeleteTableRequest$Name' => '<p>The name of the table to be deleted. For Hive compatibility, this name is entirely lowercase.</p>', 'DeleteTableVersionRequest$DatabaseName' => '<p>The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.</p>', 'DeleteTableVersionRequest$TableName' => '<p>The name of the table. For Hive compatibility, this name is entirely lowercase.</p>', 'DeleteTriggerRequest$Name' => '<p>The name of the trigger to delete.</p>', 'DeleteTriggerResponse$Name' => '<p>The name of the trigger that was deleted.</p>', 'DeleteUserDefinedFunctionRequest$DatabaseName' => '<p>The name of the catalog database where the function is located.</p>', 'DeleteUserDefinedFunctionRequest$FunctionName' => '<p>The name of the function definition to be deleted.</p>', 'DeleteWorkflowRequest$Name' => '<p>Name of the workflow to be deleted.</p>', 'DeleteWorkflowResponse$Name' => '<p>Name of the workflow specified in input.</p>', 'DevEndpoint$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this <code>DevEndpoint</code>.</p>', 'DevEndpointNameList$member' => NULL, 'Edge$SourceId' => '<p>The unique of the node within the workflow where the edge starts.</p>', 'Edge$DestinationId' => '<p>The unique of the node within the workflow where the edge ends.</p>', 'EncryptionAtRest$SseAwsKmsKeyId' => '<p>The ID of the KMS key to use for encryption at rest.</p>', 'ErrorByName$key' => NULL, 'ErrorDetail$ErrorCode' => '<p>The code associated with this error.</p>', 'FindMatchesTaskRunProperties$JobName' => '<p>The name assigned to the job for the Find Matches task run.</p>', 'GetBlueprintRequest$Name' => '<p>The name of the blueprint.</p>', 'GetBlueprintRunsRequest$BlueprintName' => '<p>The name of the blueprint.</p>', 'GetClassifierRequest$Name' => '<p>Name of the classifier to retrieve.</p>', 'GetColumnNamesList$member' => NULL, 'GetColumnStatisticsForPartitionRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'GetColumnStatisticsForPartitionRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'GetColumnStatisticsForTableRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'GetColumnStatisticsForTableRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'GetConnectionRequest$Name' => '<p>The name of the connection definition to retrieve.</p>', 'GetCrawlerRequest$Name' => '<p>The name of the crawler to retrieve metadata for.</p>', 'GetCustomEntityTypeRequest$Name' => '<p>The name of the custom pattern that you want to retrieve.</p>', 'GetCustomEntityTypeResponse$Name' => '<p>The name of the custom pattern that you retrieved.</p>', 'GetCustomEntityTypeResponse$RegexString' => '<p>A regular expression string that is used for detecting sensitive data in a custom pattern.</p>', 'GetDatabaseRequest$Name' => '<p>The name of the database to retrieve. For Hive compatibility, this should be all lowercase.</p>', 'GetJobRequest$JobName' => '<p>The name of the job definition to retrieve.</p>', 'GetJobRunRequest$JobName' => '<p>Name of the job definition being run.</p>', 'GetJobRunsRequest$JobName' => '<p>The name of the job definition for which to retrieve all job runs.</p>', 'GetMLTransformResponse$Name' => '<p>The unique name given to the transform when it was created.</p>', 'GetPartitionIndexesRequest$DatabaseName' => '<p>Specifies the name of a database from which you want to retrieve partition indexes.</p>', 'GetPartitionIndexesRequest$TableName' => '<p>Specifies the name of a table for which you want to retrieve the partition indexes.</p>', 'GetPartitionRequest$DatabaseName' => '<p>The name of the catalog database where the partition resides.</p>', 'GetPartitionRequest$TableName' => '<p>The name of the partition\'s table.</p>', 'GetPartitionsRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'GetPartitionsRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'GetSecurityConfigurationRequest$Name' => '<p>The name of the security configuration to retrieve.</p>', 'GetSessionRequest$Id' => '<p>The ID of the session. </p>', 'GetStatementRequest$SessionId' => '<p>The Session ID of the statement.</p>', 'GetTableRequest$DatabaseName' => '<p>The name of the database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.</p>', 'GetTableRequest$Name' => '<p>The name of the table for which to retrieve the definition. For Hive compatibility, this name is entirely lowercase.</p>', 'GetTableVersionRequest$DatabaseName' => '<p>The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.</p>', 'GetTableVersionRequest$TableName' => '<p>The name of the table. For Hive compatibility, this name is entirely lowercase.</p>', 'GetTableVersionsRequest$DatabaseName' => '<p>The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.</p>', 'GetTableVersionsRequest$TableName' => '<p>The name of the table. For Hive compatibility, this name is entirely lowercase.</p>', 'GetTablesRequest$DatabaseName' => '<p>The database in the catalog whose tables to list. For Hive compatibility, this name is entirely lowercase.</p>', 'GetTriggerRequest$Name' => '<p>The name of the trigger to retrieve.</p>', 'GetTriggersRequest$DependentJobName' => '<p>The name of the job to retrieve triggers for. The trigger that can start this job is returned, and if there is no such trigger, all triggers are returned.</p>', 'GetUnfilteredPartitionMetadataRequest$DatabaseName' => NULL, 'GetUnfilteredPartitionMetadataRequest$TableName' => NULL, 'GetUnfilteredPartitionsMetadataRequest$DatabaseName' => NULL, 'GetUnfilteredPartitionsMetadataRequest$TableName' => NULL, 'GetUnfilteredTableMetadataRequest$DatabaseName' => NULL, 'GetUnfilteredTableMetadataRequest$Name' => NULL, 'GetUserDefinedFunctionRequest$DatabaseName' => '<p>The name of the catalog database where the function is located.</p>', 'GetUserDefinedFunctionRequest$FunctionName' => '<p>The name of the function.</p>', 'GetUserDefinedFunctionsRequest$DatabaseName' => '<p>The name of the catalog database where the functions are located. If none is provided, functions from all the databases across the catalog will be returned.</p>', 'GetUserDefinedFunctionsRequest$Pattern' => '<p>An optional function-name pattern string that filters the function definitions returned.</p>', 'GetWorkflowRequest$Name' => '<p>The name of the workflow to retrieve.</p>', 'GetWorkflowRunPropertiesRequest$Name' => '<p>Name of the workflow which was run.</p>', 'GetWorkflowRunRequest$Name' => '<p>Name of the workflow being run.</p>', 'GetWorkflowRunsRequest$Name' => '<p>Name of the workflow whose metadata of runs should be returned.</p>', 'GlueTable$DatabaseName' => '<p>A database name in the Glue Data Catalog.</p>', 'GlueTable$TableName' => '<p>A table name in the Glue Data Catalog.</p>', 'GlueTable$CatalogId' => '<p>A unique identifier for the Glue Data Catalog.</p>', 'GlueTable$ConnectionName' => '<p>The name of the connection to the Glue Data Catalog.</p>', 'GrokClassifier$Name' => '<p>The name of the classifier.</p>', 'Job$Name' => '<p>The name you assign to this job definition.</p>', 'Job$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this job.</p>', 'JobNameList$member' => NULL, 'JobRun$TriggerName' => '<p>The name of the trigger that started this job run.</p>', 'JobRun$JobName' => '<p>The name of the job definition being used in this run.</p>', 'JobRun$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this job run.</p>', 'JobUpdate$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this job.</p>', 'JsonClassifier$Name' => '<p>The name of the classifier.</p>', 'KeyList$member' => NULL, 'KeySchemaElement$Name' => '<p>The name of a partition key.</p>', 'ListCrawlsRequest$CrawlerName' => '<p>The name of the crawler whose runs you want to retrieve.</p>', 'ListStatementsRequest$SessionId' => '<p>The Session ID of the statements.</p>', 'ListTriggersRequest$DependentJobName' => '<p> The name of the job for which to retrieve triggers. The trigger that can start this job is returned. If there is no such trigger, all triggers are returned.</p>', 'MLTransform$Name' => '<p>A user-defined name for the machine learning transform. Names are not guaranteed unique and can be changed at any time.</p>', 'MLUserDataEncryption$KmsKeyId' => '<p>The ID for the customer-provided KMS key.</p>', 'MatchCriteria$member' => NULL, 'NameStringList$member' => NULL, 'Node$Name' => '<p>The name of the Glue component represented by the node.</p>', 'Node$UniqueId' => '<p>The unique Id assigned to the node within the workflow.</p>', 'NodeIdList$member' => NULL, 'Order$Column' => '<p>The name of the column.</p>', 'Partition$DatabaseName' => '<p>The name of the catalog database in which to create the partition.</p>', 'Partition$TableName' => '<p>The name of the database table in which to create the partition.</p>', 'PartitionIndex$IndexName' => '<p>The name of the partition index.</p>', 'PartitionIndexDescriptor$IndexName' => '<p>The name of the partition index.</p>', 'PhysicalConnectionRequirements$SubnetId' => '<p>The subnet ID used by the connection.</p>', 'PhysicalConnectionRequirements$AvailabilityZone' => '<p>The connection\'s Availability Zone. This field is redundant because the specified subnet implies the Availability Zone to be used. Currently the field must be populated, but it will be deprecated in the future.</p>', 'Predecessor$JobName' => '<p>The name of the job definition used by the predecessor job run.</p>', 'PutWorkflowRunPropertiesRequest$Name' => '<p>Name of the workflow which was run.</p>', 'ResumeWorkflowRunRequest$Name' => '<p>The name of the workflow to resume.</p>', 'RunStatementRequest$SessionId' => '<p>The Session Id of the statement to be run.</p>', 'SecurityConfiguration$Name' => '<p>The name of the security configuration.</p>', 'SecurityGroupIdList$member' => NULL, 'SerDeInfo$Name' => '<p>Name of the SerDe.</p>', 'SerDeInfo$SerializationLibrary' => '<p>Usually the class that implements the SerDe. An example is <code>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</code>.</p>', 'Session$Id' => '<p>The ID of the session.</p>', 'Session$SecurityConfiguration' => '<p>The name of the SecurityConfiguration structure to be used with the session.</p>', 'SessionCommand$Name' => '<p>Specifies the name of the SessionCommand. Can be \'glueetl\' or \'gluestreaming\'.</p>', 'SessionIdList$member' => NULL, 'StartCrawlerRequest$Name' => '<p>Name of the crawler to start.</p>', 'StartCrawlerScheduleRequest$CrawlerName' => '<p>Name of the crawler to schedule.</p>', 'StartJobRunRequest$JobName' => '<p>The name of the job definition to use.</p>', 'StartJobRunRequest$SecurityConfiguration' => '<p>The name of the <code>SecurityConfiguration</code> structure to be used with this job run.</p>', 'StartTriggerRequest$Name' => '<p>The name of the trigger to start.</p>', 'StartTriggerResponse$Name' => '<p>The name of the trigger that was started.</p>', 'StartWorkflowRunRequest$Name' => '<p>The name of the workflow to start.</p>', 'StopCrawlerRequest$Name' => '<p>Name of the crawler to stop.</p>', 'StopCrawlerScheduleRequest$CrawlerName' => '<p>Name of the crawler whose schedule state to set.</p>', 'StopSessionRequest$Id' => '<p>The ID of the session to be stopped.</p>', 'StopSessionResponse$Id' => '<p>Returns the Id of the stopped session.</p>', 'StopTriggerRequest$Name' => '<p>The name of the trigger to stop.</p>', 'StopTriggerResponse$Name' => '<p>The name of the trigger that was stopped.</p>', 'StopWorkflowRunRequest$Name' => '<p>The name of the workflow to stop.</p>', 'Table$Name' => '<p>The table name. For Hive compatibility, this must be entirely lowercase.</p>', 'Table$DatabaseName' => '<p>The name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.</p>', 'Table$Owner' => '<p>The owner of the table.</p>', 'Table$CreatedBy' => '<p>The person or entity who created the table.</p>', 'TableError$TableName' => '<p>The name of the table. For Hive compatibility, this must be entirely lowercase.</p>', 'TableIdentifier$DatabaseName' => '<p>The name of the catalog database that contains the target table.</p>', 'TableIdentifier$Name' => '<p>The name of the target table.</p>', 'TableInput$Name' => '<p>The table name. For Hive compatibility, this is folded to lowercase when it is stored.</p>', 'TableInput$Owner' => '<p>The table owner.</p>', 'TableVersionError$TableName' => '<p>The name of the table in question.</p>', 'TransformEncryption$TaskRunSecurityConfigurationName' => '<p>The name of the security configuration.</p>', 'TransformFilterCriteria$Name' => '<p>A unique transform name that is used to filter the machine learning transforms.</p>', 'Trigger$Name' => '<p>The name of the trigger.</p>', 'Trigger$WorkflowName' => '<p>The name of the workflow associated with the trigger.</p>', 'TriggerNameList$member' => NULL, 'TriggerUpdate$Name' => '<p>Reserved for future use.</p>', 'UpdateBlueprintResponse$Name' => '<p>Returns the name of the blueprint that was updated.</p>', 'UpdateColumnStatisticsForPartitionRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'UpdateColumnStatisticsForPartitionRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'UpdateColumnStatisticsForTableRequest$DatabaseName' => '<p>The name of the catalog database where the partitions reside.</p>', 'UpdateColumnStatisticsForTableRequest$TableName' => '<p>The name of the partitions\' table.</p>', 'UpdateConnectionRequest$Name' => '<p>The name of the connection definition to update.</p>', 'UpdateCrawlerRequest$Name' => '<p>Name of the new crawler.</p>', 'UpdateCrawlerScheduleRequest$CrawlerName' => '<p>The name of the crawler whose schedule to update.</p>', 'UpdateCsvClassifierRequest$Name' => '<p>The name of the classifier.</p>', 'UpdateDatabaseRequest$Name' => '<p>The name of the database to update in the catalog. For Hive compatibility, this is folded to lowercase.</p>', 'UpdateGrokClassifierRequest$Name' => '<p>The name of the <code>GrokClassifier</code>.</p>', 'UpdateJobRequest$JobName' => '<p>The name of the job definition to update.</p>', 'UpdateJobResponse$JobName' => '<p>Returns the name of the updated job definition.</p>', 'UpdateJsonClassifierRequest$Name' => '<p>The name of the classifier.</p>', 'UpdateMLTransformRequest$Name' => '<p>The unique name that you gave the transform when you created it.</p>', 'UpdatePartitionRequest$DatabaseName' => '<p>The name of the catalog database in which the table in question resides.</p>', 'UpdatePartitionRequest$TableName' => '<p>The name of the table in which the partition to be updated is located.</p>', 'UpdateTableRequest$DatabaseName' => '<p>The name of the catalog database in which the table resides. For Hive compatibility, this name is entirely lowercase.</p>', 'UpdateTriggerRequest$Name' => '<p>The name of the trigger to update.</p>', 'UpdateUserDefinedFunctionRequest$DatabaseName' => '<p>The name of the catalog database where the function to be updated is located.</p>', 'UpdateUserDefinedFunctionRequest$FunctionName' => '<p>The name of the function.</p>', 'UpdateWorkflowRequest$Name' => '<p>Name of the workflow to be updated.</p>', 'UpdateWorkflowResponse$Name' => '<p>The name of the workflow which was specified in input.</p>', 'UpdateXMLClassifierRequest$Name' => '<p>The name of the classifier.</p>', 'UserDefinedFunction$FunctionName' => '<p>The name of the function.</p>', 'UserDefinedFunction$DatabaseName' => '<p>The name of the catalog database that contains the function.</p>', 'UserDefinedFunction$ClassName' => '<p>The Java class that contains the function code.</p>', 'UserDefinedFunction$OwnerName' => '<p>The owner of the function.</p>', 'UserDefinedFunctionInput$FunctionName' => '<p>The name of the function.</p>', 'UserDefinedFunctionInput$ClassName' => '<p>The Java class that contains the function code.</p>', 'UserDefinedFunctionInput$OwnerName' => '<p>The owner of the function.</p>', 'Workflow$Name' => '<p>The name of the workflow.</p>', 'WorkflowNames$member' => NULL, 'WorkflowRun$Name' => '<p>Name of the workflow that was run.</p>', 'XMLClassifier$Name' => '<p>The name of the classifier.</p>', ], ], 'NameStringList' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteConnectionResponse$Succeeded' => '<p>A list of names of the connection definitions that were successfully deleted.</p>', 'GetUnfilteredPartitionMetadataResponse$AuthorizedColumns' => NULL, 'GetUnfilteredTableMetadataResponse$AuthorizedColumns' => NULL, 'SkewedInfo$SkewedColumnNames' => '<p>A list of names of columns that contain skewed values.</p>', 'StorageDescriptor$BucketColumns' => '<p>A list of reducer grouping columns, clustering columns, and bucketing columns in the table.</p>', 'UnfilteredPartition$AuthorizedColumns' => NULL, ], ], 'NoScheduleException' => [ 'base' => '<p>There is no applicable schedule.</p>', 'refs' => [], ], 'Node' => [ 'base' => '<p>A node represents an Glue component (trigger, crawler, or job) on a workflow graph.</p>', 'refs' => [ 'NodeList$member' => NULL, ], ], 'NodeId' => [ 'base' => NULL, 'refs' => [ 'CodeGenConfigurationNodes$key' => NULL, 'ManyInputs$member' => NULL, 'Merge$Source' => '<p>The source <code>DynamicFrame</code> that will be merged with a staging <code>DynamicFrame</code>.</p>', 'OneInput$member' => NULL, 'SqlAlias$From' => '<p>A table, or a column in a table.</p>', 'TwoInputs$member' => NULL, ], ], 'NodeIdList' => [ 'base' => NULL, 'refs' => [ 'ResumeWorkflowRunRequest$NodeIds' => '<p>A list of the node IDs for the nodes you want to restart. The nodes that are to be restarted must have a run attempt in the original run.</p>', 'ResumeWorkflowRunResponse$NodeIds' => '<p>A list of the node IDs for the nodes that were actually restarted.</p>', ], ], 'NodeList' => [ 'base' => NULL, 'refs' => [ 'WorkflowGraph$Nodes' => '<p>A list of the the Glue components belong to the workflow represented as nodes.</p>', ], ], 'NodeName' => [ 'base' => NULL, 'refs' => [ 'Aggregate$Name' => '<p>The name of the transform node.</p>', 'ApplyMapping$Name' => '<p>The name of the transform node.</p>', 'AthenaConnectorSource$Name' => '<p>The name of the data source.</p>', 'BasicCatalogTarget$Name' => '<p>The name of your data target.</p>', 'CatalogKafkaSource$Name' => '<p>The name of the data store.</p>', 'CatalogKinesisSource$Name' => '<p>The name of the data source.</p>', 'CatalogSource$Name' => '<p>The name of the data store.</p>', 'CustomCode$Name' => '<p>The name of the transform node.</p>', 'DirectKafkaSource$Name' => '<p>The name of the data store.</p>', 'DirectKinesisSource$Name' => '<p>The name of the data source.</p>', 'DropDuplicates$Name' => '<p>The name of the transform node.</p>', 'DropFields$Name' => '<p>The name of the transform node.</p>', 'DropNullFields$Name' => '<p>The name of the transform node.</p>', 'DynamoDBCatalogSource$Name' => '<p>The name of the data source.</p>', 'FillMissingValues$Name' => '<p>The name of the transform node.</p>', 'Filter$Name' => '<p>The name of the transform node.</p>', 'GovernedCatalogSource$Name' => '<p>The name of the data store.</p>', 'GovernedCatalogTarget$Name' => '<p>The name of the data target.</p>', 'JDBCConnectorSource$Name' => '<p>The name of the data source.</p>', 'JDBCConnectorTarget$Name' => '<p>The name of the data target.</p>', 'Join$Name' => '<p>The name of the transform node.</p>', 'Merge$Name' => '<p>The name of the transform node.</p>', 'MicrosoftSQLServerCatalogSource$Name' => '<p>The name of the data source.</p>', 'MicrosoftSQLServerCatalogTarget$Name' => '<p>The name of the data target.</p>', 'MySQLCatalogSource$Name' => '<p>The name of the data source.</p>', 'MySQLCatalogTarget$Name' => '<p>The name of the data target.</p>', 'OracleSQLCatalogSource$Name' => '<p>The name of the data source.</p>', 'OracleSQLCatalogTarget$Name' => '<p>The name of the data target.</p>', 'PIIDetection$Name' => '<p>The name of the transform node.</p>', 'PostgreSQLCatalogSource$Name' => '<p>The name of the data source.</p>', 'PostgreSQLCatalogTarget$Name' => '<p>The name of the data target.</p>', 'RedshiftSource$Name' => '<p>The name of the Amazon Redshift data store.</p>', 'RedshiftTarget$Name' => '<p>The name of the data target.</p>', 'RelationalCatalogSource$Name' => '<p>The name of the data source.</p>', 'RenameField$Name' => '<p>The name of the transform node.</p>', 'S3CatalogSource$Name' => '<p>The name of the data store.</p>', 'S3CatalogTarget$Name' => '<p>The name of the data target.</p>', 'S3CsvSource$Name' => '<p>The name of the data store.</p>', 'S3DirectTarget$Name' => '<p>The name of the data target.</p>', 'S3GlueParquetTarget$Name' => '<p>The name of the data target.</p>', 'S3JsonSource$Name' => '<p>The name of the data store.</p>', 'S3ParquetSource$Name' => '<p>The name of the data store.</p>', 'SelectFields$Name' => '<p>The name of the transform node.</p>', 'SelectFromCollection$Name' => '<p>The name of the transform node.</p>', 'SparkConnectorSource$Name' => '<p>The name of the data source.</p>', 'SparkConnectorTarget$Name' => '<p>The name of the data target.</p>', 'SparkSQL$Name' => '<p>The name of the transform node.</p>', 'Spigot$Name' => '<p>The name of the transform node.</p>', 'SplitFields$Name' => '<p>The name of the transform node.</p>', 'Union$Name' => '<p>The name of the transform node.</p>', ], ], 'NodeType' => [ 'base' => NULL, 'refs' => [ 'Node$Type' => '<p>The type of Glue component represented by the node.</p>', ], ], 'NonNegativeDouble' => [ 'base' => NULL, 'refs' => [ 'BinaryColumnStatisticsData$AverageLength' => '<p>The average bit sequence length in the column.</p>', 'CrawlerHistory$DPUHour' => '<p>The number of data processing units (DPU) used in hours for the crawl.</p>', 'CrawlerMetrics$TimeLeftSeconds' => '<p>The estimated time left to complete a running crawl.</p>', 'CrawlerMetrics$LastRuntimeSeconds' => '<p>The duration of the crawler\'s most recent run, in seconds.</p>', 'CrawlerMetrics$MedianRuntimeSeconds' => '<p>The median duration of this crawler\'s runs, in seconds.</p>', 'StringColumnStatisticsData$AverageLength' => '<p>The average string length in the column.</p>', ], ], 'NonNegativeInt' => [ 'base' => NULL, 'refs' => [ 'SelectFromCollection$Index' => '<p>The index for the DynamicFrame to be selected.</p>', ], ], 'NonNegativeInteger' => [ 'base' => NULL, 'refs' => [ 'CrawlerMetrics$TablesCreated' => '<p>The number of tables created by this crawler.</p>', 'CrawlerMetrics$TablesUpdated' => '<p>The number of tables updated by this crawler.</p>', 'CrawlerMetrics$TablesDeleted' => '<p>The number of tables deleted by this crawler.</p>', 'Segment$SegmentNumber' => '<p>The zero-based index number of the segment. For example, if the total number of segments is 4, <code>SegmentNumber</code> values range from 0 through 3.</p>', 'Table$Retention' => '<p>The retention time for this table.</p>', 'TableInput$Retention' => '<p>The retention time for this table.</p>', ], ], 'NonNegativeLong' => [ 'base' => NULL, 'refs' => [ 'BinaryColumnStatisticsData$MaximumLength' => '<p>The size of the longest bit sequence in the column.</p>', 'BinaryColumnStatisticsData$NumberOfNulls' => '<p>The number of null values in the column.</p>', 'BooleanColumnStatisticsData$NumberOfTrues' => '<p>The number of true values in the column.</p>', 'BooleanColumnStatisticsData$NumberOfFalses' => '<p>The number of false values in the column.</p>', 'BooleanColumnStatisticsData$NumberOfNulls' => '<p>The number of null values in the column.</p>', 'DateColumnStatisticsData$NumberOfNulls' => '<p>The number of null values in the column.</p>', 'DateColumnStatisticsData$NumberOfDistinctValues' => '<p>The number of distinct values in a column.</p>', 'DecimalColumnStatisticsData$NumberOfNulls' => '<p>The number of null values in the column.</p>', 'DecimalColumnStatisticsData$NumberOfDistinctValues' => '<p>The number of distinct values in a column.</p>', 'DoubleColumnStatisticsData$NumberOfNulls' => '<p>The number of null values in the column.</p>', 'DoubleColumnStatisticsData$NumberOfDistinctValues' => '<p>The number of distinct values in a column.</p>', 'LongColumnStatisticsData$NumberOfNulls' => '<p>The number of null values in the column.</p>', 'LongColumnStatisticsData$NumberOfDistinctValues' => '<p>The number of distinct values in a column.</p>', 'StringColumnStatisticsData$MaximumLength' => '<p>The size of the longest string in the column.</p>', 'StringColumnStatisticsData$NumberOfNulls' => '<p>The number of null values in the column.</p>', 'StringColumnStatisticsData$NumberOfDistinctValues' => '<p>The number of distinct values in a column.</p>', ], ], 'NotificationProperty' => [ 'base' => '<p>Specifies configuration properties of a notification.</p>', 'refs' => [ 'Action$NotificationProperty' => '<p>Specifies configuration properties of a job run notification.</p>', 'CreateJobRequest$NotificationProperty' => '<p>Specifies configuration properties of a job notification.</p>', 'Job$NotificationProperty' => '<p>Specifies configuration properties of a job notification.</p>', 'JobRun$NotificationProperty' => '<p>Specifies configuration properties of a job run notification.</p>', 'JobUpdate$NotificationProperty' => '<p>Specifies the configuration properties of a job notification.</p>', 'StartJobRunRequest$NotificationProperty' => '<p>Specifies configuration properties of a job run notification.</p>', ], ], 'NotifyDelayAfter' => [ 'base' => NULL, 'refs' => [ 'NotificationProperty$NotifyDelayAfter' => '<p>After a job run starts, the number of minutes to wait before sending a job run delay notification.</p>', ], ], 'NullCheckBoxList' => [ 'base' => '<p>Represents whether certain values are recognized as null values for removal.</p>', 'refs' => [ 'DropNullFields$NullCheckBoxList' => '<p>A structure that represents whether certain values are recognized as null values for removal.</p>', ], ], 'NullValueField' => [ 'base' => '<p>Represents a custom null value such as a zeros or other value being used as a null placeholder unique to the dataset.</p>', 'refs' => [ 'NullValueFields$member' => NULL, ], ], 'NullValueFields' => [ 'base' => NULL, 'refs' => [ 'DropNullFields$NullTextList' => '<p>A structure that specifies a list of NullValueField structures that represent a custom null value such as zero or other value being used as a null placeholder unique to the dataset.</p> <p>The <code>DropNullFields</code> transform removes custom null values only if both the value of the null placeholder and the datatype match the data.</p>', ], ], 'NullableBoolean' => [ 'base' => NULL, 'refs' => [ 'AuditContext$AllColumnsRequested' => '<p>All columns request for audit.</p>', 'BatchGetBlueprintsRequest$IncludeBlueprint' => '<p>Specifies whether or not to include the blueprint in the response.</p>', 'BatchGetBlueprintsRequest$IncludeParameterSpec' => '<p>Specifies whether or not to include the parameters, as a JSON string, for the blueprint in the response.</p>', 'BatchGetWorkflowsRequest$IncludeGraph' => '<p>Specifies whether to include a graph when returning the workflow resource metadata.</p>', 'CreateCsvClassifierRequest$DisableValueTrimming' => '<p>Specifies not to trim values before identifying the type of column values. The default value is true.</p>', 'CreateCsvClassifierRequest$AllowSingleColumn' => '<p>Enables the processing of files that contain only one column.</p>', 'CsvClassifier$DisableValueTrimming' => '<p>Specifies not to trim values before identifying the type of column values. The default value is <code>true</code>.</p>', 'CsvClassifier$AllowSingleColumn' => '<p>Enables the processing of files that contain only one column.</p>', 'DeltaTarget$WriteManifest' => '<p>Specifies whether to write the manifest files to the Delta table path.</p>', 'DynamoDBTarget$scanAll' => '<p>Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.</p> <p>A value of <code>true</code> means to scan all records, while a value of <code>false</code> means to sample the records. If no value is specified, the value defaults to <code>true</code>.</p>', 'FindMatchesParameters$EnforceProvidedLabels' => '<p>The value to switch on or off to force the output to match the provided labels from users. If the value is <code>True</code>, the <code>find matches</code> transform forces the output to match the provided labels. The results override the normal conflation results. If the value is <code>False</code>, the <code>find matches</code> transform does not ensure all the labels provided are respected, and the results rely on the trained model.</p> <p>Note that setting this value to true may increase the conflation execution time.</p>', 'GetBlueprintRequest$IncludeBlueprint' => '<p>Specifies whether or not to include the blueprint in the response.</p>', 'GetBlueprintRequest$IncludeParameterSpec' => '<p>Specifies whether or not to include the parameter specification.</p>', 'GetWorkflowRequest$IncludeGraph' => '<p>Specifies whether to include a graph when returning the workflow resource metadata.</p>', 'GetWorkflowRunRequest$IncludeGraph' => '<p>Specifies whether to include the workflow graph in response or not.</p>', 'GetWorkflowRunsRequest$IncludeGraph' => '<p>Specifies whether to include the workflow graph in response or not.</p>', 'LakeFormationConfiguration$UseLakeFormationCredentials' => '<p>Specifies whether to use Lake Formation credentials for the crawler instead of the IAM role credentials.</p>', 'MongoDBTarget$ScanAll' => '<p>Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.</p> <p>A value of <code>true</code> means to scan all records, while a value of <code>false</code> means to sample the records. If no value is specified, the value defaults to <code>true</code>.</p>', 'UpdateCsvClassifierRequest$DisableValueTrimming' => '<p>Specifies not to trim values before identifying the type of column values. The default value is true.</p>', 'UpdateCsvClassifierRequest$AllowSingleColumn' => '<p>Enables the processing of files that contain only one column.</p>', ], ], 'NullableDouble' => [ 'base' => NULL, 'refs' => [ 'CreateJobRequest$MaxCapacity' => '<p>For Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl") or Apache Spark streaming ETL job (<code>JobCommand.Name</code>="gluestreaming"), you can allocate a minimum of 2 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul> <p>For Glue version 2.0 jobs, you cannot instead specify a <code>Maximum capacity</code>. Instead, you should specify a <code>Worker type</code> and the <code>Number of workers</code>.</p>', 'CreateMLTransformRequest$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>. </p> <p> <code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p> <ul> <li> <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code> cannot be set.</p> </li> <li> <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code> can be set.</p> </li> <li> <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p> </li> <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</p> </li> </ul> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>', 'CreateSessionRequest$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that can be allocated when the job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB memory. </p>', 'DynamoDBTarget$scanRate' => '<p>The percentage of the configured read capacity units to use by the Glue crawler. Read capacity units is a term defined by DynamoDB, and is a numeric value that acts as rate limiter for the number of reads that can be performed on that table per second.</p> <p>The valid values are null or a value between 0.1 to 1.5. A null value is used when user does not provide a value, and defaults to 0.5 of the configured Read Capacity Unit (for provisioned tables), or 0.25 of the max configured Read Capacity Unit (for tables using on-demand mode).</p>', 'GetMLTransformResponse$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>', 'Job$MaxCapacity' => '<p>For Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job, an Apache Spark ETL job, or an Apache Spark streaming ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl") or Apache Spark streaming ETL job (<code>JobCommand.Name</code>="gluestreaming"), you can allocate a minimum of 2 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul> <p>For Glue version 2.0 jobs, you cannot instead specify a <code>Maximum capacity</code>. Instead, you should specify a <code>Worker type</code> and the <code>Number of workers</code>.</p>', 'JobRun$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"), you can allocate a minimum of 2 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul>', 'JobRun$DPUSeconds' => '<p>This field populates only for Auto Scaling job runs, and represents the total time each executor ran during the lifecycle of a job run in seconds, multiplied by a DPU factor (1 for <code>G.1X</code>, 2 for <code>G.2X</code>, or 0.25 for <code>G.025X</code> workers). This value may be different than the <code>executionEngineRuntime</code> * <code>MaxCapacity</code> as in the case of Auto Scaling jobs, as the number of executors running at a given time may be less than the <code>MaxCapacity</code>. Therefore, it is possible that the value of <code>DPUSeconds</code> is less than <code>executionEngineRuntime</code> * <code>MaxCapacity</code>.</p>', 'JobUpdate$MaxCapacity' => '<p>For Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl") or Apache Spark streaming ETL job (<code>JobCommand.Name</code>="gluestreaming"), you can allocate a minimum of 2 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul> <p>For Glue version 2.0 jobs, you cannot instead specify a <code>Maximum capacity</code>. Instead, you should specify a <code>Worker type</code> and the <code>Number of workers</code>.</p>', 'MLTransform$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="http://aws.amazon.com/glue/pricing/">Glue pricing page</a>. </p> <p> <code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p> <ul> <li> <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code> cannot be set.</p> </li> <li> <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code> can be set.</p> </li> <li> <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p> </li> <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</p> </li> </ul> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>', 'Session$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that can be allocated when the job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB memory. </p>', 'StartJobRunRequest$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job, or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"), you can allocate a minimum of 2 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul>', 'UpdateMLTransformRequest$MaxCapacity' => '<p>The number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>', ], ], 'NullableInteger' => [ 'base' => NULL, 'refs' => [ 'CreateDevEndpointRequest$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>', 'CreateDevEndpointResponse$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p>', 'CreateJobRequest$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p>', 'CreateMLTransformRequest$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when this task runs.</p> <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>', 'CreateMLTransformRequest$MaxRetries' => '<p>The maximum number of times to retry a task for this transform after a task run fails.</p>', 'CreateSessionRequest$NumberOfWorkers' => '<p>The number of workers of a defined <code>WorkerType</code> to use for the session. </p>', 'CreateWorkflowRequest$MaxConcurrentRuns' => '<p>You can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.</p>', 'DevEndpoint$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>', 'GetMLTransformResponse$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when this task runs.</p>', 'GetMLTransformResponse$MaxRetries' => '<p>The maximum number of times to retry a task for this transform after a task run fails.</p>', 'Job$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p>', 'JobRun$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p>', 'JobUpdate$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p>', 'MLTransform$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when a task of the transform runs.</p> <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>', 'MLTransform$MaxRetries' => '<p>The maximum number of times to retry after an <code>MLTaskRun</code> of the machine learning transform fails.</p>', 'S3Target$SampleSize' => '<p>Sets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.</p>', 'StartJobRunRequest$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p>', 'StartingEventBatchCondition$BatchSize' => '<p>Number of events in the batch.</p>', 'StartingEventBatchCondition$BatchWindow' => '<p>Duration of the batch window in seconds.</p>', 'UpdateMLTransformRequest$NumberOfWorkers' => '<p>The number of workers of a defined <code>workerType</code> that are allocated when this task runs.</p>', 'UpdateMLTransformRequest$MaxRetries' => '<p>The maximum number of times to retry a task for this transform after a task run fails.</p>', 'UpdateWorkflowRequest$MaxConcurrentRuns' => '<p>You can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.</p>', 'Workflow$MaxConcurrentRuns' => '<p>You can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.</p>', ], ], 'OneInput' => [ 'base' => NULL, 'refs' => [ 'Aggregate$Inputs' => '<p>Specifies the fields and rows to use as inputs for the aggregate transform.</p>', 'ApplyMapping$Inputs' => '<p>The data inputs identified by their node names.</p>', 'BasicCatalogTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'DropDuplicates$Inputs' => '<p>The data inputs identified by their node names.</p>', 'DropFields$Inputs' => '<p>The data inputs identified by their node names.</p>', 'DropNullFields$Inputs' => '<p>The data inputs identified by their node names.</p>', 'FillMissingValues$Inputs' => '<p>The data inputs identified by their node names.</p>', 'Filter$Inputs' => '<p>The data inputs identified by their node names.</p>', 'GovernedCatalogTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'JDBCConnectorTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'MicrosoftSQLServerCatalogTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'MySQLCatalogTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'OracleSQLCatalogTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'PIIDetection$Inputs' => '<p>The node ID inputs to the transform.</p>', 'PostgreSQLCatalogTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'RedshiftTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'RenameField$Inputs' => '<p>The data inputs identified by their node names.</p>', 'S3CatalogTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'S3DirectTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'S3GlueParquetTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'SelectFields$Inputs' => '<p>The data inputs identified by their node names.</p>', 'SelectFromCollection$Inputs' => '<p>The data inputs identified by their node names.</p>', 'SparkConnectorTarget$Inputs' => '<p>The nodes that are inputs to the data target.</p>', 'Spigot$Inputs' => '<p>The data inputs identified by their node names.</p>', 'SplitFields$Inputs' => '<p>The data inputs identified by their node names.</p>', ], ], 'OperationTimeoutException' => [ 'base' => '<p>The operation timed out.</p>', 'refs' => [], ], 'OracleSQLCatalogSource' => [ 'base' => '<p>Specifies an Oracle data source in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$OracleSQLCatalogSource' => '<p>Specifies an Oracle data source in the Glue Data Catalog.</p>', ], ], 'OracleSQLCatalogTarget' => [ 'base' => '<p>Specifies a target that uses Oracle SQL.</p>', 'refs' => [ 'CodeGenConfigurationNode$OracleSQLCatalogTarget' => '<p>Specifies a target that uses Oracle SQL.</p>', ], ], 'OrchestrationArgumentsMap' => [ 'base' => NULL, 'refs' => [ 'CreateSessionRequest$DefaultArguments' => '<p>A map array of key-value pairs. Max is 75 pairs. </p>', 'Session$DefaultArguments' => '<p>A map array of key-value pairs. Max is 75 pairs. </p>', ], ], 'OrchestrationArgumentsValue' => [ 'base' => NULL, 'refs' => [ 'OrchestrationArgumentsMap$value' => NULL, ], ], 'OrchestrationIAMRoleArn' => [ 'base' => NULL, 'refs' => [ 'BlueprintRun$RoleArn' => '<p>The role ARN. This role will be assumed by the Glue service and will be used to create the workflow and other entities of a workflow.</p>', 'StartBlueprintRunRequest$RoleArn' => '<p>Specifies the IAM role used to create the workflow.</p>', ], ], 'OrchestrationNameString' => [ 'base' => NULL, 'refs' => [ 'BatchGetBlueprintNames$member' => NULL, 'Blueprint$Name' => '<p>The name of the blueprint.</p>', 'BlueprintDetails$BlueprintName' => '<p>The name of the blueprint.</p>', 'BlueprintNames$member' => NULL, 'BlueprintRun$BlueprintName' => '<p>The name of the blueprint.</p>', 'CancelStatementRequest$RequestOrigin' => '<p>The origin of the request to cancel the statement.</p>', 'CreateBlueprintRequest$Name' => '<p>The name of the blueprint.</p>', 'CreateSessionRequest$RequestOrigin' => '<p>The origin of the request. </p>', 'DeleteSessionRequest$RequestOrigin' => '<p>The name of the origin of the delete session request.</p>', 'GetBlueprintRunRequest$BlueprintName' => '<p>The name of the blueprint.</p>', 'GetSessionRequest$RequestOrigin' => '<p>The origin of the request. </p>', 'GetStatementRequest$RequestOrigin' => '<p>The origin of the request.</p>', 'ListSessionsRequest$RequestOrigin' => '<p>The origin of the request. </p>', 'ListStatementsRequest$RequestOrigin' => '<p>The origin of the request to list statements.</p>', 'OrchestrationArgumentsMap$key' => NULL, 'RunStatementRequest$RequestOrigin' => '<p>The origin of the request.</p>', 'StartBlueprintRunRequest$BlueprintName' => '<p>The name of the blueprint.</p>', 'StopSessionRequest$RequestOrigin' => '<p>The origin of the request.</p>', 'UpdateBlueprintRequest$Name' => '<p>The name of the blueprint.</p>', ], ], 'OrchestrationRoleArn' => [ 'base' => NULL, 'refs' => [ 'CreateSessionRequest$Role' => '<p>The IAM Role ARN </p>', 'Session$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role associated with the Session.</p>', ], ], 'OrchestrationS3Location' => [ 'base' => NULL, 'refs' => [ 'CreateBlueprintRequest$BlueprintLocation' => '<p>Specifies a path in Amazon S3 where the blueprint is published.</p>', 'UpdateBlueprintRequest$BlueprintLocation' => '<p>Specifies a path in Amazon S3 where the blueprint is published.</p>', ], ], 'OrchestrationStatementCodeString' => [ 'base' => NULL, 'refs' => [ 'RunStatementRequest$Code' => '<p>The statement code to be run.</p>', ], ], 'OrchestrationStringList' => [ 'base' => NULL, 'refs' => [ 'ConnectionsList$Connections' => '<p>A list of connections used by the job.</p>', 'StatementOutput$Traceback' => '<p>The traceback of the output.</p>', ], ], 'OrchestrationToken' => [ 'base' => NULL, 'refs' => [ 'ListSessionsRequest$NextToken' => '<p>The token for the next set of results, or null if there are no more result. </p>', 'ListSessionsResponse$NextToken' => '<p>The token for the next set of results, or null if there are no more result. </p>', 'ListStatementsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'ListStatementsResponse$NextToken' => '<p>A continuation token, if not all statements have yet been returned.</p>', ], ], 'Order' => [ 'base' => '<p>Specifies the sort order of a sorted column.</p>', 'refs' => [ 'OrderList$member' => NULL, ], ], 'OrderList' => [ 'base' => NULL, 'refs' => [ 'StorageDescriptor$SortColumns' => '<p>A list specifying the sort order of each bucket in the table.</p>', ], ], 'OtherMetadataValueList' => [ 'base' => NULL, 'refs' => [ 'MetadataInfo$OtherMetadataValueList' => '<p>Other metadata belonging to the same metadata key.</p>', ], ], 'OtherMetadataValueListItem' => [ 'base' => '<p>A structure containing other metadata for a schema version belonging to the same metadata key.</p>', 'refs' => [ 'OtherMetadataValueList$member' => NULL, ], ], 'PIIDetection' => [ 'base' => '<p>Specifies a transform that identifies, removes or masks PII data.</p>', 'refs' => [ 'CodeGenConfigurationNode$PIIDetection' => '<p>Specifies a transform that identifies, removes or masks PII data.</p>', ], ], 'PageSize' => [ 'base' => NULL, 'refs' => [ 'GetBlueprintRunsRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'GetClassifiersRequest$MaxResults' => '<p>The size of the list to return (optional).</p>', 'GetConnectionsRequest$MaxResults' => '<p>The maximum number of connections to return in one response.</p>', 'GetCrawlerMetricsRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'GetCrawlersRequest$MaxResults' => '<p>The number of crawlers to return on each call.</p>', 'GetDevEndpointsRequest$MaxResults' => '<p>The maximum size of information to return.</p>', 'GetJobRunsRequest$MaxResults' => '<p>The maximum size of the response.</p>', 'GetJobsRequest$MaxResults' => '<p>The maximum size of the response.</p>', 'GetMLTaskRunsRequest$MaxResults' => '<p>The maximum number of results to return. </p>', 'GetMLTransformsRequest$MaxResults' => '<p>The maximum number of results to return.</p>', 'GetPartitionsRequest$MaxResults' => '<p>The maximum number of partitions to return in a single response.</p>', 'GetResourcePoliciesRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'GetSecurityConfigurationsRequest$MaxResults' => '<p>The maximum number of results to return.</p>', 'GetTriggersRequest$MaxResults' => '<p>The maximum size of the response.</p>', 'GetUnfilteredPartitionsMetadataRequest$MaxResults' => NULL, 'GetWorkflowRunsRequest$MaxResults' => '<p>The maximum number of workflow runs to be included in the response.</p>', 'ListBlueprintsRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'ListCrawlersRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'ListCrawlsRequest$MaxResults' => '<p>The maximum number of results to return. The default is 20, and maximum is 100.</p>', 'ListCustomEntityTypesRequest$MaxResults' => '<p>The maximum number of results to return.</p>', 'ListDevEndpointsRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'ListJobsRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'ListMLTransformsRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'ListSessionsRequest$MaxResults' => '<p>The maximum number of results. </p>', 'ListTriggersRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'ListWorkflowsRequest$MaxResults' => '<p>The maximum size of a list to return.</p>', 'SearchTablesRequest$MaxResults' => '<p>The maximum number of tables to return in a single response.</p>', ], ], 'PaginationToken' => [ 'base' => NULL, 'refs' => [ 'GetMLTaskRunsRequest$NextToken' => '<p>A token for pagination of the results. The default is empty.</p>', 'GetMLTaskRunsResponse$NextToken' => '<p>A pagination token, if more results are available.</p>', 'GetMLTransformsRequest$NextToken' => '<p>A paginated token to offset the results.</p>', 'GetMLTransformsResponse$NextToken' => '<p>A pagination token, if more results are available.</p>', 'ListCustomEntityTypesRequest$NextToken' => '<p>A paginated token to offset the results.</p>', 'ListCustomEntityTypesResponse$NextToken' => '<p>A pagination token, if more results are available.</p>', 'ListMLTransformsRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'ListMLTransformsResponse$NextToken' => '<p>A continuation token, if the returned list does not contain the last metric available.</p>', ], ], 'ParametersMap' => [ 'base' => NULL, 'refs' => [ 'Column$Parameters' => '<p>These key-value pairs define properties associated with the column.</p>', 'Database$Parameters' => '<p>These key-value pairs define parameters and properties of the database.</p>', 'DatabaseInput$Parameters' => '<p>These key-value pairs define parameters and properties of the database.</p> <p>These key-value pairs define parameters and properties of the database.</p>', 'Partition$Parameters' => '<p>These key-value pairs define partition parameters.</p>', 'PartitionInput$Parameters' => '<p>These key-value pairs define partition parameters.</p>', 'SerDeInfo$Parameters' => '<p>These key-value pairs define initialization parameters for the SerDe.</p>', 'StorageDescriptor$Parameters' => '<p>The user-supplied properties in key-value form.</p>', 'Table$Parameters' => '<p>These key-value pairs define properties associated with the table.</p>', 'TableInput$Parameters' => '<p>These key-value pairs define properties associated with the table.</p>', ], ], 'ParametersMapValue' => [ 'base' => NULL, 'refs' => [ 'ParametersMap$value' => NULL, ], ], 'ParquetCompressionType' => [ 'base' => NULL, 'refs' => [ 'S3GlueParquetTarget$Compression' => '<p>Specifies how the data is compressed. This is generally not necessary if the data has a standard file extension. Possible values are <code>"gzip"</code> and <code>"bzip"</code>).</p>', 'S3ParquetSource$CompressionType' => '<p>Specifies how the data is compressed. This is generally not necessary if the data has a standard file extension. Possible values are <code>"gzip"</code> and <code>"bzip"</code>).</p>', ], ], 'Partition' => [ 'base' => '<p>Represents a slice of table data.</p>', 'refs' => [ 'GetPartitionResponse$Partition' => '<p>The requested information, in the form of a <code>Partition</code> object.</p>', 'GetUnfilteredPartitionMetadataResponse$Partition' => NULL, 'PartitionList$member' => NULL, 'UnfilteredPartition$Partition' => NULL, ], ], 'PartitionError' => [ 'base' => '<p>Contains information about a partition error.</p>', 'refs' => [ 'PartitionErrors$member' => NULL, ], ], 'PartitionErrors' => [ 'base' => NULL, 'refs' => [ 'BatchCreatePartitionResponse$Errors' => '<p>The errors encountered when trying to create the requested partitions.</p>', 'BatchDeletePartitionResponse$Errors' => '<p>The errors encountered when trying to delete the requested partitions.</p>', ], ], 'PartitionIndex' => [ 'base' => '<p>A structure for a partition index.</p>', 'refs' => [ 'CreatePartitionIndexRequest$PartitionIndex' => '<p>Specifies a <code>PartitionIndex</code> structure to create a partition index in an existing table.</p>', 'PartitionIndexList$member' => NULL, ], ], 'PartitionIndexDescriptor' => [ 'base' => '<p>A descriptor for a partition index in a table.</p>', 'refs' => [ 'PartitionIndexDescriptorList$member' => NULL, ], ], 'PartitionIndexDescriptorList' => [ 'base' => NULL, 'refs' => [ 'GetPartitionIndexesResponse$PartitionIndexDescriptorList' => '<p>A list of index descriptors.</p>', ], ], 'PartitionIndexList' => [ 'base' => NULL, 'refs' => [ 'CreateTableRequest$PartitionIndexes' => '<p>A list of partition indexes, <code>PartitionIndex</code> structures, to create in the table.</p>', ], ], 'PartitionIndexStatus' => [ 'base' => NULL, 'refs' => [ 'PartitionIndexDescriptor$IndexStatus' => '<p>The status of the partition index. </p> <p>The possible statuses are:</p> <ul> <li> <p>CREATING: The index is being created. When an index is in a CREATING state, the index or its table cannot be deleted.</p> </li> <li> <p>ACTIVE: The index creation succeeds.</p> </li> <li> <p>FAILED: The index creation fails. </p> </li> <li> <p>DELETING: The index is deleted from the list of indexes.</p> </li> </ul>', ], ], 'PartitionInput' => [ 'base' => '<p>The structure used to create and update a partition.</p>', 'refs' => [ 'BatchUpdatePartitionRequestEntry$PartitionInput' => '<p>The structure used to update a partition.</p>', 'CreatePartitionRequest$PartitionInput' => '<p>A <code>PartitionInput</code> structure defining the partition to be created.</p>', 'PartitionInputList$member' => NULL, 'UpdatePartitionRequest$PartitionInput' => '<p>The new partition object to update the partition to.</p> <p>The <code>Values</code> property can\'t be changed. If you want to change the partition key values for a partition, delete and recreate the partition.</p>', ], ], 'PartitionInputList' => [ 'base' => NULL, 'refs' => [ 'BatchCreatePartitionRequest$PartitionInputList' => '<p>A list of <code>PartitionInput</code> structures that define the partitions to be created.</p>', ], ], 'PartitionList' => [ 'base' => NULL, 'refs' => [ 'BatchGetPartitionResponse$Partitions' => '<p>A list of the requested partitions.</p>', 'GetPartitionsResponse$Partitions' => '<p>A list of requested partitions.</p>', ], ], 'PartitionValueList' => [ 'base' => '<p>Contains a list of values defining partitions.</p>', 'refs' => [ 'BackfillErroredPartitionsList$member' => NULL, 'BatchDeletePartitionValueList$member' => NULL, 'BatchGetPartitionValueList$member' => NULL, ], ], 'Path' => [ 'base' => NULL, 'refs' => [ 'DynamoDBTarget$Path' => '<p>The name of the DynamoDB table to crawl.</p>', 'JdbcTarget$Path' => '<p>The path of the JDBC target.</p>', 'MongoDBTarget$Path' => '<p>The path of the Amazon DocumentDB or MongoDB target (database/collection).</p>', 'PathList$member' => NULL, 'S3Target$Path' => '<p>The path to the Amazon S3 target.</p>', ], ], 'PathList' => [ 'base' => NULL, 'refs' => [ 'DeltaTarget$DeltaTables' => '<p>A list of the Amazon S3 paths to the Delta tables.</p>', 'JdbcTarget$Exclusions' => '<p>A list of glob patterns used to exclude from the crawl. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-crawler.html">Catalog Tables with a Crawler</a>.</p>', 'S3Target$Exclusions' => '<p>A list of glob patterns used to exclude from the crawl. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-crawler.html">Catalog Tables with a Crawler</a>.</p>', ], ], 'Permission' => [ 'base' => NULL, 'refs' => [ 'PermissionList$member' => NULL, ], ], 'PermissionList' => [ 'base' => NULL, 'refs' => [ 'PrincipalPermissions$Permissions' => '<p>The permissions that are granted to the principal.</p>', ], ], 'PermissionType' => [ 'base' => NULL, 'refs' => [ 'PermissionTypeList$member' => NULL, ], ], 'PermissionTypeList' => [ 'base' => NULL, 'refs' => [ 'GetUnfilteredPartitionMetadataRequest$SupportedPermissionTypes' => NULL, 'GetUnfilteredPartitionsMetadataRequest$SupportedPermissionTypes' => NULL, 'GetUnfilteredTableMetadataRequest$SupportedPermissionTypes' => NULL, ], ], 'PermissionTypeMismatchException' => [ 'base' => NULL, 'refs' => [], ], 'PhysicalConnectionRequirements' => [ 'base' => '<p>Specifies the physical requirements for a connection.</p>', 'refs' => [ 'Connection$PhysicalConnectionRequirements' => '<p>A map of physical connection requirements, such as virtual private cloud (VPC) and <code>SecurityGroup</code>, that are needed to make this connection successfully.</p>', 'ConnectionInput$PhysicalConnectionRequirements' => '<p>A map of physical connection requirements, such as virtual private cloud (VPC) and <code>SecurityGroup</code>, that are needed to successfully make this connection.</p>', ], ], 'PiiType' => [ 'base' => NULL, 'refs' => [ 'PIIDetection$PiiType' => '<p>Indicates the type of PIIDetection transform. </p>', ], ], 'PolicyJsonString' => [ 'base' => NULL, 'refs' => [ 'GetResourcePolicyResponse$PolicyInJson' => '<p>Contains the requested policy document, in JSON format.</p>', 'GluePolicy$PolicyInJson' => '<p>Contains the requested policy document, in JSON format.</p>', 'PutResourcePolicyRequest$PolicyInJson' => '<p>Contains the policy document to set, in JSON format.</p>', ], ], 'PollingTime' => [ 'base' => NULL, 'refs' => [ 'StreamingDataPreviewOptions$PollingTime' => '<p>The polling time in milliseconds.</p>', ], ], 'PositiveLong' => [ 'base' => NULL, 'refs' => [ 'StreamingDataPreviewOptions$RecordPollingLimit' => '<p>The limit to the number of records polled.</p>', ], ], 'PostgreSQLCatalogSource' => [ 'base' => '<p>Specifies a PostgresSQL data source in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$PostgreSQLCatalogSource' => '<p>Specifies a PostgresSQL data source in the Glue Data Catalog.</p>', ], ], 'PostgreSQLCatalogTarget' => [ 'base' => '<p>Specifies a target that uses Postgres SQL.</p>', 'refs' => [ 'CodeGenConfigurationNode$PostgreSQLCatalogTarget' => '<p>Specifies a target that uses Postgres SQL.</p>', ], ], 'Predecessor' => [ 'base' => '<p>A job run that was used in the predicate of a conditional trigger that triggered this job run.</p>', 'refs' => [ 'PredecessorList$member' => NULL, ], ], 'PredecessorList' => [ 'base' => NULL, 'refs' => [ 'JobRun$PredecessorRuns' => '<p>A list of predecessors to this job run.</p>', ], ], 'Predicate' => [ 'base' => '<p>Defines the predicate of the trigger, which determines when it fires.</p>', 'refs' => [ 'CreateTriggerRequest$Predicate' => '<p>A predicate to specify when the new trigger should fire.</p> <p>This field is required when the trigger type is <code>CONDITIONAL</code>.</p>', 'Trigger$Predicate' => '<p>The predicate of this trigger, which defines when it will fire.</p>', 'TriggerUpdate$Predicate' => '<p>The predicate of this trigger, which defines when it will fire.</p>', ], ], 'PredicateString' => [ 'base' => NULL, 'refs' => [ 'ColumnRowFilter$RowFilterExpression' => NULL, 'GetPartitionsRequest$Expression' => '<p>An expression that filters the partitions to be returned.</p> <p>The expression uses SQL syntax similar to the SQL <code>WHERE</code> filter clause. The SQL statement parser <a href="http://jsqlparser.sourceforge.net/home.php">JSQLParser</a> parses the expression. </p> <p> <i>Operators</i>: The following are the operators that you can use in the <code>Expression</code> API call:</p> <dl> <dt>=</dt> <dd> <p>Checks whether the values of the two operands are equal; if yes, then the condition becomes true.</p> <p>Example: Assume \'variable a\' holds 10 and \'variable b\' holds 20. </p> <p>(a = b) is not true.</p> </dd> <dt>&lt; &gt;</dt> <dd> <p>Checks whether the values of two operands are equal; if the values are not equal, then the condition becomes true.</p> <p>Example: (a &lt; &gt; b) is true.</p> </dd> <dt>&gt;</dt> <dd> <p>Checks whether the value of the left operand is greater than the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &gt; b) is not true.</p> </dd> <dt>&lt;</dt> <dd> <p>Checks whether the value of the left operand is less than the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &lt; b) is true.</p> </dd> <dt>&gt;=</dt> <dd> <p>Checks whether the value of the left operand is greater than or equal to the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &gt;= b) is not true.</p> </dd> <dt>&lt;=</dt> <dd> <p>Checks whether the value of the left operand is less than or equal to the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &lt;= b) is true.</p> </dd> <dt>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</dt> <dd> <p>Logical operators.</p> </dd> </dl> <p> <i>Supported Partition Key Types</i>: The following are the supported partition keys.</p> <ul> <li> <p> <code>string</code> </p> </li> <li> <p> <code>date</code> </p> </li> <li> <p> <code>timestamp</code> </p> </li> <li> <p> <code>int</code> </p> </li> <li> <p> <code>bigint</code> </p> </li> <li> <p> <code>long</code> </p> </li> <li> <p> <code>tinyint</code> </p> </li> <li> <p> <code>smallint</code> </p> </li> <li> <p> <code>decimal</code> </p> </li> </ul> <p>If an type is encountered that is not valid, an exception is thrown. </p> <p>The following list shows the valid operators on each type. When you define a crawler, the <code>partitionKey</code> type is created as a <code>STRING</code>, to be compatible with the catalog partitions. </p> <p> <i>Sample API Call</i>: </p>', 'GetUnfilteredPartitionsMetadataRequest$Expression' => NULL, ], ], 'PrincipalPermissions' => [ 'base' => '<p>Permissions granted to a principal.</p>', 'refs' => [ 'PrincipalPermissionsList$member' => NULL, ], ], 'PrincipalPermissionsList' => [ 'base' => NULL, 'refs' => [ 'Database$CreateTableDefaultPermissions' => '<p>Creates a set of default permissions on the table for principals. </p>', 'DatabaseInput$CreateTableDefaultPermissions' => '<p>Creates a set of default permissions on the table for principals. </p>', ], ], 'PrincipalType' => [ 'base' => NULL, 'refs' => [ 'UserDefinedFunction$OwnerType' => '<p>The owner type.</p>', 'UserDefinedFunctionInput$OwnerType' => '<p>The owner type.</p>', ], ], 'Prob' => [ 'base' => NULL, 'refs' => [ 'Spigot$Prob' => '<p>The probability (a decimal value with a maximum value of 1) of picking any given record. A value of 1 indicates that each row read from the dataset should be included in the sample output.</p>', ], ], 'PropertyPredicate' => [ 'base' => '<p>Defines a property predicate.</p>', 'refs' => [ 'SearchPropertyPredicates$member' => NULL, ], ], 'PublicKeysList' => [ 'base' => NULL, 'refs' => [ 'CreateDevEndpointRequest$PublicKeys' => '<p>A list of public keys to be used by the development endpoints for authentication. The use of this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.</p> <note> <p>If you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the <code>UpdateDevEndpoint</code> API with the public key content in the <code>deletePublicKeys</code> attribute, and the list of new keys in the <code>addPublicKeys</code> attribute.</p> </note>', 'DevEndpoint$PublicKeys' => '<p>A list of public keys to be used by the <code>DevEndpoints</code> for authentication. Using this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.</p> <note> <p>If you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the <code>UpdateDevEndpoint</code> API operation with the public key content in the <code>deletePublicKeys</code> attribute, and the list of new keys in the <code>addPublicKeys</code> attribute.</p> </note>', 'UpdateDevEndpointRequest$AddPublicKeys' => '<p>The list of public keys for the <code>DevEndpoint</code> to use.</p>', 'UpdateDevEndpointRequest$DeletePublicKeys' => '<p>The list of public keys to be deleted from the <code>DevEndpoint</code>.</p>', ], ], 'PutDataCatalogEncryptionSettingsRequest' => [ 'base' => NULL, 'refs' => [], ], 'PutDataCatalogEncryptionSettingsResponse' => [ 'base' => NULL, 'refs' => [], ], 'PutResourcePolicyRequest' => [ 'base' => NULL, 'refs' => [], ], 'PutResourcePolicyResponse' => [ 'base' => NULL, 'refs' => [], ], 'PutSchemaVersionMetadataInput' => [ 'base' => NULL, 'refs' => [], ], 'PutSchemaVersionMetadataResponse' => [ 'base' => NULL, 'refs' => [], ], 'PutWorkflowRunPropertiesRequest' => [ 'base' => NULL, 'refs' => [], ], 'PutWorkflowRunPropertiesResponse' => [ 'base' => NULL, 'refs' => [], ], 'PythonScript' => [ 'base' => NULL, 'refs' => [ 'CreateScriptResponse$PythonScript' => '<p>The Python script generated from the DAG.</p>', 'GetDataflowGraphRequest$PythonScript' => '<p>The Python script to transform.</p>', 'GetPlanResponse$PythonScript' => '<p>A Python script to perform the mapping.</p>', ], ], 'PythonVersionString' => [ 'base' => NULL, 'refs' => [ 'JobCommand$PythonVersion' => '<p>The Python version being used to run a Python shell job. Allowed values are 2 or 3.</p>', 'SessionCommand$PythonVersion' => '<p>Specifies the Python version. The Python version indicates the version supported for jobs of type Spark.</p>', ], ], 'QuerySchemaVersionMetadataInput' => [ 'base' => NULL, 'refs' => [], ], 'QuerySchemaVersionMetadataMaxResults' => [ 'base' => NULL, 'refs' => [ 'QuerySchemaVersionMetadataInput$MaxResults' => '<p>Maximum number of results required per page. If the value is not supplied, this will be defaulted to 25 per page.</p>', ], ], 'QuerySchemaVersionMetadataResponse' => [ 'base' => NULL, 'refs' => [], ], 'QuoteChar' => [ 'base' => NULL, 'refs' => [ 'S3CsvSource$QuoteChar' => '<p>Specifies the character to use for quoting. The default is a double quote: <code>\'"\'</code>. Set this to <code>-1</code> to turn off quoting entirely.</p>', ], ], 'RecordsCount' => [ 'base' => NULL, 'refs' => [ 'ConfusionMatrix$NumTruePositives' => '<p>The number of matches in the data that the transform correctly found, in the confusion matrix for your transform.</p>', 'ConfusionMatrix$NumFalsePositives' => '<p>The number of nonmatches in the data that the transform incorrectly classified as a match, in the confusion matrix for your transform.</p>', 'ConfusionMatrix$NumTrueNegatives' => '<p>The number of nonmatches in the data that the transform correctly rejected, in the confusion matrix for your transform.</p>', 'ConfusionMatrix$NumFalseNegatives' => '<p>The number of matches in the data that the transform didn\'t find, in the confusion matrix for your transform.</p>', ], ], 'RecrawlBehavior' => [ 'base' => NULL, 'refs' => [ 'RecrawlPolicy$RecrawlBehavior' => '<p>Specifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run.</p> <p>A value of <code>CRAWL_EVERYTHING</code> specifies crawling the entire dataset again.</p> <p>A value of <code>CRAWL_NEW_FOLDERS_ONLY</code> specifies crawling only folders that were added since the last crawler run.</p> <p>A value of <code>CRAWL_EVENT_MODE</code> specifies crawling only the changes identified by Amazon S3 events.</p>', ], ], 'RecrawlPolicy' => [ 'base' => '<p>When crawling an Amazon S3 data source after the first crawl is complete, specifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/incremental-crawls.html">Incremental Crawls in Glue</a> in the developer guide.</p>', 'refs' => [ 'Crawler$RecrawlPolicy' => '<p>A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.</p>', 'CreateCrawlerRequest$RecrawlPolicy' => '<p>A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.</p>', 'UpdateCrawlerRequest$RecrawlPolicy' => '<p>A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.</p>', ], ], 'RedshiftSource' => [ 'base' => '<p>Specifies an Amazon Redshift data store.</p>', 'refs' => [ 'CodeGenConfigurationNode$RedshiftSource' => '<p>Specifies an Amazon Redshift data store.</p>', ], ], 'RedshiftTarget' => [ 'base' => '<p>Specifies a target that uses Amazon Redshift.</p>', 'refs' => [ 'CodeGenConfigurationNode$RedshiftTarget' => '<p>Specifies a target that uses Amazon Redshift.</p>', ], ], 'RegisterSchemaVersionInput' => [ 'base' => NULL, 'refs' => [], ], 'RegisterSchemaVersionResponse' => [ 'base' => NULL, 'refs' => [], ], 'RegistryId' => [ 'base' => '<p>A wrapper structure that may contain the registry name and Amazon Resource Name (ARN).</p>', 'refs' => [ 'CreateSchemaInput$RegistryId' => '<p> This is a wrapper shape to contain the registry identity fields. If this is not provided, the default registry will be used. The ARN format for the same will be: <code>arn:aws:glue:us-east-2:&lt;customer id&gt;:registry/default-registry:random-5-letter-id</code>.</p>', 'DeleteRegistryInput$RegistryId' => '<p>This is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).</p>', 'GetRegistryInput$RegistryId' => '<p>This is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).</p>', 'ListSchemasInput$RegistryId' => '<p>A wrapper structure that may contain the registry name and Amazon Resource Name (ARN).</p>', 'UpdateRegistryInput$RegistryId' => '<p>This is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).</p>', ], ], 'RegistryListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListRegistriesResponse$Registries' => '<p>An array of <code>RegistryDetailedListItem</code> objects containing minimal details of each registry.</p>', ], ], 'RegistryListItem' => [ 'base' => '<p>A structure containing the details for a registry.</p>', 'refs' => [ 'RegistryListDefinition$member' => NULL, ], ], 'RegistryStatus' => [ 'base' => NULL, 'refs' => [ 'DeleteRegistryResponse$Status' => '<p>The status of the registry. A successful operation will return the <code>Deleting</code> status.</p>', 'GetRegistryResponse$Status' => '<p>The status of the registry.</p>', 'RegistryListItem$Status' => '<p>The status of the registry.</p>', ], ], 'RelationalCatalogSource' => [ 'base' => '<p>Specifies a Relational database data source in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$RelationalCatalogSource' => NULL, ], ], 'RemoveSchemaVersionMetadataInput' => [ 'base' => NULL, 'refs' => [], ], 'RemoveSchemaVersionMetadataResponse' => [ 'base' => NULL, 'refs' => [], ], 'RenameField' => [ 'base' => '<p>Specifies a transform that renames a single data property key.</p>', 'refs' => [ 'CodeGenConfigurationNode$RenameField' => '<p>Specifies a transform that renames a single data property key.</p>', ], ], 'ReplaceBoolean' => [ 'base' => NULL, 'refs' => [ 'ImportLabelsTaskRunProperties$Replace' => '<p>Indicates whether to overwrite your existing labels.</p>', 'StartImportLabelsTaskRunRequest$ReplaceAllLabels' => '<p>Indicates whether to overwrite your existing labels.</p>', ], ], 'ResetJobBookmarkRequest' => [ 'base' => NULL, 'refs' => [], ], 'ResetJobBookmarkResponse' => [ 'base' => NULL, 'refs' => [], ], 'ResourceNotReadyException' => [ 'base' => '<p>A resource was not ready for a transaction.</p>', 'refs' => [], ], 'ResourceNumberLimitExceededException' => [ 'base' => '<p>A resource numerical limit was exceeded.</p>', 'refs' => [], ], 'ResourceShareType' => [ 'base' => NULL, 'refs' => [ 'GetDatabasesRequest$ResourceShareType' => '<p>Allows you to specify that you want to list the databases shared with your account. The allowable values are <code>FOREIGN</code> or <code>ALL</code>. </p> <ul> <li> <p>If set to <code>FOREIGN</code>, will list the databases shared with your account. </p> </li> <li> <p>If set to <code>ALL</code>, will list the databases shared with your account, as well as the databases in yor local account. </p> </li> </ul>', 'SearchTablesRequest$ResourceShareType' => '<p>Allows you to specify that you want to search the tables shared with your account. The allowable values are <code>FOREIGN</code> or <code>ALL</code>. </p> <ul> <li> <p>If set to <code>FOREIGN</code>, will search the tables shared with your account. </p> </li> <li> <p>If set to <code>ALL</code>, will search the tables shared with your account, as well as the tables in yor local account. </p> </li> </ul>', ], ], 'ResourceType' => [ 'base' => NULL, 'refs' => [ 'ResourceUri$ResourceType' => '<p>The type of the resource.</p>', ], ], 'ResourceUri' => [ 'base' => '<p>The URIs for function resources.</p>', 'refs' => [ 'ResourceUriList$member' => NULL, ], ], 'ResourceUriList' => [ 'base' => NULL, 'refs' => [ 'UserDefinedFunction$ResourceUris' => '<p>The resource URIs for the function.</p>', 'UserDefinedFunctionInput$ResourceUris' => '<p>The resource URIs for the function.</p>', ], ], 'ResumeWorkflowRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'ResumeWorkflowRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'Role' => [ 'base' => NULL, 'refs' => [ 'Crawler$Role' => '<p>The Amazon Resource Name (ARN) of an IAM role that\'s used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.</p>', 'CreateCrawlerRequest$Role' => '<p>The IAM role or Amazon Resource Name (ARN) of an IAM role used by the new crawler to access customer resources.</p>', 'UpdateCrawlerRequest$Role' => '<p>The IAM role or Amazon Resource Name (ARN) of an IAM role that is used by the new crawler to access customer resources.</p>', ], ], 'RoleArn' => [ 'base' => NULL, 'refs' => [ 'CreateDevEndpointRequest$RoleArn' => '<p>The IAM role for the <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$RoleArn' => '<p>The Amazon Resource Name (ARN) of the role assigned to the new <code>DevEndpoint</code>.</p>', 'DevEndpoint$RoleArn' => '<p>The Amazon Resource Name (ARN) of the IAM role used in this <code>DevEndpoint</code>.</p>', ], ], 'RoleString' => [ 'base' => NULL, 'refs' => [ 'CreateJobRequest$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role associated with this job.</p>', 'CreateMLTransformRequest$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. The required permissions include both Glue service role permissions to Glue resources, and Amazon S3 permissions required by the transform. </p> <ul> <li> <p>This role needs Glue service role permissions to allow access to resources in Glue. See <a href="https://docs.aws.amazon.com/glue/latest/dg/attach-policy-iam-user.html">Attach a Policy to IAM Users That Access Glue</a>.</p> </li> <li> <p>This role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.</p> </li> </ul>', 'GetMLTransformResponse$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions.</p>', 'Job$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role associated with this job.</p>', 'JobUpdate$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role associated with this job (required).</p>', 'MLTransform$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. The required permissions include both Glue service role permissions to Glue resources, and Amazon S3 permissions required by the transform. </p> <ul> <li> <p>This role needs Glue service role permissions to allow access to resources in Glue. See <a href="https://docs.aws.amazon.com/glue/latest/dg/attach-policy-iam-user.html">Attach a Policy to IAM Users That Access Glue</a>.</p> </li> <li> <p>This role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.</p> </li> </ul>', 'UpdateMLTransformRequest$Role' => '<p>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions.</p>', ], ], 'RowTag' => [ 'base' => NULL, 'refs' => [ 'CreateXMLClassifierRequest$RowTag' => '<p>The XML tag designating the element that contains each record in an XML document being parsed. This can\'t identify a self-closing element (closed by <code>/&gt;</code>). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <code>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</code> is okay, but <code>&lt;row item_a="A" item_b="B" /&gt;</code> is not).</p>', 'UpdateXMLClassifierRequest$RowTag' => '<p>The XML tag designating the element that contains each record in an XML document being parsed. This cannot identify a self-closing element (closed by <code>/&gt;</code>). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <code>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</code> is okay, but <code>&lt;row item_a="A" item_b="B" /&gt;</code> is not).</p>', 'XMLClassifier$RowTag' => '<p>The XML tag designating the element that contains each record in an XML document being parsed. This can\'t identify a self-closing element (closed by <code>/&gt;</code>). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <code>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</code> is okay, but <code>&lt;row item_a="A" item_b="B" /&gt;</code> is not).</p>', ], ], 'RunId' => [ 'base' => NULL, 'refs' => [ 'GetJobBookmarkRequest$RunId' => '<p>The unique run identifier associated with this job run.</p>', 'JobBookmarkEntry$PreviousRunId' => '<p>The unique run identifier associated with the previous job run.</p>', 'JobBookmarkEntry$RunId' => '<p>The run ID number.</p>', 'ResetJobBookmarkRequest$RunId' => '<p>The unique run identifier associated with this job run.</p>', ], ], 'RunStatementRequest' => [ 'base' => NULL, 'refs' => [], ], 'RunStatementResponse' => [ 'base' => NULL, 'refs' => [], ], 'S3CatalogSource' => [ 'base' => '<p>Specifies an Amazon S3 data store in the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$S3CatalogSource' => '<p>Specifies an Amazon S3 data store in the Glue Data Catalog.</p>', ], ], 'S3CatalogTarget' => [ 'base' => '<p>Specifies a data target that writes to Amazon S3 using the Glue Data Catalog.</p>', 'refs' => [ 'CodeGenConfigurationNode$S3CatalogTarget' => '<p>Specifies a data target that writes to Amazon S3 using the Glue Data Catalog.</p>', ], ], 'S3CsvSource' => [ 'base' => '<p>Specifies a command-separated value (CSV) data store stored in Amazon S3.</p>', 'refs' => [ 'CodeGenConfigurationNode$S3CsvSource' => '<p>Specifies a command-separated value (CSV) data store stored in Amazon S3.</p>', ], ], 'S3DirectSourceAdditionalOptions' => [ 'base' => '<p>Specifies additional connection options for the Amazon S3 data store.</p>', 'refs' => [ 'S3CsvSource$AdditionalOptions' => '<p>Specifies additional connection options.</p>', 'S3JsonSource$AdditionalOptions' => '<p>Specifies additional connection options.</p>', 'S3ParquetSource$AdditionalOptions' => '<p>Specifies additional connection options.</p>', ], ], 'S3DirectTarget' => [ 'base' => '<p>Specifies a data target that writes to Amazon S3.</p>', 'refs' => [ 'CodeGenConfigurationNode$S3DirectTarget' => '<p>Specifies a data target that writes to Amazon S3.</p>', ], ], 'S3Encryption' => [ 'base' => '<p>Specifies how Amazon Simple Storage Service (Amazon S3) data should be encrypted.</p>', 'refs' => [ 'S3EncryptionList$member' => NULL, ], ], 'S3EncryptionList' => [ 'base' => NULL, 'refs' => [ 'EncryptionConfiguration$S3Encryption' => '<p>The encryption configuration for Amazon Simple Storage Service (Amazon S3) data.</p>', ], ], 'S3EncryptionMode' => [ 'base' => NULL, 'refs' => [ 'S3Encryption$S3EncryptionMode' => '<p>The encryption mode to use for Amazon S3 data.</p>', ], ], 'S3GlueParquetTarget' => [ 'base' => '<p>Specifies a data target that writes to Amazon S3 in Apache Parquet columnar storage.</p>', 'refs' => [ 'CodeGenConfigurationNode$S3GlueParquetTarget' => '<p>Specifies a data target that writes to Amazon S3 in Apache Parquet columnar storage.</p>', ], ], 'S3JsonSource' => [ 'base' => '<p>Specifies a JSON data store stored in Amazon S3.</p>', 'refs' => [ 'CodeGenConfigurationNode$S3JsonSource' => '<p>Specifies a JSON data store stored in Amazon S3.</p>', ], ], 'S3ParquetSource' => [ 'base' => '<p>Specifies an Apache Parquet data store stored in Amazon S3.</p>', 'refs' => [ 'CodeGenConfigurationNode$S3ParquetSource' => '<p>Specifies an Apache Parquet data store stored in Amazon S3.</p>', ], ], 'S3SourceAdditionalOptions' => [ 'base' => '<p>Specifies additional connection options for the Amazon S3 data store.</p>', 'refs' => [ 'GovernedCatalogSource$AdditionalOptions' => '<p>Specifies additional connection options.</p>', 'S3CatalogSource$AdditionalOptions' => '<p>Specifies additional connection options.</p>', ], ], 'S3Target' => [ 'base' => '<p>Specifies a data store in Amazon Simple Storage Service (Amazon S3).</p>', 'refs' => [ 'S3TargetList$member' => NULL, ], ], 'S3TargetList' => [ 'base' => NULL, 'refs' => [ 'CrawlerTargets$S3Targets' => '<p>Specifies Amazon Simple Storage Service (Amazon S3) targets.</p>', ], ], 'ScalaCode' => [ 'base' => NULL, 'refs' => [ 'CreateScriptResponse$ScalaCode' => '<p>The Scala code generated from the DAG.</p>', 'GetPlanResponse$ScalaCode' => '<p>The Scala code to perform the mapping.</p>', ], ], 'Schedule' => [ 'base' => '<p>A scheduling object using a <code>cron</code> statement to schedule an event.</p>', 'refs' => [ 'Crawler$Schedule' => '<p>For scheduled crawlers, the schedule when the crawler runs.</p>', ], ], 'ScheduleState' => [ 'base' => NULL, 'refs' => [ 'Schedule$State' => '<p>The state of the schedule.</p>', ], ], 'SchedulerNotRunningException' => [ 'base' => '<p>The specified scheduler is not running.</p>', 'refs' => [], ], 'SchedulerRunningException' => [ 'base' => '<p>The specified scheduler is already running.</p>', 'refs' => [], ], 'SchedulerTransitioningException' => [ 'base' => '<p>The specified scheduler is transitioning.</p>', 'refs' => [], ], 'SchemaChangePolicy' => [ 'base' => '<p>A policy that specifies update and deletion behaviors for the crawler.</p>', 'refs' => [ 'Crawler$SchemaChangePolicy' => '<p>The policy that specifies update and delete behaviors for the crawler.</p>', 'CreateCrawlerRequest$SchemaChangePolicy' => '<p>The policy for the crawler\'s update and deletion behavior.</p>', 'UpdateCrawlerRequest$SchemaChangePolicy' => '<p>The policy for the crawler\'s update and deletion behavior.</p>', ], ], 'SchemaCheckpointNumber' => [ 'base' => NULL, 'refs' => [ 'CreateSchemaResponse$SchemaCheckpoint' => '<p>The version number of the checkpoint (the last time the compatibility mode was changed).</p>', 'GetSchemaResponse$SchemaCheckpoint' => '<p>The version number of the checkpoint (the last time the compatibility mode was changed).</p>', ], ], 'SchemaColumn' => [ 'base' => '<p>A key-value pair representing a column and data type that this transform can run against. The <code>Schema</code> parameter of the <code>MLTransform</code> may contain up to 100 of these structures.</p>', 'refs' => [ 'TransformSchema$member' => NULL, ], ], 'SchemaDefinitionDiff' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionsDiffResponse$Diff' => '<p>The difference between schemas as a string in JsonPatch format.</p>', ], ], 'SchemaDefinitionString' => [ 'base' => NULL, 'refs' => [ 'CheckSchemaVersionValidityInput$SchemaDefinition' => '<p>The definition of the schema that has to be validated.</p>', 'CreateSchemaInput$SchemaDefinition' => '<p>The schema definition using the <code>DataFormat</code> setting for <code>SchemaName</code>.</p>', 'GetSchemaByDefinitionInput$SchemaDefinition' => '<p>The definition of the schema for which schema details are required.</p>', 'GetSchemaVersionResponse$SchemaDefinition' => '<p>The schema definition for the schema ID.</p>', 'RegisterSchemaVersionInput$SchemaDefinition' => '<p>The schema definition using the <code>DataFormat</code> setting for the <code>SchemaName</code>.</p>', ], ], 'SchemaDiffType' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionsDiffInput$SchemaDiffType' => '<p>Refers to <code>SYNTAX_DIFF</code>, which is the currently supported diff type.</p>', ], ], 'SchemaId' => [ 'base' => '<p>The unique ID of the schema in the Glue schema registry.</p>', 'refs' => [ 'DeleteSchemaInput$SchemaId' => '<p>This is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>', 'DeleteSchemaVersionsInput$SchemaId' => '<p>This is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>', 'GetSchemaByDefinitionInput$SchemaId' => '<p>This is a wrapper structure to contain schema identity fields. The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p> </li> </ul>', 'GetSchemaInput$SchemaId' => '<p>This is a wrapper structure to contain schema identity fields. The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> </ul>', 'GetSchemaVersionInput$SchemaId' => '<p>This is a wrapper structure to contain schema identity fields. The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> </ul>', 'GetSchemaVersionsDiffInput$SchemaId' => '<p>This is a wrapper structure to contain schema identity fields. The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p> </li> </ul>', 'ListSchemaVersionsInput$SchemaId' => '<p>This is a wrapper structure to contain schema identity fields. The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> </ul>', 'PutSchemaVersionMetadataInput$SchemaId' => '<p>The unique ID for the schema.</p>', 'QuerySchemaVersionMetadataInput$SchemaId' => '<p>A wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>', 'RegisterSchemaVersionInput$SchemaId' => '<p>This is a wrapper structure to contain schema identity fields. The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code> and <code>RegistryName</code> has to be provided.</p> </li> </ul>', 'RemoveSchemaVersionMetadataInput$SchemaId' => '<p>A wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>', 'SchemaReference$SchemaId' => '<p>A structure that contains schema identity fields. Either this or the <code>SchemaVersionId</code> has to be provided.</p>', 'UpdateSchemaInput$SchemaId' => '<p>This is a wrapper structure to contain schema identity fields. The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p> </li> </ul>', ], ], 'SchemaListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListSchemasResponse$Schemas' => '<p>An array of <code>SchemaListItem</code> objects containing details of each schema.</p>', ], ], 'SchemaListItem' => [ 'base' => '<p>An object that contains minimal details for a schema.</p>', 'refs' => [ 'SchemaListDefinition$member' => NULL, ], ], 'SchemaPathString' => [ 'base' => NULL, 'refs' => [ 'MappingEntry$SourcePath' => '<p>The source path.</p>', 'MappingEntry$TargetPath' => '<p>The target path.</p>', ], ], 'SchemaReference' => [ 'base' => '<p>An object that references a schema stored in the Glue Schema Registry.</p>', 'refs' => [ 'StorageDescriptor$SchemaReference' => '<p>An object that references a schema stored in the Glue Schema Registry.</p> <p>When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.</p>', ], ], 'SchemaRegistryNameString' => [ 'base' => NULL, 'refs' => [ 'CreateRegistryInput$RegistryName' => '<p>Name of the registry to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark. No whitespace.</p>', 'CreateRegistryResponse$RegistryName' => '<p>The name of the registry.</p>', 'CreateSchemaInput$SchemaName' => '<p>Name of the schema to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark. No whitespace.</p>', 'CreateSchemaResponse$RegistryName' => '<p>The name of the registry.</p>', 'CreateSchemaResponse$SchemaName' => '<p>The name of the schema.</p>', 'DeleteRegistryResponse$RegistryName' => '<p>The name of the registry being deleted.</p>', 'DeleteSchemaResponse$SchemaName' => '<p>The name of the schema being deleted.</p>', 'GetRegistryResponse$RegistryName' => '<p>The name of the registry.</p>', 'GetSchemaResponse$RegistryName' => '<p>The name of the registry.</p>', 'GetSchemaResponse$SchemaName' => '<p>The name of the schema.</p>', 'PutSchemaVersionMetadataResponse$SchemaName' => '<p>The name for the schema.</p>', 'PutSchemaVersionMetadataResponse$RegistryName' => '<p>The name for the registry.</p>', 'RegistryId$RegistryName' => '<p>Name of the registry. Used only for lookup. One of <code>RegistryArn</code> or <code>RegistryName</code> has to be provided. </p>', 'RegistryListItem$RegistryName' => '<p>The name of the registry.</p>', 'RemoveSchemaVersionMetadataResponse$SchemaName' => '<p>The name of the schema.</p>', 'RemoveSchemaVersionMetadataResponse$RegistryName' => '<p>The name of the registry.</p>', 'SchemaId$SchemaName' => '<p>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided.</p>', 'SchemaId$RegistryName' => '<p>The name of the schema registry that contains the schema.</p>', 'SchemaListItem$RegistryName' => '<p>the name of the registry where the schema resides.</p>', 'SchemaListItem$SchemaName' => '<p>The name of the schema.</p>', 'UpdateRegistryResponse$RegistryName' => '<p>The name of the updated registry.</p>', 'UpdateSchemaResponse$SchemaName' => '<p>The name of the schema.</p>', 'UpdateSchemaResponse$RegistryName' => '<p>The name of the registry that contains the schema.</p>', ], ], 'SchemaRegistryTokenString' => [ 'base' => NULL, 'refs' => [ 'ListRegistriesInput$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'ListRegistriesResponse$NextToken' => '<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>', 'ListSchemaVersionsInput$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'ListSchemaVersionsResponse$NextToken' => '<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>', 'ListSchemasInput$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'ListSchemasResponse$NextToken' => '<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>', 'QuerySchemaVersionMetadataInput$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'QuerySchemaVersionMetadataResponse$NextToken' => '<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>', ], ], 'SchemaStatus' => [ 'base' => NULL, 'refs' => [ 'CreateSchemaResponse$SchemaStatus' => '<p>The status of the schema. </p>', 'DeleteSchemaResponse$Status' => '<p>The status of the schema.</p>', 'GetSchemaResponse$SchemaStatus' => '<p>The status of the schema.</p>', 'SchemaListItem$SchemaStatus' => '<p>The status of the schema.</p>', ], ], 'SchemaValidationError' => [ 'base' => NULL, 'refs' => [ 'CheckSchemaVersionValidityResponse$Error' => '<p>A validation failure error message.</p>', ], ], 'SchemaVersionErrorItem' => [ 'base' => '<p>An object that contains the error details for an operation on a schema version.</p>', 'refs' => [ 'SchemaVersionErrorList$member' => NULL, ], ], 'SchemaVersionErrorList' => [ 'base' => NULL, 'refs' => [ 'DeleteSchemaVersionsResponse$SchemaVersionErrors' => '<p>A list of <code>SchemaVersionErrorItem</code> objects, each containing an error and schema version.</p>', ], ], 'SchemaVersionIdString' => [ 'base' => NULL, 'refs' => [ 'CreateSchemaResponse$SchemaVersionId' => '<p>The unique identifier of the first schema version.</p>', 'GetSchemaByDefinitionResponse$SchemaVersionId' => '<p>The schema ID of the schema version.</p>', 'GetSchemaVersionInput$SchemaVersionId' => '<p>The <code>SchemaVersionId</code> of the schema version. This field is required for fetching by schema ID. Either this or the <code>SchemaId</code> wrapper has to be provided.</p>', 'GetSchemaVersionResponse$SchemaVersionId' => '<p>The <code>SchemaVersionId</code> of the schema version.</p>', 'PutSchemaVersionMetadataInput$SchemaVersionId' => '<p>The unique version ID of the schema version.</p>', 'PutSchemaVersionMetadataResponse$SchemaVersionId' => '<p>The unique version ID of the schema version.</p>', 'QuerySchemaVersionMetadataInput$SchemaVersionId' => '<p>The unique version ID of the schema version.</p>', 'QuerySchemaVersionMetadataResponse$SchemaVersionId' => '<p>The unique version ID of the schema version.</p>', 'RegisterSchemaVersionResponse$SchemaVersionId' => '<p>The unique ID that represents the version of this schema.</p>', 'RemoveSchemaVersionMetadataInput$SchemaVersionId' => '<p>The unique version ID of the schema version.</p>', 'RemoveSchemaVersionMetadataResponse$SchemaVersionId' => '<p>The version ID for the schema version.</p>', 'SchemaReference$SchemaVersionId' => '<p>The unique ID assigned to a version of the schema. Either this or the <code>SchemaId</code> has to be provided.</p>', 'SchemaVersionListItem$SchemaVersionId' => '<p>The unique identifier of the schema version.</p>', ], ], 'SchemaVersionList' => [ 'base' => NULL, 'refs' => [ 'ListSchemaVersionsResponse$Schemas' => '<p>An array of <code>SchemaVersionList</code> objects containing details of each schema version.</p>', ], ], 'SchemaVersionListItem' => [ 'base' => '<p>An object containing the details about a schema version.</p>', 'refs' => [ 'SchemaVersionList$member' => NULL, ], ], 'SchemaVersionNumber' => [ 'base' => '<p>A structure containing the schema version information.</p>', 'refs' => [ 'GetSchemaVersionInput$SchemaVersionNumber' => '<p>The version number of the schema.</p>', 'GetSchemaVersionsDiffInput$FirstSchemaVersionNumber' => '<p>The first of the two schema versions to be compared.</p>', 'GetSchemaVersionsDiffInput$SecondSchemaVersionNumber' => '<p>The second of the two schema versions to be compared.</p>', 'PutSchemaVersionMetadataInput$SchemaVersionNumber' => '<p>The version number of the schema.</p>', 'QuerySchemaVersionMetadataInput$SchemaVersionNumber' => '<p>The version number of the schema.</p>', 'RemoveSchemaVersionMetadataInput$SchemaVersionNumber' => '<p>The version number of the schema.</p>', 'UpdateSchemaInput$SchemaVersionNumber' => '<p>Version number required for check pointing. One of <code>VersionNumber</code> or <code>Compatibility</code> has to be provided.</p>', ], ], 'SchemaVersionStatus' => [ 'base' => NULL, 'refs' => [ 'CreateSchemaResponse$SchemaVersionStatus' => '<p>The status of the first schema version created.</p>', 'GetSchemaByDefinitionResponse$Status' => '<p>The status of the schema version.</p>', 'GetSchemaVersionResponse$Status' => '<p>The status of the schema version. </p>', 'RegisterSchemaVersionResponse$Status' => '<p>The status of the schema version.</p>', 'SchemaVersionListItem$Status' => '<p>The status of the schema version.</p>', ], ], 'ScriptLocationString' => [ 'base' => NULL, 'refs' => [ 'JobCommand$ScriptLocation' => '<p>Specifies the Amazon Simple Storage Service (Amazon S3) path to a script that runs a job.</p>', ], ], 'SearchPropertyPredicates' => [ 'base' => NULL, 'refs' => [ 'SearchTablesRequest$Filters' => '<p>A list of key-value pairs, and a comparator used to filter the search results. Returns all entities matching the predicate.</p> <p>The <code>Comparator</code> member of the <code>PropertyPredicate</code> struct is used only for time fields, and can be omitted for other field types. Also, when comparing string values, such as when <code>Key=Name</code>, a fuzzy match algorithm is used. The <code>Key</code> field (for example, the value of the <code>Name</code> field) is split on certain punctuation characters, for example, -, :, #, etc. into tokens. Then each token is exact-match compared with the <code>Value</code> member of <code>PropertyPredicate</code>. For example, if <code>Key=Name</code> and <code>Value=link</code>, tables named <code>customer-link</code> and <code>xx-link-yy</code> are returned, but <code>xxlinkyy</code> is not returned.</p>', ], ], 'SearchTablesRequest' => [ 'base' => NULL, 'refs' => [], ], 'SearchTablesResponse' => [ 'base' => NULL, 'refs' => [], ], 'SecurityConfiguration' => [ 'base' => '<p>Specifies a security configuration.</p>', 'refs' => [ 'GetSecurityConfigurationResponse$SecurityConfiguration' => '<p>The requested security configuration.</p>', 'SecurityConfigurationList$member' => NULL, ], ], 'SecurityConfigurationList' => [ 'base' => NULL, 'refs' => [ 'GetSecurityConfigurationsResponse$SecurityConfigurations' => '<p>A list of security configurations.</p>', ], ], 'SecurityGroupIdList' => [ 'base' => NULL, 'refs' => [ 'PhysicalConnectionRequirements$SecurityGroupIdList' => '<p>The security group ID list used by the connection.</p>', ], ], 'Segment' => [ 'base' => '<p>Defines a non-overlapping region of a table\'s partitions, allowing multiple requests to be run in parallel.</p>', 'refs' => [ 'GetPartitionsRequest$Segment' => '<p>The segment of the table\'s partitions to scan in this request.</p>', 'GetUnfilteredPartitionsMetadataRequest$Segment' => NULL, ], ], 'SelectFields' => [ 'base' => '<p>Specifies a transform that chooses the data property keys that you want to keep.</p>', 'refs' => [ 'CodeGenConfigurationNode$SelectFields' => '<p>Specifies a transform that chooses the data property keys that you want to keep.</p>', ], ], 'SelectFromCollection' => [ 'base' => '<p>Specifies a transform that chooses one <code>DynamicFrame</code> from a collection of <code>DynamicFrames</code>. The output is the selected <code>DynamicFrame</code> </p>', 'refs' => [ 'CodeGenConfigurationNode$SelectFromCollection' => '<p>Specifies a transform that chooses one <code>DynamicFrame</code> from a collection of <code>DynamicFrames</code>. The output is the selected <code>DynamicFrame</code> </p>', ], ], 'Separator' => [ 'base' => NULL, 'refs' => [ 'S3CsvSource$Separator' => '<p>Specifies the delimiter character. The default is a comma: ",", but any other character can be specified.</p>', ], ], 'SerDeInfo' => [ 'base' => '<p>Information about a serialization/deserialization program (SerDe) that serves as an extractor and loader.</p>', 'refs' => [ 'StorageDescriptor$SerdeInfo' => '<p>The serialization/deserialization (SerDe) information.</p>', ], ], 'Session' => [ 'base' => '<p>The period in which a remote Spark runtime environment is running.</p>', 'refs' => [ 'CreateSessionResponse$Session' => '<p>Returns the session object in the response.</p>', 'GetSessionResponse$Session' => '<p>The session object is returned in the response.</p>', 'SessionList$member' => NULL, ], ], 'SessionCommand' => [ 'base' => '<p>The <code>SessionCommand</code> that runs the job.</p>', 'refs' => [ 'CreateSessionRequest$Command' => '<p>The <code>SessionCommand</code> that runs the job. </p>', 'Session$Command' => '<p>The command object.See SessionCommand.</p>', ], ], 'SessionIdList' => [ 'base' => NULL, 'refs' => [ 'ListSessionsResponse$Ids' => '<p>Returns the ID of the session. </p>', ], ], 'SessionList' => [ 'base' => NULL, 'refs' => [ 'ListSessionsResponse$Sessions' => '<p>Returns the session object. </p>', ], ], 'SessionStatus' => [ 'base' => NULL, 'refs' => [ 'Session$Status' => '<p>The session status. </p>', ], ], 'SkewedInfo' => [ 'base' => '<p>Specifies skewed values in a table. Skewed values are those that occur with very high frequency.</p>', 'refs' => [ 'StorageDescriptor$SkewedInfo' => '<p>The information about values that appear frequently in a column (skewed values).</p>', ], ], 'Sort' => [ 'base' => NULL, 'refs' => [ 'SortCriterion$Sort' => '<p>An ascending or descending sort.</p>', ], ], 'SortCriteria' => [ 'base' => NULL, 'refs' => [ 'SearchTablesRequest$SortCriteria' => '<p>A list of criteria for sorting the results by a field name, in an ascending or descending order.</p>', ], ], 'SortCriterion' => [ 'base' => '<p>Specifies a field to sort by and a sort order.</p>', 'refs' => [ 'SortCriteria$member' => NULL, ], ], 'SortDirectionType' => [ 'base' => NULL, 'refs' => [ 'TaskRunSortCriteria$SortDirection' => '<p>The sort direction to be used to sort the list of task runs for the machine learning transform.</p>', 'TransformSortCriteria$SortDirection' => '<p>The sort direction to be used in the sorting criteria that are associated with the machine learning transform.</p>', ], ], 'SparkConnectorSource' => [ 'base' => '<p>Specifies a connector to an Apache Spark data source.</p>', 'refs' => [ 'CodeGenConfigurationNode$SparkConnectorSource' => '<p>Specifies a connector to an Apache Spark data source.</p>', ], ], 'SparkConnectorTarget' => [ 'base' => '<p>Specifies a target that uses an Apache Spark connector.</p>', 'refs' => [ 'CodeGenConfigurationNode$SparkConnectorTarget' => '<p>Specifies a target that uses an Apache Spark connector.</p>', ], ], 'SparkSQL' => [ 'base' => '<p>Specifies a transform where you enter a SQL query using Spark SQL syntax to transform the data. The output is a single <code>DynamicFrame</code>.</p>', 'refs' => [ 'CodeGenConfigurationNode$SparkSQL' => '<p>Specifies a transform where you enter a SQL query using Spark SQL syntax to transform the data. The output is a single <code>DynamicFrame</code>.</p>', ], ], 'Spigot' => [ 'base' => '<p>Specifies a transform that writes samples of the data to an Amazon S3 bucket.</p>', 'refs' => [ 'CodeGenConfigurationNode$Spigot' => '<p>Specifies a transform that writes samples of the data to an Amazon S3 bucket.</p>', ], ], 'SplitFields' => [ 'base' => '<p>Specifies a transform that splits data property keys into two <code>DynamicFrames</code>. The output is a collection of <code>DynamicFrames</code>: one with selected data property keys, and one with the remaining data property keys.</p>', 'refs' => [ 'CodeGenConfigurationNode$SplitFields' => '<p>Specifies a transform that splits data property keys into two <code>DynamicFrames</code>. The output is a collection of <code>DynamicFrames</code>: one with selected data property keys, and one with the remaining data property keys.</p>', ], ], 'SqlAlias' => [ 'base' => '<p>Represents a single entry in the list of values for <code>SqlAliases</code>. </p>', 'refs' => [ 'SqlAliases$member' => NULL, ], ], 'SqlAliases' => [ 'base' => NULL, 'refs' => [ 'SparkSQL$SqlAliases' => '<p>A list of aliases. An alias allows you to specify what name to use in the SQL for a given input. For example, you have a datasource named "MyDataSource". If you specify <code>From</code> as MyDataSource, and <code>Alias</code> as SqlName, then in your SQL you can do:</p> <p> <code>select * from SqlName</code> </p> <p>and that gets data from MyDataSource.</p>', ], ], 'SqlQuery' => [ 'base' => NULL, 'refs' => [ 'JDBCConnectorSource$Query' => '<p>The table or SQL query to get the data from. You can specify either <code>ConnectionTable</code> or <code>query</code>, but not both.</p>', 'SparkSQL$SqlQuery' => '<p>A SQL query that must use Spark SQL syntax and return a single data set.</p>', ], ], 'StartBlueprintRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartBlueprintRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartCrawlerRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartCrawlerResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartCrawlerScheduleRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartCrawlerScheduleResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartExportLabelsTaskRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartExportLabelsTaskRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartImportLabelsTaskRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartImportLabelsTaskRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartJobRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartJobRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartMLEvaluationTaskRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartMLEvaluationTaskRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartMLLabelingSetGenerationTaskRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartMLLabelingSetGenerationTaskRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartTriggerRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartTriggerResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartWorkflowRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartWorkflowRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartingEventBatchCondition' => [ 'base' => '<p>The batch condition that started the workflow run. Either the number of events in the batch size arrived, in which case the BatchSize member is non-zero, or the batch window expired, in which case the BatchWindow member is non-zero.</p>', 'refs' => [ 'WorkflowRun$StartingEventBatchCondition' => '<p>The batch condition that started the workflow run.</p>', ], ], 'StartingPosition' => [ 'base' => NULL, 'refs' => [ 'KinesisStreamingSourceOptions$StartingPosition' => '<p>The starting position in the Kinesis data stream to read data from. The possible values are <code>"latest"</code>, <code>"trim_horizon"</code>, or <code>"earliest"</code>. The default value is <code>"latest"</code>.</p>', ], ], 'Statement' => [ 'base' => '<p>The statement or request for a particular action to occur in a session.</p>', 'refs' => [ 'GetStatementResponse$Statement' => '<p>Returns the statement.</p>', 'StatementList$member' => NULL, ], ], 'StatementList' => [ 'base' => NULL, 'refs' => [ 'ListStatementsResponse$Statements' => '<p>Returns the list of statements.</p>', ], ], 'StatementOutput' => [ 'base' => '<p>The code execution output in JSON format.</p>', 'refs' => [ 'Statement$Output' => '<p>The output in JSON.</p>', ], ], 'StatementOutputData' => [ 'base' => '<p>The code execution output in JSON format.</p>', 'refs' => [ 'StatementOutput$Data' => '<p>The code execution output.</p>', ], ], 'StatementState' => [ 'base' => NULL, 'refs' => [ 'Statement$State' => '<p>The state while request is actioned.</p>', 'StatementOutput$Status' => '<p>The status of the code execution output.</p>', ], ], 'StopCrawlerRequest' => [ 'base' => NULL, 'refs' => [], ], 'StopCrawlerResponse' => [ 'base' => NULL, 'refs' => [], ], 'StopCrawlerScheduleRequest' => [ 'base' => NULL, 'refs' => [], ], 'StopCrawlerScheduleResponse' => [ 'base' => NULL, 'refs' => [], ], 'StopSessionRequest' => [ 'base' => NULL, 'refs' => [], ], 'StopSessionResponse' => [ 'base' => NULL, 'refs' => [], ], 'StopTriggerRequest' => [ 'base' => NULL, 'refs' => [], ], 'StopTriggerResponse' => [ 'base' => NULL, 'refs' => [], ], 'StopWorkflowRunRequest' => [ 'base' => NULL, 'refs' => [], ], 'StopWorkflowRunResponse' => [ 'base' => NULL, 'refs' => [], ], 'StorageDescriptor' => [ 'base' => '<p>Describes the physical storage of table data.</p>', 'refs' => [ 'Partition$StorageDescriptor' => '<p>Provides information about the physical location where the partition is stored.</p>', 'PartitionInput$StorageDescriptor' => '<p>Provides information about the physical location where the partition is stored.</p>', 'Table$StorageDescriptor' => '<p>A storage descriptor containing information about the physical storage of this table.</p>', 'TableInput$StorageDescriptor' => '<p>A storage descriptor containing information about the physical storage of this table.</p>', ], ], 'StreamingDataPreviewOptions' => [ 'base' => '<p>Specifies options related to data preview for viewing a sample of your data.</p>', 'refs' => [ 'CatalogKafkaSource$DataPreviewOptions' => '<p>Specifies options related to data preview for viewing a sample of your data.</p>', 'CatalogKinesisSource$DataPreviewOptions' => '<p>Additional options for data preview.</p>', 'DirectKafkaSource$DataPreviewOptions' => '<p>Specifies options related to data preview for viewing a sample of your data.</p>', 'DirectKinesisSource$DataPreviewOptions' => '<p>Additional options for data preview.</p>', ], ], 'StringColumnStatisticsData' => [ 'base' => '<p>Defines column statistics supported for character sequence data values.</p>', 'refs' => [ 'ColumnStatisticsData$StringColumnStatisticsData' => '<p>String column statistics data.</p>', ], ], 'StringList' => [ 'base' => NULL, 'refs' => [ 'CreateDevEndpointRequest$SecurityGroupIds' => '<p>Security group IDs for the security groups to be used by the new <code>DevEndpoint</code>.</p>', 'CreateDevEndpointResponse$SecurityGroupIds' => '<p>The security groups assigned to the new <code>DevEndpoint</code>.</p>', 'DevEndpoint$SecurityGroupIds' => '<p>A list of security group identifiers used in this <code>DevEndpoint</code>.</p>', 'UpdateDevEndpointRequest$DeleteArguments' => '<p>The list of argument keys to be deleted from the map of arguments used to configure the <code>DevEndpoint</code>.</p>', ], ], 'Table' => [ 'base' => '<p>Represents a collection of related data organized in columns and rows.</p>', 'refs' => [ 'GetTableResponse$Table' => '<p>The <code>Table</code> object that defines the specified table.</p>', 'GetUnfilteredTableMetadataResponse$Table' => NULL, 'TableList$member' => NULL, 'TableVersion$Table' => '<p>The table in question.</p>', ], ], 'TableError' => [ 'base' => '<p>An error record for table operations.</p>', 'refs' => [ 'TableErrors$member' => NULL, ], ], 'TableErrors' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteTableResponse$Errors' => '<p>A list of errors encountered in attempting to delete the specified tables.</p>', ], ], 'TableIdentifier' => [ 'base' => '<p>A structure that describes a target table for resource linking.</p>', 'refs' => [ 'Table$TargetTable' => '<p>A <code>TableIdentifier</code> structure that describes a target table for resource linking.</p>', 'TableInput$TargetTable' => '<p>A <code>TableIdentifier</code> structure that describes a target table for resource linking.</p>', ], ], 'TableInput' => [ 'base' => '<p>A structure used to define a table.</p>', 'refs' => [ 'CreateTableRequest$TableInput' => '<p>The <code>TableInput</code> object that defines the metadata table to create in the catalog.</p>', 'UpdateTableRequest$TableInput' => '<p>An updated <code>TableInput</code> object to define the metadata table in the catalog.</p>', ], ], 'TableList' => [ 'base' => NULL, 'refs' => [ 'GetTablesResponse$TableList' => '<p>A list of the requested <code>Table</code> objects.</p>', 'SearchTablesResponse$TableList' => '<p>A list of the requested <code>Table</code> objects. The <code>SearchTables</code> response returns only the tables that you have access to.</p>', ], ], 'TableName' => [ 'base' => NULL, 'refs' => [ 'MappingEntry$SourceTable' => '<p>The name of the source table.</p>', 'MappingEntry$TargetTable' => '<p>The target table.</p>', ], ], 'TablePrefix' => [ 'base' => NULL, 'refs' => [ 'Crawler$TablePrefix' => '<p>The prefix added to the names of tables that are created.</p>', 'CreateCrawlerRequest$TablePrefix' => '<p>The table prefix used for catalog tables that are created.</p>', 'UpdateCrawlerRequest$TablePrefix' => '<p>The table prefix used for catalog tables that are created.</p>', ], ], 'TableTypeString' => [ 'base' => NULL, 'refs' => [ 'Table$TableType' => '<p>The type of this table (<code>EXTERNAL_TABLE</code>, <code>VIRTUAL_VIEW</code>, etc.).</p>', 'TableInput$TableType' => '<p>The type of this table (<code>EXTERNAL_TABLE</code>, <code>VIRTUAL_VIEW</code>, etc.).</p>', ], ], 'TableVersion' => [ 'base' => '<p>Specifies a version of a table.</p>', 'refs' => [ 'GetTableVersionResponse$TableVersion' => '<p>The requested table version.</p>', 'GetTableVersionsList$member' => NULL, ], ], 'TableVersionError' => [ 'base' => '<p>An error record for table-version operations.</p>', 'refs' => [ 'TableVersionErrors$member' => NULL, ], ], 'TableVersionErrors' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteTableVersionResponse$Errors' => '<p>A list of errors encountered while trying to delete the specified table versions.</p>', ], ], 'TagKey' => [ 'base' => NULL, 'refs' => [ 'TagKeysList$member' => NULL, 'TagsMap$key' => NULL, ], ], 'TagKeysList' => [ 'base' => NULL, 'refs' => [ 'UntagResourceRequest$TagsToRemove' => '<p>Tags to remove from this resource.</p>', ], ], 'TagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'TagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'TagValue' => [ 'base' => NULL, 'refs' => [ 'TagsMap$value' => NULL, ], ], 'TagsMap' => [ 'base' => NULL, 'refs' => [ 'CreateBlueprintRequest$Tags' => '<p>The tags to be applied to this blueprint.</p>', 'CreateConnectionRequest$Tags' => '<p>The tags you assign to the connection.</p>', 'CreateCrawlerRequest$Tags' => '<p>The tags to use with this crawler request. You may use tags to limit access to the crawler. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a> in the developer guide.</p>', 'CreateDatabaseRequest$Tags' => '<p>The tags you assign to the database.</p>', 'CreateDevEndpointRequest$Tags' => '<p>The tags to use with this DevEndpoint. You may use tags to limit access to the DevEndpoint. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a> in the developer guide.</p>', 'CreateJobRequest$Tags' => '<p>The tags to use with this job. You may use tags to limit access to the job. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a> in the developer guide.</p>', 'CreateMLTransformRequest$Tags' => '<p>The tags to use with this machine learning transform. You may use tags to limit access to the machine learning transform. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a> in the developer guide.</p>', 'CreateRegistryInput$Tags' => '<p>Amazon Web Services tags that contain a key value pair and may be searched by console, command line, or API.</p>', 'CreateRegistryResponse$Tags' => '<p>The tags for the registry.</p>', 'CreateSchemaInput$Tags' => '<p>Amazon Web Services tags that contain a key value pair and may be searched by console, command line, or API. If specified, follows the Amazon Web Services tags-on-create pattern.</p>', 'CreateSchemaResponse$Tags' => '<p>The tags for the schema.</p>', 'CreateSessionRequest$Tags' => '<p>The map of key value pairs (tags) belonging to the session.</p>', 'CreateTriggerRequest$Tags' => '<p>The tags to use with this trigger. You may use tags to limit access to the trigger. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a> in the developer guide. </p>', 'CreateWorkflowRequest$Tags' => '<p>The tags to be used with this workflow.</p>', 'GetTagsResponse$Tags' => '<p>The requested tags.</p>', 'ListBlueprintsRequest$Tags' => '<p>Filters the list by an Amazon Web Services resource tag.</p>', 'ListCrawlersRequest$Tags' => '<p>Specifies to return only these tagged resources.</p>', 'ListDevEndpointsRequest$Tags' => '<p>Specifies to return only these tagged resources.</p>', 'ListJobsRequest$Tags' => '<p>Specifies to return only these tagged resources.</p>', 'ListMLTransformsRequest$Tags' => '<p>Specifies to return only these tagged resources.</p>', 'ListSessionsRequest$Tags' => '<p>Tags belonging to the session. </p>', 'ListTriggersRequest$Tags' => '<p>Specifies to return only these tagged resources.</p>', 'TagResourceRequest$TagsToAdd' => '<p>Tags to add to this resource.</p>', ], ], 'TargetFormat' => [ 'base' => NULL, 'refs' => [ 'S3DirectTarget$Format' => '<p>Specifies the data output format for the target.</p>', ], ], 'TaskRun' => [ 'base' => '<p>The sampling parameters that are associated with the machine learning transform.</p>', 'refs' => [ 'TaskRunList$member' => NULL, ], ], 'TaskRunFilterCriteria' => [ 'base' => '<p>The criteria that are used to filter the task runs for the machine learning transform.</p>', 'refs' => [ 'GetMLTaskRunsRequest$Filter' => '<p>The filter criteria, in the <code>TaskRunFilterCriteria</code> structure, for the task run.</p>', ], ], 'TaskRunList' => [ 'base' => NULL, 'refs' => [ 'GetMLTaskRunsResponse$TaskRuns' => '<p>A list of task runs that are associated with the transform.</p>', ], ], 'TaskRunProperties' => [ 'base' => '<p>The configuration properties for the task run.</p>', 'refs' => [ 'GetMLTaskRunResponse$Properties' => '<p>The list of properties that are associated with the task run.</p>', 'TaskRun$Properties' => '<p>Specifies configuration properties associated with this task run.</p>', ], ], 'TaskRunSortColumnType' => [ 'base' => NULL, 'refs' => [ 'TaskRunSortCriteria$Column' => '<p>The column to be used to sort the list of task runs for the machine learning transform.</p>', ], ], 'TaskRunSortCriteria' => [ 'base' => '<p>The sorting criteria that are used to sort the list of task runs for the machine learning transform.</p>', 'refs' => [ 'GetMLTaskRunsRequest$Sort' => '<p>The sorting criteria, in the <code>TaskRunSortCriteria</code> structure, for the task run.</p>', ], ], 'TaskStatusType' => [ 'base' => NULL, 'refs' => [ 'CancelMLTaskRunResponse$Status' => '<p>The status for this run.</p>', 'GetMLTaskRunResponse$Status' => '<p>The status for this task run.</p>', 'TaskRun$Status' => '<p>The current status of the requested task run.</p>', 'TaskRunFilterCriteria$Status' => '<p>The current status of the task run.</p>', ], ], 'TaskType' => [ 'base' => NULL, 'refs' => [ 'TaskRunFilterCriteria$TaskRunType' => '<p>The type of task run.</p>', 'TaskRunProperties$TaskType' => '<p>The type of task run.</p>', ], ], 'Timeout' => [ 'base' => NULL, 'refs' => [ 'Action$Timeout' => '<p>The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.</p>', 'CreateJobRequest$Timeout' => '<p>The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>', 'CreateMLTransformRequest$Timeout' => '<p>The timeout of the task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>', 'CreateSessionRequest$Timeout' => '<p>The number of seconds before request times out. </p>', 'CreateSessionRequest$IdleTimeout' => '<p>The number of seconds when idle before request times out. </p>', 'GetMLTransformResponse$Timeout' => '<p>The timeout for a task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>', 'Job$Timeout' => '<p>The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>', 'JobRun$Timeout' => '<p>The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. This value overrides the timeout value set in the parent job.</p> <p>Streaming jobs do not have a timeout. The default for non-streaming jobs is 2,880 minutes (48 hours).</p>', 'JobUpdate$Timeout' => '<p>The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>', 'MLTransform$Timeout' => '<p>The timeout in minutes of the machine learning transform.</p>', 'StartJobRunRequest$Timeout' => '<p>The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. This value overrides the timeout value set in the parent job.</p> <p>Streaming jobs do not have a timeout. The default for non-streaming jobs is 2,880 minutes (48 hours).</p>', 'UpdateMLTransformRequest$Timeout' => '<p>The timeout for a task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>', ], ], 'Timestamp' => [ 'base' => NULL, 'refs' => [ 'CatalogImportStatus$ImportTime' => '<p>The time that the migration was started.</p>', 'ColumnStatistics$AnalyzedTime' => '<p>The timestamp of when column statistics were generated.</p>', 'Connection$CreationTime' => '<p>The time that this connection definition was created.</p>', 'Connection$LastUpdatedTime' => '<p>The last time that this connection definition was updated.</p>', 'Crawler$CreationTime' => '<p>The time that the crawler was created.</p>', 'Crawler$LastUpdated' => '<p>The time that the crawler was last updated.</p>', 'CrawlerHistory$StartTime' => '<p>The date and time on which the crawl started.</p>', 'CrawlerHistory$EndTime' => '<p>The date and time on which the crawl ended.</p>', 'CsvClassifier$CreationTime' => '<p>The time that this classifier was registered.</p>', 'CsvClassifier$LastUpdated' => '<p>The time that this classifier was last updated.</p>', 'Database$CreateTime' => '<p>The time at which the metadata database was created in the catalog.</p>', 'DateColumnStatisticsData$MinimumValue' => '<p>The lowest value in the column.</p>', 'DateColumnStatisticsData$MaximumValue' => '<p>The highest value in the column.</p>', 'GetMLTaskRunResponse$StartedOn' => '<p>The date and time when this task run started.</p>', 'GetMLTaskRunResponse$LastModifiedOn' => '<p>The date and time when this task run was last modified.</p>', 'GetMLTaskRunResponse$CompletedOn' => '<p>The date and time when this task run was completed.</p>', 'GetMLTransformResponse$CreatedOn' => '<p>The date and time when the transform was created.</p>', 'GetMLTransformResponse$LastModifiedOn' => '<p>The date and time when the transform was last modified.</p>', 'GetPartitionsRequest$QueryAsOfTime' => '<p>The time as of when to read the partition contents. If not set, the most recent transaction commit time will be used. Cannot be specified along with <code>TransactionId</code>.</p>', 'GetResourcePolicyResponse$CreateTime' => '<p>The date and time at which the policy was created.</p>', 'GetResourcePolicyResponse$UpdateTime' => '<p>The date and time at which the policy was last updated.</p>', 'GetTableRequest$QueryAsOfTime' => '<p>The time as of when to read the table contents. If not set, the most recent transaction commit time will be used. Cannot be specified along with <code>TransactionId</code>.</p>', 'GetTablesRequest$QueryAsOfTime' => '<p>The time as of when to read the table contents. If not set, the most recent transaction commit time will be used. Cannot be specified along with <code>TransactionId</code>.</p>', 'GluePolicy$CreateTime' => '<p>The date and time at which the policy was created.</p>', 'GluePolicy$UpdateTime' => '<p>The date and time at which the policy was last updated.</p>', 'GrokClassifier$CreationTime' => '<p>The time that this classifier was registered.</p>', 'GrokClassifier$LastUpdated' => '<p>The time that this classifier was last updated.</p>', 'JsonClassifier$CreationTime' => '<p>The time that this classifier was registered.</p>', 'JsonClassifier$LastUpdated' => '<p>The time that this classifier was last updated.</p>', 'LastCrawlInfo$StartTime' => '<p>The time at which the crawl started.</p>', 'MLTransform$CreatedOn' => '<p>A timestamp. The time and date that this machine learning transform was created.</p>', 'MLTransform$LastModifiedOn' => '<p>A timestamp. The last point in time when this machine learning transform was modified.</p>', 'Partition$CreationTime' => '<p>The time at which the partition was created.</p>', 'Partition$LastAccessTime' => '<p>The last time at which the partition was accessed.</p>', 'Partition$LastAnalyzedTime' => '<p>The last time at which column statistics were computed for this partition.</p>', 'PartitionInput$LastAccessTime' => '<p>The last time at which the partition was accessed.</p>', 'PartitionInput$LastAnalyzedTime' => '<p>The last time at which column statistics were computed for this partition.</p>', 'Table$CreateTime' => '<p>The time when the table definition was created in the Data Catalog.</p>', 'Table$UpdateTime' => '<p>The last time that the table was updated.</p>', 'Table$LastAccessTime' => '<p>The last time that the table was accessed. This is usually taken from HDFS, and might not be reliable.</p>', 'Table$LastAnalyzedTime' => '<p>The last time that column statistics were computed for this table.</p>', 'TableInput$LastAccessTime' => '<p>The last time that the table was accessed.</p>', 'TableInput$LastAnalyzedTime' => '<p>The last time that column statistics were computed for this table.</p>', 'TaskRun$StartedOn' => '<p>The date and time that this task run started.</p>', 'TaskRun$LastModifiedOn' => '<p>The last point in time that the requested task run was updated.</p>', 'TaskRun$CompletedOn' => '<p>The last point in time that the requested task run was completed.</p>', 'TaskRunFilterCriteria$StartedBefore' => '<p>Filter on task runs started before this date.</p>', 'TaskRunFilterCriteria$StartedAfter' => '<p>Filter on task runs started after this date.</p>', 'TransformFilterCriteria$CreatedBefore' => '<p>The time and date before which the transforms were created.</p>', 'TransformFilterCriteria$CreatedAfter' => '<p>The time and date after which the transforms were created.</p>', 'TransformFilterCriteria$LastModifiedBefore' => '<p>Filter on transforms last modified before this date.</p>', 'TransformFilterCriteria$LastModifiedAfter' => '<p>Filter on transforms last modified after this date.</p>', 'UserDefinedFunction$CreateTime' => '<p>The time at which the function was created.</p>', 'XMLClassifier$CreationTime' => '<p>The time that this classifier was registered.</p>', 'XMLClassifier$LastUpdated' => '<p>The time that this classifier was last updated.</p>', ], ], 'TimestampValue' => [ 'base' => NULL, 'refs' => [ 'Blueprint$CreatedOn' => '<p>The date and time the blueprint was registered.</p>', 'Blueprint$LastModifiedOn' => '<p>The date and time the blueprint was last modified.</p>', 'BlueprintRun$StartedOn' => '<p>The date and time that the blueprint run started.</p>', 'BlueprintRun$CompletedOn' => '<p>The date and time that the blueprint run completed.</p>', 'Crawl$StartedOn' => '<p>The date and time on which the crawl started.</p>', 'Crawl$CompletedOn' => '<p>The date and time on which the crawl completed.</p>', 'CreateDevEndpointResponse$CreatedTimestamp' => '<p>The point in time at which this <code>DevEndpoint</code> was created.</p>', 'CreateSecurityConfigurationResponse$CreatedTimestamp' => '<p>The time at which the new security configuration was created.</p>', 'DevEndpoint$CreatedTimestamp' => '<p>The point in time at which this DevEndpoint was created.</p>', 'DevEndpoint$LastModifiedTimestamp' => '<p>The point in time at which this <code>DevEndpoint</code> was last modified.</p>', 'Job$CreatedOn' => '<p>The time and date that this job definition was created.</p>', 'Job$LastModifiedOn' => '<p>The last point in time when this job definition was modified.</p>', 'JobRun$StartedOn' => '<p>The date and time at which this job run was started.</p>', 'JobRun$LastModifiedOn' => '<p>The last time that this job run was modified.</p>', 'JobRun$CompletedOn' => '<p>The date and time that this job run completed.</p>', 'LastActiveDefinition$LastModifiedOn' => '<p>The date and time the blueprint was last modified.</p>', 'SecurityConfiguration$CreatedTimeStamp' => '<p>The time at which this security configuration was created.</p>', 'Session$CreatedOn' => '<p>The time and date when the session was created.</p>', 'Workflow$CreatedOn' => '<p>The date and time when the workflow was created.</p>', 'Workflow$LastModifiedOn' => '<p>The date and time when the workflow was last modified.</p>', 'WorkflowRun$StartedOn' => '<p>The date and time when the workflow run was started.</p>', 'WorkflowRun$CompletedOn' => '<p>The date and time when the workflow run completed.</p>', ], ], 'Token' => [ 'base' => NULL, 'refs' => [ 'GetClassifiersRequest$NextToken' => '<p>An optional continuation token.</p>', 'GetClassifiersResponse$NextToken' => '<p>A continuation token.</p>', 'GetConnectionsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetConnectionsResponse$NextToken' => '<p>A continuation token, if the list of connections returned does not include the last of the filtered connections.</p>', 'GetCrawlerMetricsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetCrawlerMetricsResponse$NextToken' => '<p>A continuation token, if the returned list does not contain the last metric available.</p>', 'GetCrawlersRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'GetCrawlersResponse$NextToken' => '<p>A continuation token, if the returned list has not reached the end of those defined in this customer account.</p>', 'GetDatabasesRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetDatabasesResponse$NextToken' => '<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>', 'GetPartitionIndexesRequest$NextToken' => '<p>A continuation token, included if this is a continuation call.</p>', 'GetPartitionIndexesResponse$NextToken' => '<p>A continuation token, present if the current list segment is not the last.</p>', 'GetPartitionsRequest$NextToken' => '<p>A continuation token, if this is not the first call to retrieve these partitions.</p>', 'GetPartitionsResponse$NextToken' => '<p>A continuation token, if the returned list of partitions does not include the last one.</p>', 'GetResourcePoliciesRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'GetResourcePoliciesResponse$NextToken' => '<p>A continuation token, if the returned list does not contain the last resource policy available.</p>', 'GetTableVersionsRequest$NextToken' => '<p>A continuation token, if this is not the first call.</p>', 'GetTableVersionsResponse$NextToken' => '<p>A continuation token, if the list of available versions does not include the last one.</p>', 'GetTablesRequest$NextToken' => '<p>A continuation token, included if this is a continuation call.</p>', 'GetTablesResponse$NextToken' => '<p>A continuation token, present if the current list segment is not the last.</p>', 'GetUnfilteredPartitionsMetadataRequest$NextToken' => NULL, 'GetUnfilteredPartitionsMetadataResponse$NextToken' => NULL, 'GetUserDefinedFunctionsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'GetUserDefinedFunctionsResponse$NextToken' => '<p>A continuation token, if the list of functions returned does not include the last requested function.</p>', 'ListCrawlersRequest$NextToken' => '<p>A continuation token, if this is a continuation request.</p>', 'ListCrawlersResponse$NextToken' => '<p>A continuation token, if the returned list does not contain the last metric available.</p>', 'ListCrawlsRequest$NextToken' => '<p>A continuation token, if this is a continuation call.</p>', 'ListCrawlsResponse$NextToken' => '<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>', 'SearchTablesRequest$NextToken' => '<p>A continuation token, included if this is a continuation call.</p>', 'SearchTablesResponse$NextToken' => '<p>A continuation token, present if the current list segment is not the last.</p>', ], ], 'Topk' => [ 'base' => NULL, 'refs' => [ 'Spigot$Topk' => '<p>Specifies a number of records to write starting from the beginning of the dataset.</p>', ], ], 'TotalSegmentsInteger' => [ 'base' => NULL, 'refs' => [ 'Segment$TotalSegments' => '<p>The total number of segments.</p>', ], ], 'TransactionIdString' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteTableRequest$TransactionId' => '<p>The transaction ID at which to delete the table contents.</p>', 'CreateTableRequest$TransactionId' => '<p>The ID of the transaction.</p>', 'DeleteTableRequest$TransactionId' => '<p>The transaction ID at which to delete the table contents.</p>', 'GetPartitionsRequest$TransactionId' => '<p>The transaction ID at which to read the partition contents.</p>', 'GetTableRequest$TransactionId' => '<p>The transaction ID at which to read the table contents. </p>', 'GetTablesRequest$TransactionId' => '<p>The transaction ID at which to read the table contents.</p>', 'UpdateTableRequest$TransactionId' => '<p>The transaction ID at which to update the table contents. </p>', ], ], 'TransformEncryption' => [ 'base' => '<p>The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.</p> <p>Additionally, imported labels and trained transforms can now be encrypted using a customer provided KMS key.</p>', 'refs' => [ 'CreateMLTransformRequest$TransformEncryption' => '<p>The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.</p>', 'GetMLTransformResponse$TransformEncryption' => '<p>The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.</p>', 'MLTransform$TransformEncryption' => '<p>The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.</p>', ], ], 'TransformFilterCriteria' => [ 'base' => '<p>The criteria used to filter the machine learning transforms.</p>', 'refs' => [ 'GetMLTransformsRequest$Filter' => '<p>The filter transformation criteria.</p>', 'ListMLTransformsRequest$Filter' => '<p>A <code>TransformFilterCriteria</code> used to filter the machine learning transforms.</p>', ], ], 'TransformIdList' => [ 'base' => NULL, 'refs' => [ 'ListMLTransformsResponse$TransformIds' => '<p>The identifiers of all the machine learning transforms in the account, or the machine learning transforms with the specified tags.</p>', ], ], 'TransformList' => [ 'base' => NULL, 'refs' => [ 'GetMLTransformsResponse$Transforms' => '<p>A list of machine learning transforms.</p>', ], ], 'TransformParameters' => [ 'base' => '<p>The algorithm-specific parameters that are associated with the machine learning transform.</p>', 'refs' => [ 'CreateMLTransformRequest$Parameters' => '<p>The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type.</p>', 'GetMLTransformResponse$Parameters' => '<p>The configuration parameters that are specific to the algorithm used.</p>', 'MLTransform$Parameters' => '<p>A <code>TransformParameters</code> object. You can use parameters to tune (customize) the behavior of the machine learning transform by specifying what data it learns from and your preference on various tradeoffs (such as precious vs. recall, or accuracy vs. cost).</p>', 'UpdateMLTransformRequest$Parameters' => '<p>The configuration parameters that are specific to the transform type (algorithm) used. Conditionally dependent on the transform type.</p>', ], ], 'TransformSchema' => [ 'base' => NULL, 'refs' => [ 'GetMLTransformResponse$Schema' => '<p>The <code>Map&lt;Column, Type&gt;</code> object that represents the schema that this transform accepts. Has an upper bound of 100 columns.</p>', 'MLTransform$Schema' => '<p>A map of key-value pairs representing the columns and data types that this transform can run against. Has an upper bound of 100 columns.</p>', 'TransformFilterCriteria$Schema' => '<p>Filters on datasets with a specific schema. The <code>Map&lt;Column, Type&gt;</code> object is an array of key-value pairs representing the schema this transform accepts, where <code>Column</code> is the name of a column, and <code>Type</code> is the type of the data such as an integer or string. Has an upper bound of 100 columns.</p>', ], ], 'TransformSortColumnType' => [ 'base' => NULL, 'refs' => [ 'TransformSortCriteria$Column' => '<p>The column to be used in the sorting criteria that are associated with the machine learning transform.</p>', ], ], 'TransformSortCriteria' => [ 'base' => '<p>The sorting criteria that are associated with the machine learning transform.</p>', 'refs' => [ 'GetMLTransformsRequest$Sort' => '<p>The sorting criteria.</p>', 'ListMLTransformsRequest$Sort' => '<p>A <code>TransformSortCriteria</code> used to sort the machine learning transforms.</p>', ], ], 'TransformStatusType' => [ 'base' => NULL, 'refs' => [ 'GetMLTransformResponse$Status' => '<p>The last known status of the transform (to indicate whether it can be used or not). One of "NOT_READY", "READY", or "DELETING".</p>', 'MLTransform$Status' => '<p>The current status of the machine learning transform.</p>', 'TransformFilterCriteria$Status' => '<p>Filters the list of machine learning transforms by the last known status of the transforms (to indicate whether a transform can be used or not). One of "NOT_READY", "READY", or "DELETING".</p>', ], ], 'TransformType' => [ 'base' => NULL, 'refs' => [ 'EvaluationMetrics$TransformType' => '<p>The type of machine learning transform.</p>', 'TransformFilterCriteria$TransformType' => '<p>The type of machine learning transform that is used to filter the machine learning transforms.</p>', 'TransformParameters$TransformType' => '<p>The type of machine learning transform.</p> <p>For information about the types of machine learning transforms, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job-machine-learning-transform.html">Creating Machine Learning Transforms</a>.</p>', ], ], 'Trigger' => [ 'base' => '<p>Information about a specific trigger.</p>', 'refs' => [ 'GetTriggerResponse$Trigger' => '<p>The requested trigger definition.</p>', 'TriggerList$member' => NULL, 'TriggerNodeDetails$Trigger' => '<p>The information of the trigger represented by the trigger node.</p>', 'UpdateTriggerResponse$Trigger' => '<p>The resulting trigger definition.</p>', ], ], 'TriggerList' => [ 'base' => NULL, 'refs' => [ 'BatchGetTriggersResponse$Triggers' => '<p>A list of trigger definitions.</p>', 'GetTriggersResponse$Triggers' => '<p>A list of triggers for the specified job.</p>', ], ], 'TriggerNameList' => [ 'base' => NULL, 'refs' => [ 'BatchGetTriggersRequest$TriggerNames' => '<p>A list of trigger names, which may be the names returned from the <code>ListTriggers</code> operation.</p>', 'BatchGetTriggersResponse$TriggersNotFound' => '<p>A list of names of triggers not found.</p>', 'ListTriggersResponse$TriggerNames' => '<p>The names of all triggers in the account, or the triggers with the specified tags.</p>', ], ], 'TriggerNodeDetails' => [ 'base' => '<p>The details of a Trigger node present in the workflow.</p>', 'refs' => [ 'Node$TriggerDetails' => '<p>Details of the Trigger when the node represents a Trigger.</p>', ], ], 'TriggerState' => [ 'base' => NULL, 'refs' => [ 'Trigger$State' => '<p>The current state of the trigger.</p>', ], ], 'TriggerType' => [ 'base' => NULL, 'refs' => [ 'CreateTriggerRequest$Type' => '<p>The type of the new trigger.</p>', 'Trigger$Type' => '<p>The type of trigger that this is.</p>', ], ], 'TriggerUpdate' => [ 'base' => '<p>A structure used to provide information used to update a trigger. This object updates the previous trigger definition by overwriting it completely.</p>', 'refs' => [ 'UpdateTriggerRequest$TriggerUpdate' => '<p>The new values with which to update the trigger.</p>', ], ], 'TwoInputs' => [ 'base' => NULL, 'refs' => [ 'Join$Inputs' => '<p>The data inputs identified by their node names.</p>', 'Merge$Inputs' => '<p>The data inputs identified by their node names.</p>', 'Union$Inputs' => '<p>The node ID inputs to the transform.</p>', ], ], 'TypeString' => [ 'base' => NULL, 'refs' => [ 'ColumnStatistics$ColumnType' => '<p>The data type of the column.</p>', ], ], 'URI' => [ 'base' => NULL, 'refs' => [ 'Database$LocationUri' => '<p>The location of the database (for example, an HDFS path).</p>', 'DatabaseInput$LocationUri' => '<p>The location of the database (for example, an HDFS path). </p>', 'ResourceUri$Uri' => '<p>The URI for accessing the resource.</p>', ], ], 'UnfilteredPartition' => [ 'base' => NULL, 'refs' => [ 'UnfilteredPartitionList$member' => NULL, ], ], 'UnfilteredPartitionList' => [ 'base' => NULL, 'refs' => [ 'GetUnfilteredPartitionsMetadataResponse$UnfilteredPartitions' => NULL, ], ], 'Union' => [ 'base' => '<p>Specifies a transform that combines the rows from two or more datasets into a single result.</p>', 'refs' => [ 'CodeGenConfigurationNode$Union' => '<p>Specifies a transform that combines the rows from two or more datasets into a single result.</p>', ], ], 'UnionType' => [ 'base' => NULL, 'refs' => [ 'Union$UnionType' => '<p>Indicates the type of Union transform. </p> <p>Specify <code>ALL</code> to join all rows from data sources to the resulting DynamicFrame. The resulting union does not remove duplicate rows.</p> <p>Specify <code>DISTINCT</code> to remove duplicate rows in the resulting DynamicFrame.</p>', ], ], 'UntagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'UntagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateBehavior' => [ 'base' => NULL, 'refs' => [ 'SchemaChangePolicy$UpdateBehavior' => '<p>The update behavior when the crawler finds a changed schema.</p>', ], ], 'UpdateBlueprintRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateBlueprintResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateCatalogBehavior' => [ 'base' => NULL, 'refs' => [ 'CatalogSchemaChangePolicy$UpdateBehavior' => '<p>The update behavior when the crawler finds a changed schema.</p>', 'DirectSchemaChangePolicy$UpdateBehavior' => '<p>The update behavior when the crawler finds a changed schema.</p>', ], ], 'UpdateClassifierRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateClassifierResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateColumnStatisticsForPartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateColumnStatisticsForPartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateColumnStatisticsForTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateColumnStatisticsForTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateColumnStatisticsList' => [ 'base' => NULL, 'refs' => [ 'UpdateColumnStatisticsForPartitionRequest$ColumnStatisticsList' => '<p>A list of the column statistics.</p>', 'UpdateColumnStatisticsForTableRequest$ColumnStatisticsList' => '<p>A list of the column statistics.</p>', ], ], 'UpdateConnectionRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateConnectionResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateCrawlerRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateCrawlerResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateCrawlerScheduleRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateCrawlerScheduleResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateCsvClassifierRequest' => [ 'base' => '<p>Specifies a custom CSV classifier to be updated.</p>', 'refs' => [ 'UpdateClassifierRequest$CsvClassifier' => '<p>A <code>CsvClassifier</code> object with updated fields.</p>', ], ], 'UpdateDatabaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateDatabaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateDevEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateDevEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateGrokClassifierRequest' => [ 'base' => '<p>Specifies a grok classifier to update when passed to <code>UpdateClassifier</code>.</p>', 'refs' => [ 'UpdateClassifierRequest$GrokClassifier' => '<p>A <code>GrokClassifier</code> object with updated fields.</p>', ], ], 'UpdateJobRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateJobResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateJsonClassifierRequest' => [ 'base' => '<p>Specifies a JSON classifier to be updated.</p>', 'refs' => [ 'UpdateClassifierRequest$JsonClassifier' => '<p>A <code>JsonClassifier</code> object with updated fields.</p>', ], ], 'UpdateMLTransformRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateMLTransformResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdatePartitionRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdatePartitionResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateRegistryInput' => [ 'base' => NULL, 'refs' => [], ], 'UpdateRegistryResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateSchemaInput' => [ 'base' => NULL, 'refs' => [], ], 'UpdateSchemaResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateTableRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateTableResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateTriggerRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateTriggerResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateUserDefinedFunctionRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateUserDefinedFunctionResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateWorkflowRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateWorkflowResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateXMLClassifierRequest' => [ 'base' => '<p>Specifies an XML classifier to be updated.</p>', 'refs' => [ 'UpdateClassifierRequest$XMLClassifier' => '<p>An <code>XMLClassifier</code> object with updated fields.</p>', ], ], 'UpdatedTimestamp' => [ 'base' => NULL, 'refs' => [ 'GetRegistryResponse$UpdatedTime' => '<p>The date and time the registry was updated.</p>', 'GetSchemaResponse$UpdatedTime' => '<p>The date and time the schema was updated.</p>', 'RegistryListItem$UpdatedTime' => '<p>The date the registry was updated.</p>', 'SchemaListItem$UpdatedTime' => '<p>The date and time that a schema was updated.</p>', ], ], 'UpsertRedshiftTargetOptions' => [ 'base' => '<p>The options to configure an upsert operation when writing to a Redshift target .</p>', 'refs' => [ 'RedshiftTarget$UpsertRedshiftOptions' => '<p>The set of options to configure an upsert operation when writing to a Redshift target.</p>', ], ], 'UriString' => [ 'base' => NULL, 'refs' => [ 'CreateJobRequest$LogUri' => '<p>This field is reserved for future use.</p>', 'ExportLabelsTaskRunProperties$OutputS3Path' => '<p>The Amazon Simple Storage Service (Amazon S3) path where you will export the labels.</p>', 'ImportLabelsTaskRunProperties$InputS3Path' => '<p>The Amazon Simple Storage Service (Amazon S3) path from where you will import the labels.</p>', 'Job$LogUri' => '<p>This field is reserved for future use.</p>', 'JobUpdate$LogUri' => '<p>This field is reserved for future use.</p>', 'LabelingSetGenerationTaskRunProperties$OutputS3Path' => '<p>The Amazon Simple Storage Service (Amazon S3) path where you will generate the labeling set.</p>', 'StartExportLabelsTaskRunRequest$OutputS3Path' => '<p>The Amazon S3 path where you export the labels.</p>', 'StartImportLabelsTaskRunRequest$InputS3Path' => '<p>The Amazon Simple Storage Service (Amazon S3) path from where you import the labels.</p>', 'StartMLLabelingSetGenerationTaskRunRequest$OutputS3Path' => '<p>The Amazon Simple Storage Service (Amazon S3) path where you generate the labeling set.</p>', ], ], 'UserDefinedFunction' => [ 'base' => '<p>Represents the equivalent of a Hive user-defined function (<code>UDF</code>) definition.</p>', 'refs' => [ 'GetUserDefinedFunctionResponse$UserDefinedFunction' => '<p>The requested function definition.</p>', 'UserDefinedFunctionList$member' => NULL, ], ], 'UserDefinedFunctionInput' => [ 'base' => '<p>A structure used to create or update a user-defined function.</p>', 'refs' => [ 'CreateUserDefinedFunctionRequest$FunctionInput' => '<p>A <code>FunctionInput</code> object that defines the function to create in the Data Catalog.</p>', 'UpdateUserDefinedFunctionRequest$FunctionInput' => '<p>A <code>FunctionInput</code> object that redefines the function in the Data Catalog.</p>', ], ], 'UserDefinedFunctionList' => [ 'base' => NULL, 'refs' => [ 'GetUserDefinedFunctionsResponse$UserDefinedFunctions' => '<p>A list of requested function definitions.</p>', ], ], 'ValidationException' => [ 'base' => '<p>A value could not be validated.</p>', 'refs' => [], ], 'ValueString' => [ 'base' => NULL, 'refs' => [ 'BoundedPartitionValueList$member' => NULL, 'ConnectionProperties$value' => NULL, 'PropertyPredicate$Key' => '<p>The key of the property.</p>', 'PropertyPredicate$Value' => '<p>The value of the property.</p>', 'SearchTablesRequest$SearchText' => '<p>A string used for a text search.</p> <p>Specifying a value in quotes filters based on an exact match to the value.</p>', 'SortCriterion$FieldName' => '<p>The name of the field on which to sort.</p>', 'ValueStringList$member' => NULL, ], ], 'ValueStringList' => [ 'base' => NULL, 'refs' => [ 'DeleteColumnStatisticsForPartitionRequest$PartitionValues' => '<p>A list of partition values identifying the partition.</p>', 'DeletePartitionRequest$PartitionValues' => '<p>The values that define the partition.</p>', 'GetColumnStatisticsForPartitionRequest$PartitionValues' => '<p>A list of partition values identifying the partition.</p>', 'GetPartitionRequest$PartitionValues' => '<p>The values that define the partition.</p>', 'GetUnfilteredPartitionMetadataRequest$PartitionValues' => NULL, 'Partition$Values' => '<p>The values of the partition.</p>', 'PartitionError$PartitionValues' => '<p>The values that define the partition.</p>', 'PartitionInput$Values' => '<p>The values of the partition. Although this parameter is not required by the SDK, you must specify this parameter for a valid input.</p> <p>The values for the keys for the new partition must be passed as an array of String objects that must be ordered in the same order as the partition keys appearing in the Amazon S3 prefix. Otherwise Glue will add the values to the wrong keys.</p>', 'PartitionValueList$Values' => '<p>The list of values.</p>', 'UpdateColumnStatisticsForPartitionRequest$PartitionValues' => '<p>A list of partition values identifying the partition.</p>', ], ], 'VersionId' => [ 'base' => NULL, 'refs' => [ 'Crawler$Version' => '<p>The version of the crawler.</p>', 'CsvClassifier$Version' => '<p>The version of this classifier.</p>', 'GrokClassifier$Version' => '<p>The version of this classifier.</p>', 'JsonClassifier$Version' => '<p>The version of this classifier.</p>', 'XMLClassifier$Version' => '<p>The version of this classifier.</p>', ], ], 'VersionLongNumber' => [ 'base' => NULL, 'refs' => [ 'CreateSchemaResponse$LatestSchemaVersion' => '<p>The latest version of the schema associated with the returned schema definition.</p>', 'CreateSchemaResponse$NextSchemaVersion' => '<p>The next version of the schema associated with the returned schema definition.</p>', 'GetSchemaResponse$LatestSchemaVersion' => '<p>The latest version of the schema associated with the returned schema definition.</p>', 'GetSchemaResponse$NextSchemaVersion' => '<p>The next version of the schema associated with the returned schema definition.</p>', 'GetSchemaVersionResponse$VersionNumber' => '<p>The version number of the schema.</p>', 'PutSchemaVersionMetadataResponse$VersionNumber' => '<p>The version number of the schema.</p>', 'RegisterSchemaVersionResponse$VersionNumber' => '<p>The version of this schema (for sync flow only, in case this is the first version).</p>', 'RemoveSchemaVersionMetadataResponse$VersionNumber' => '<p>The version number of the schema.</p>', 'SchemaReference$SchemaVersionNumber' => '<p>The version number of the schema.</p>', 'SchemaVersionErrorItem$VersionNumber' => '<p>The version number of the schema.</p>', 'SchemaVersionListItem$VersionNumber' => '<p>The version number of the schema.</p>', 'SchemaVersionNumber$VersionNumber' => '<p>The version number of the schema.</p>', ], ], 'VersionMismatchException' => [ 'base' => '<p>There was a version conflict.</p>', 'refs' => [], ], 'VersionString' => [ 'base' => NULL, 'refs' => [ 'BatchDeleteTableVersionList$member' => NULL, 'DeleteTableVersionRequest$VersionId' => '<p>The ID of the table version to be deleted. A <code>VersionID</code> is a string representation of an integer. Each version is incremented by 1.</p>', 'GetTableVersionRequest$VersionId' => '<p>The ID value of the table version to be retrieved. A <code>VersionID</code> is a string representation of an integer. Each version is incremented by 1. </p>', 'Table$VersionId' => '<p>The ID of the table version.</p>', 'TableVersion$VersionId' => '<p>The ID value that identifies this table version. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.</p>', 'TableVersionError$VersionId' => '<p>The ID value of the version in question. A <code>VersionID</code> is a string representation of an integer. Each version is incremented by 1.</p>', 'UpdateTableRequest$VersionId' => '<p>The version ID at which to update the table contents. </p>', ], ], 'VersionsString' => [ 'base' => NULL, 'refs' => [ 'DeleteSchemaVersionsInput$Versions' => '<p>A version range may be supplied which may be of the format:</p> <ul> <li> <p>a single version number, 5</p> </li> <li> <p>a range, 5-8 : deletes versions 5, 6, 7, 8</p> </li> </ul>', ], ], 'ViewTextString' => [ 'base' => NULL, 'refs' => [ 'Table$ViewOriginalText' => '<p>If the table is a view, the original text of the view; otherwise <code>null</code>.</p>', 'Table$ViewExpandedText' => '<p>If the table is a view, the expanded text of the view; otherwise <code>null</code>.</p>', 'TableInput$ViewOriginalText' => '<p>If the table is a view, the original text of the view; otherwise <code>null</code>.</p>', 'TableInput$ViewExpandedText' => '<p>If the table is a view, the expanded text of the view; otherwise <code>null</code>.</p>', ], ], 'WorkerType' => [ 'base' => NULL, 'refs' => [ 'CreateDevEndpointRequest$WorkerType' => '<p>The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul> <p>Known issue: when a development endpoint is created with the <code>G.2X</code> <code>WorkerType</code> configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>', 'CreateDevEndpointResponse$WorkerType' => '<p>The type of predefined worker that is allocated to the development endpoint. May be a value of Standard, G.1X, or G.2X.</p>', 'CreateJobRequest$WorkerType' => '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li> </ul>', 'CreateMLTransformRequest$WorkerType' => '<p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul> <p> <code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p> <ul> <li> <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code> cannot be set.</p> </li> <li> <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code> can be set.</p> </li> <li> <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p> </li> <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</p> </li> </ul>', 'CreateSessionRequest$WorkerType' => '<p>The type of predefined worker that is allocated to use for the session. Accepts a value of Standard, G.1X, G.2X, or G.025X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li> </ul>', 'DevEndpoint$WorkerType' => '<p>The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul> <p>Known issue: when a development endpoint is created with the <code>G.2X</code> <code>WorkerType</code> configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>', 'GetMLTransformResponse$WorkerType' => '<p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>', 'Job$WorkerType' => '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li> </ul>', 'JobRun$WorkerType' => '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li> </ul>', 'JobUpdate$WorkerType' => '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li> </ul>', 'MLTransform$WorkerType' => '<p>The type of predefined worker that is allocated when a task of this transform runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul> <p> <code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p> <ul> <li> <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code> cannot be set.</p> </li> <li> <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code> can be set.</p> </li> <li> <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p> </li> <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</p> </li> </ul>', 'StartJobRunRequest$WorkerType' => '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li> </ul>', 'UpdateMLTransformRequest$WorkerType' => '<p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>', ], ], 'Workflow' => [ 'base' => '<p>A workflow is a collection of multiple dependent Glue jobs and crawlers that are run to complete a complex ETL task. A workflow manages the execution and monitoring of all its jobs and crawlers.</p>', 'refs' => [ 'GetWorkflowResponse$Workflow' => '<p>The resource metadata for the workflow.</p>', 'Workflows$member' => NULL, ], ], 'WorkflowGraph' => [ 'base' => '<p>A workflow graph represents the complete workflow containing all the Glue components present in the workflow and all the directed connections between them.</p>', 'refs' => [ 'Workflow$Graph' => '<p>The graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.</p>', 'WorkflowRun$Graph' => '<p>The graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.</p>', ], ], 'WorkflowNames' => [ 'base' => NULL, 'refs' => [ 'BatchGetWorkflowsRequest$Names' => '<p>A list of workflow names, which may be the names returned from the <code>ListWorkflows</code> operation.</p>', 'BatchGetWorkflowsResponse$MissingWorkflows' => '<p>A list of names of workflows not found.</p>', 'ListWorkflowsResponse$Workflows' => '<p>List of names of workflows in the account.</p>', ], ], 'WorkflowRun' => [ 'base' => '<p>A workflow run is an execution of a workflow providing all the runtime information.</p>', 'refs' => [ 'GetWorkflowRunResponse$Run' => '<p>The requested workflow run metadata.</p>', 'Workflow$LastRun' => '<p>The information about the last execution of the workflow.</p>', 'WorkflowRuns$member' => NULL, ], ], 'WorkflowRunProperties' => [ 'base' => NULL, 'refs' => [ 'CreateWorkflowRequest$DefaultRunProperties' => '<p>A collection of properties to be used as part of each execution of the workflow.</p>', 'GetWorkflowRunPropertiesResponse$RunProperties' => '<p>The workflow run properties which were set during the specified run.</p>', 'PutWorkflowRunPropertiesRequest$RunProperties' => '<p>The properties to put for the specified run.</p>', 'StartWorkflowRunRequest$RunProperties' => '<p>The workflow run properties for the new workflow run.</p>', 'UpdateWorkflowRequest$DefaultRunProperties' => '<p>A collection of properties to be used as part of each execution of the workflow.</p>', 'Workflow$DefaultRunProperties' => '<p>A collection of properties to be used as part of each execution of the workflow. The run properties are made available to each job in the workflow. A job can modify the properties for the next jobs in the flow.</p>', 'WorkflowRun$WorkflowRunProperties' => '<p>The workflow run properties which were set during the run.</p>', ], ], 'WorkflowRunStatistics' => [ 'base' => '<p>Workflow run statistics provides statistics about the workflow run.</p>', 'refs' => [ 'WorkflowRun$Statistics' => '<p>The statistics of the run.</p>', ], ], 'WorkflowRunStatus' => [ 'base' => NULL, 'refs' => [ 'WorkflowRun$Status' => '<p>The status of the workflow run.</p>', ], ], 'WorkflowRuns' => [ 'base' => NULL, 'refs' => [ 'GetWorkflowRunsResponse$Runs' => '<p>A list of workflow run metadata objects.</p>', ], ], 'Workflows' => [ 'base' => NULL, 'refs' => [ 'BatchGetWorkflowsResponse$Workflows' => '<p>A list of workflow resource metadata.</p>', ], ], 'XMLClassifier' => [ 'base' => '<p>A classifier for <code>XML</code> content.</p>', 'refs' => [ 'Classifier$XMLClassifier' => '<p>A classifier for XML content.</p>', ], ], ],];
