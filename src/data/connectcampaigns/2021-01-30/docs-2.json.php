<?php
// This file was auto-generated from sdk-root/src/data/connectcampaigns/2021-01-30/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>Provide APIs to create and manage Amazon Connect Campaigns.</p>', 'operations' => [ 'CreateCampaign' => '<p>Creates a campaign for the specified Amazon Connect account. This API is idempotent.</p>', 'DeleteCampaign' => '<p>Deletes a campaign from the specified Amazon Connect account.</p>', 'DeleteConnectInstanceConfig' => '<p>Deletes a connect instance config from the specified AWS account.</p>', 'DeleteInstanceOnboardingJob' => '<p>Delete the Connect Campaigns onboarding job for the specified Amazon Connect instance.</p>', 'DescribeCampaign' => '<p>Describes the specific campaign.</p>', 'GetCampaignState' => '<p>Get state of a campaign for the specified Amazon Connect account.</p>', 'GetCampaignStateBatch' => '<p>Get state of campaigns for the specified Amazon Connect account.</p>', 'GetConnectInstanceConfig' => '<p>Get the specific Connect instance config.</p>', 'GetInstanceOnboardingJobStatus' => '<p>Get the specific instance onboarding job status.</p>', 'ListCampaigns' => '<p>Provides summary information about the campaigns under the specified Amazon Connect account.</p>', 'ListTagsForResource' => '<p>List tags for a resource.</p>', 'PauseCampaign' => '<p>Pauses a campaign for the specified Amazon Connect account.</p>', 'PutDialRequestBatch' => '<p>Creates dials requests for the specified campaign Amazon Connect account. This API is idempotent.</p>', 'ResumeCampaign' => '<p>Stops a campaign for the specified Amazon Connect account.</p>', 'StartCampaign' => '<p>Starts a campaign for the specified Amazon Connect account.</p>', 'StartInstanceOnboardingJob' => '<p>Onboard the specific Amazon Connect instance to Connect Campaigns.</p>', 'StopCampaign' => '<p>Stops a campaign for the specified Amazon Connect account.</p>', 'TagResource' => '<p>Tag a resource.</p>', 'UntagResource' => '<p>Untag a resource.</p>', 'UpdateCampaignDialerConfig' => '<p>Updates the dialer config of a campaign. This API is idempotent.</p>', 'UpdateCampaignName' => '<p>Updates the name of a campaign. This API is idempotent.</p>', 'UpdateCampaignOutboundCallConfig' => '<p>Updates the outbound call config of a campaign. This API is idempotent.</p>', ], 'shapes' => [ 'AccessDeniedException' => [ 'base' => '<p>You do not have sufficient access to perform this action.</p>', 'refs' => [], ], 'AnswerMachineDetectionConfig' => [ 'base' => '<p>Answering Machine Detection config</p>', 'refs' => [ 'OutboundCallConfig$answerMachineDetectionConfig' => NULL, 'UpdateCampaignOutboundCallConfigRequest$answerMachineDetectionConfig' => NULL, ], ], 'Arn' => [ 'base' => '<p>Arn</p>', 'refs' => [ 'ListTagsForResourceRequest$arn' => NULL, 'TagResourceRequest$arn' => NULL, 'UntagResourceRequest$arn' => NULL, ], ], 'AttributeName' => [ 'base' => '<p>The key of the attribute. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>', 'refs' => [ 'Attributes$key' => NULL, ], ], 'AttributeValue' => [ 'base' => '<p>The value of the attribute.</p>', 'refs' => [ 'Attributes$value' => NULL, ], ], 'Attributes' => [ 'base' => '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p>', 'refs' => [ 'DialRequest$attributes' => NULL, ], ], 'BandwidthAllocation' => [ 'base' => '<p>The bandwidth allocation of a queue resource.</p>', 'refs' => [ 'PredictiveDialerConfig$bandwidthAllocation' => NULL, 'ProgressiveDialerConfig$bandwidthAllocation' => NULL, ], ], 'Boolean' => [ 'base' => NULL, 'refs' => [ 'AnswerMachineDetectionConfig$enableAnswerMachineDetection' => '<p>Enable or disable answering machine detection</p>', ], ], 'Campaign' => [ 'base' => '<p>An Amazon Connect campaign.</p>', 'refs' => [ 'DescribeCampaignResponse$campaign' => NULL, ], ], 'CampaignArn' => [ 'base' => '<p>The resource name of an Amazon Connect campaign.</p>', 'refs' => [ 'Campaign$arn' => NULL, 'CampaignSummary$arn' => NULL, 'CreateCampaignResponse$arn' => NULL, ], ], 'CampaignFilters' => [ 'base' => '<p>Filter model by type</p>', 'refs' => [ 'ListCampaignsRequest$filters' => NULL, ], ], 'CampaignId' => [ 'base' => '<p>Identifier representing a Campaign</p>', 'refs' => [ 'Campaign$id' => NULL, 'CampaignSummary$id' => NULL, 'CreateCampaignResponse$id' => NULL, 'DeleteCampaignRequest$id' => NULL, 'DescribeCampaignRequest$id' => NULL, 'FailedCampaignStateResponse$campaignId' => NULL, 'GetCampaignStateBatchRequestCampaignIdsList$member' => NULL, 'GetCampaignStateRequest$id' => NULL, 'PauseCampaignRequest$id' => NULL, 'PutDialRequestBatchRequest$id' => NULL, 'ResumeCampaignRequest$id' => NULL, 'StartCampaignRequest$id' => NULL, 'StopCampaignRequest$id' => NULL, 'SuccessfulCampaignStateResponse$campaignId' => NULL, 'UpdateCampaignDialerConfigRequest$id' => NULL, 'UpdateCampaignNameRequest$id' => NULL, 'UpdateCampaignOutboundCallConfigRequest$id' => NULL, ], ], 'CampaignName' => [ 'base' => '<p>The name of an Amazon Connect Campaign name.</p>', 'refs' => [ 'Campaign$name' => NULL, 'CampaignSummary$name' => NULL, 'CreateCampaignRequest$name' => NULL, 'UpdateCampaignNameRequest$name' => NULL, ], ], 'CampaignState' => [ 'base' => '<p>State of a campaign</p>', 'refs' => [ 'GetCampaignStateResponse$state' => NULL, 'InvalidCampaignStateException$state' => NULL, 'SuccessfulCampaignStateResponse$state' => NULL, ], ], 'CampaignSummary' => [ 'base' => '<p>An Amazon Connect campaign summary.</p>', 'refs' => [ 'CampaignSummaryList$member' => NULL, ], ], 'CampaignSummaryList' => [ 'base' => '<p>A list of Amazon Connect campaigns.</p>', 'refs' => [ 'ListCampaignsResponse$campaignSummaryList' => NULL, ], ], 'ClientToken' => [ 'base' => '<p>Client provided parameter used for idempotency. Its value must be unique for each request.</p>', 'refs' => [ 'DialRequest$clientToken' => NULL, 'FailedRequest$clientToken' => NULL, 'SuccessfulRequest$clientToken' => NULL, ], ], 'ConflictException' => [ 'base' => '<p>The request could not be processed because of conflict in the current state of the resource.</p>', 'refs' => [], ], 'ContactFlowId' => [ 'base' => '<p>The identifier of the contact flow for the outbound call.</p>', 'refs' => [ 'OutboundCallConfig$connectContactFlowId' => NULL, 'UpdateCampaignOutboundCallConfigRequest$connectContactFlowId' => NULL, ], ], 'CreateCampaignRequest' => [ 'base' => '<p>The request for Create Campaign API.</p>', 'refs' => [], ], 'CreateCampaignResponse' => [ 'base' => '<p>The response for Create Campaign API</p>', 'refs' => [], ], 'DeleteCampaignRequest' => [ 'base' => '<p>DeleteCampaignRequest</p>', 'refs' => [], ], 'DeleteConnectInstanceConfigRequest' => [ 'base' => '<p>DeleteCampaignRequest</p>', 'refs' => [], ], 'DeleteInstanceOnboardingJobRequest' => [ 'base' => '<p>The request for DeleteInstanceOnboardingJob API.</p>', 'refs' => [], ], 'DescribeCampaignRequest' => [ 'base' => '<p>DescribeCampaignRequests</p>', 'refs' => [], ], 'DescribeCampaignResponse' => [ 'base' => '<p>DescribeCampaignResponse</p>', 'refs' => [], ], 'DestinationPhoneNumber' => [ 'base' => '<p>The phone number of the customer, in E.164 format.</p>', 'refs' => [ 'DialRequest$phoneNumber' => NULL, ], ], 'DialRequest' => [ 'base' => '<p>A dial request for a campaign.</p>', 'refs' => [ 'DialRequestList$member' => NULL, ], ], 'DialRequestId' => [ 'base' => '<p>Identifier representing a Dial request</p>', 'refs' => [ 'FailedRequest$id' => NULL, 'SuccessfulRequest$id' => NULL, ], ], 'DialRequestList' => [ 'base' => '<p>A list of dial requests.</p>', 'refs' => [ 'PutDialRequestBatchRequest$dialRequests' => NULL, ], ], 'DialerConfig' => [ 'base' => '<p>The possible types of dialer config parameters</p>', 'refs' => [ 'Campaign$dialerConfig' => NULL, 'CreateCampaignRequest$dialerConfig' => NULL, 'UpdateCampaignDialerConfigRequest$dialerConfig' => NULL, ], ], 'Enabled' => [ 'base' => '<p>Boolean to indicate if custom encryption has been enabled.</p>', 'refs' => [ 'EncryptionConfig$enabled' => NULL, ], ], 'EncryptionConfig' => [ 'base' => '<p>Encryption config for Connect Instance. Note that sensitive data will always be encrypted. If disabled, service will perform encryption with its own key. If enabled, a KMS key id needs to be provided and KMS charges will apply. KMS is only type supported</p>', 'refs' => [ 'InstanceConfig$encryptionConfig' => NULL, 'StartInstanceOnboardingJobRequest$encryptionConfig' => NULL, ], ], 'EncryptionKey' => [ 'base' => '<p>KMS key id/arn for encryption config.</p>', 'refs' => [ 'EncryptionConfig$keyArn' => NULL, ], ], 'EncryptionType' => [ 'base' => '<p>Server-side encryption type.</p>', 'refs' => [ 'EncryptionConfig$encryptionType' => NULL, ], ], 'FailedCampaignStateResponse' => [ 'base' => '<p>Failed response of campaign state</p>', 'refs' => [ 'FailedCampaignStateResponseList$member' => NULL, ], ], 'FailedCampaignStateResponseList' => [ 'base' => '<p>List of failed requests of campaign state</p>', 'refs' => [ 'GetCampaignStateBatchResponse$failedRequests' => NULL, ], ], 'FailedRequest' => [ 'base' => '<p>A failed request identified by the unique client token.</p>', 'refs' => [ 'FailedRequestList$member' => NULL, ], ], 'FailedRequestList' => [ 'base' => '<p>A list of failed requests.</p>', 'refs' => [ 'PutDialRequestBatchResponse$failedRequests' => NULL, ], ], 'FailureCode' => [ 'base' => '<p>A predefined code indicating the error that caused the failure.</p>', 'refs' => [ 'FailedRequest$failureCode' => NULL, ], ], 'GetCampaignStateBatchFailureCode' => [ 'base' => '<p>A predefined code indicating the error that caused the failure in getting state of campaigns</p>', 'refs' => [ 'FailedCampaignStateResponse$failureCode' => NULL, ], ], 'GetCampaignStateBatchRequest' => [ 'base' => '<p>GetCampaignStateBatchRequest</p>', 'refs' => [], ], 'GetCampaignStateBatchRequestCampaignIdsList' => [ 'base' => '<p>List of CampaignId</p>', 'refs' => [ 'GetCampaignStateBatchRequest$campaignIds' => NULL, ], ], 'GetCampaignStateBatchResponse' => [ 'base' => '<p>GetCampaignStateBatchResponse</p>', 'refs' => [], ], 'GetCampaignStateRequest' => [ 'base' => '<p>GetCampaignStateRequest</p>', 'refs' => [], ], 'GetCampaignStateResponse' => [ 'base' => '<p>GetCampaignStateResponse</p>', 'refs' => [], ], 'GetConnectInstanceConfigRequest' => [ 'base' => '<p>GetConnectInstanceConfigRequest</p>', 'refs' => [], ], 'GetConnectInstanceConfigResponse' => [ 'base' => '<p>GetConnectInstanceConfigResponse</p>', 'refs' => [], ], 'GetInstanceOnboardingJobStatusRequest' => [ 'base' => '<p>GetInstanceOnboardingJobStatusRequest</p>', 'refs' => [], ], 'GetInstanceOnboardingJobStatusResponse' => [ 'base' => '<p>GetInstanceOnboardingJobStatusResponse</p>', 'refs' => [], ], 'InstanceConfig' => [ 'base' => '<p>Instance config object</p>', 'refs' => [ 'GetConnectInstanceConfigResponse$connectInstanceConfig' => NULL, ], ], 'InstanceId' => [ 'base' => '<p>Amazon Connect Instance Id</p>', 'refs' => [ 'Campaign$connectInstanceId' => NULL, 'CampaignSummary$connectInstanceId' => NULL, 'CreateCampaignRequest$connectInstanceId' => NULL, 'DeleteConnectInstanceConfigRequest$connectInstanceId' => NULL, 'DeleteInstanceOnboardingJobRequest$connectInstanceId' => NULL, 'GetConnectInstanceConfigRequest$connectInstanceId' => NULL, 'GetInstanceOnboardingJobStatusRequest$connectInstanceId' => NULL, 'InstanceConfig$connectInstanceId' => NULL, 'InstanceIdFilter$value' => NULL, 'InstanceOnboardingJobStatus$connectInstanceId' => NULL, 'StartInstanceOnboardingJobRequest$connectInstanceId' => NULL, ], ], 'InstanceIdFilter' => [ 'base' => '<p>Connect instance identifier filter</p>', 'refs' => [ 'CampaignFilters$instanceIdFilter' => NULL, ], ], 'InstanceIdFilterOperator' => [ 'base' => '<p>Operators for Connect instance identifier filter</p>', 'refs' => [ 'InstanceIdFilter$operator' => NULL, ], ], 'InstanceOnboardingJobFailureCode' => [ 'base' => '<p>Enumeration of the possible failure codes for instance onboarding job</p>', 'refs' => [ 'InstanceOnboardingJobStatus$failureCode' => NULL, ], ], 'InstanceOnboardingJobStatus' => [ 'base' => '<p>Instance onboarding job status object</p>', 'refs' => [ 'GetInstanceOnboardingJobStatusResponse$connectInstanceOnboardingJobStatus' => NULL, 'StartInstanceOnboardingJobResponse$connectInstanceOnboardingJobStatus' => NULL, ], ], 'InstanceOnboardingJobStatusCode' => [ 'base' => '<p>Enumeration of the possible states for instance onboarding job</p>', 'refs' => [ 'InstanceOnboardingJobStatus$status' => NULL, ], ], 'InternalServerException' => [ 'base' => '<p>Request processing failed because of an error or failure with the service.</p>', 'refs' => [], ], 'InvalidCampaignStateException' => [ 'base' => '<p>The request could not be processed because of conflict in the current state of the campaign.</p>', 'refs' => [], ], 'InvalidStateException' => [ 'base' => '<p>The request could not be processed because of conflict in the current state.</p>', 'refs' => [], ], 'ListCampaignsRequest' => [ 'base' => '<p>ListCampaignsRequest</p>', 'refs' => [], ], 'ListCampaignsResponse' => [ 'base' => '<p>ListCampaignsResponse</p>', 'refs' => [], ], 'ListTagsForResourceRequest' => [ 'base' => '<p>ListTagsForResource</p>', 'refs' => [], ], 'ListTagsForResourceResponse' => [ 'base' => '<p>ListTagsForResponse</p>', 'refs' => [], ], 'MaxResults' => [ 'base' => '<p>The maximum number of results to return per page.</p>', 'refs' => [ 'ListCampaignsRequest$maxResults' => NULL, ], ], 'NextToken' => [ 'base' => '<p>The token for the next set of results.</p>', 'refs' => [ 'ListCampaignsRequest$nextToken' => NULL, 'ListCampaignsResponse$nextToken' => NULL, ], ], 'OutboundCallConfig' => [ 'base' => '<p>The configuration used for outbound calls.</p>', 'refs' => [ 'Campaign$outboundCallConfig' => NULL, 'CreateCampaignRequest$outboundCallConfig' => NULL, ], ], 'PauseCampaignRequest' => [ 'base' => '<p>PauseCampaignRequest</p>', 'refs' => [], ], 'PredictiveDialerConfig' => [ 'base' => '<p>Predictive Dialer config</p>', 'refs' => [ 'DialerConfig$predictiveDialerConfig' => NULL, ], ], 'ProgressiveDialerConfig' => [ 'base' => '<p>Progressive Dialer config</p>', 'refs' => [ 'DialerConfig$progressiveDialerConfig' => NULL, ], ], 'PutDialRequestBatchRequest' => [ 'base' => '<p>PutDialRequestBatchRequest</p>', 'refs' => [], ], 'PutDialRequestBatchResponse' => [ 'base' => '<p>PutDialRequestBatchResponse</p>', 'refs' => [], ], 'QueueId' => [ 'base' => '<p>The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.</p>', 'refs' => [ 'OutboundCallConfig$connectQueueId' => NULL, ], ], 'ResourceNotFoundException' => [ 'base' => '<p>The specified resource was not found.</p>', 'refs' => [], ], 'ResumeCampaignRequest' => [ 'base' => '<p>ResumeCampaignRequest</p>', 'refs' => [], ], 'ServiceLinkedRoleArn' => [ 'base' => '<p>Service linked role arn</p>', 'refs' => [ 'InstanceConfig$serviceLinkedRoleArn' => NULL, ], ], 'ServiceQuotaExceededException' => [ 'base' => '<p>Request would cause a service quota to be exceeded.</p>', 'refs' => [], ], 'SourcePhoneNumber' => [ 'base' => '<p>The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.</p>', 'refs' => [ 'OutboundCallConfig$connectSourcePhoneNumber' => NULL, 'UpdateCampaignOutboundCallConfigRequest$connectSourcePhoneNumber' => NULL, ], ], 'StartCampaignRequest' => [ 'base' => '<p>StartCampaignRequest</p>', 'refs' => [], ], 'StartInstanceOnboardingJobRequest' => [ 'base' => '<p>The request for StartInstanceOnboardingJob API.</p>', 'refs' => [], ], 'StartInstanceOnboardingJobResponse' => [ 'base' => '<p>The response for StartInstanceOnboardingJob API.</p>', 'refs' => [], ], 'StopCampaignRequest' => [ 'base' => '<p>StopCampaignRequest</p>', 'refs' => [], ], 'String' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$message' => NULL, 'ConflictException$message' => NULL, 'InternalServerException$message' => NULL, 'InvalidCampaignStateException$message' => NULL, 'InvalidStateException$message' => NULL, 'ResourceNotFoundException$message' => NULL, 'ServiceQuotaExceededException$message' => NULL, 'ThrottlingException$message' => NULL, 'ValidationException$message' => NULL, ], ], 'SuccessfulCampaignStateResponse' => [ 'base' => '<p>Successful response of campaign state</p>', 'refs' => [ 'SuccessfulCampaignStateResponseList$member' => NULL, ], ], 'SuccessfulCampaignStateResponseList' => [ 'base' => '<p>List of successful response of campaign state</p>', 'refs' => [ 'GetCampaignStateBatchResponse$successfulRequests' => NULL, ], ], 'SuccessfulRequest' => [ 'base' => '<p>A successful request identified by the unique client token.</p>', 'refs' => [ 'SuccessfulRequestList$member' => NULL, ], ], 'SuccessfulRequestList' => [ 'base' => '<p>A list of successful requests identified by the unique client token.</p>', 'refs' => [ 'PutDialRequestBatchResponse$successfulRequests' => NULL, ], ], 'TagKey' => [ 'base' => '<p>Tag key.</p>', 'refs' => [ 'TagKeyList$member' => NULL, 'TagMap$key' => NULL, ], ], 'TagKeyList' => [ 'base' => '<p>List of tag keys.</p>', 'refs' => [ 'UntagResourceRequest$tagKeys' => NULL, ], ], 'TagMap' => [ 'base' => '<p>Tag map with key and value.</p>', 'refs' => [ 'Campaign$tags' => NULL, 'CreateCampaignRequest$tags' => NULL, 'CreateCampaignResponse$tags' => NULL, 'ListTagsForResourceResponse$tags' => NULL, 'TagResourceRequest$tags' => NULL, ], ], 'TagResourceRequest' => [ 'base' => '<p>TagResourceRequest</p>', 'refs' => [], ], 'TagValue' => [ 'base' => '<p>Tag value.</p>', 'refs' => [ 'TagMap$value' => NULL, ], ], 'ThrottlingException' => [ 'base' => '<p>The request was denied due to request throttling.</p>', 'refs' => [], ], 'TimeStamp' => [ 'base' => '<p>Timestamp with no UTC offset or timezone</p>', 'refs' => [ 'DialRequest$expirationTime' => NULL, ], ], 'UntagResourceRequest' => [ 'base' => '<p>UntagResourceRequest</p>', 'refs' => [], ], 'UpdateCampaignDialerConfigRequest' => [ 'base' => '<p>UpdateCampaignDialerConfigRequest</p>', 'refs' => [], ], 'UpdateCampaignNameRequest' => [ 'base' => '<p>UpdateCampaignNameRequest</p>', 'refs' => [], ], 'UpdateCampaignOutboundCallConfigRequest' => [ 'base' => '<p>UpdateCampaignOutboundCallConfigRequest</p>', 'refs' => [], ], 'ValidationException' => [ 'base' => '<p>The input fails to satisfy the constraints specified by an AWS service.</p>', 'refs' => [], ], 'XAmazonErrorType' => [ 'base' => '<p>A header that defines the error encountered while processing the request.</p>', 'refs' => [ 'AccessDeniedException$xAmzErrorType' => NULL, 'ConflictException$xAmzErrorType' => NULL, 'InternalServerException$xAmzErrorType' => NULL, 'InvalidCampaignStateException$xAmzErrorType' => NULL, 'InvalidStateException$xAmzErrorType' => NULL, 'ResourceNotFoundException$xAmzErrorType' => NULL, 'ServiceQuotaExceededException$xAmzErrorType' => NULL, 'ThrottlingException$xAmzErrorType' => NULL, 'ValidationException$xAmzErrorType' => NULL, ], ], ],];
