<?php
// This file was auto-generated from sdk-root/src/data/license-manager-user-subscriptions/2018-05-10/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.</p>', 'operations' => [ 'AssociateUser' => '<p>Associates the user to an EC2 instance to utilize user-based subscriptions.</p> <note> <p>Your estimated bill for charges on the number of users and related costs will take 48 hours to appear for billing periods that haven\'t closed (marked as <b>Pending</b> billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.</p> </note>', 'CreateLicenseServerEndpoint' => '<p>Creates a network endpoint for the Remote Desktop Services (RDS) license server.</p>', 'DeleteLicenseServerEndpoint' => '<p>Deletes a <code>LicenseServerEndpoint</code> resource.</p>', 'DeregisterIdentityProvider' => '<p>Deregisters the Active Directory identity provider from License Manager user-based subscriptions.</p>', 'DisassociateUser' => '<p>Disassociates the user from an EC2 instance providing user-based subscriptions.</p>', 'ListIdentityProviders' => '<p>Lists the Active Directory identity providers for user-based subscriptions.</p>', 'ListInstances' => '<p>Lists the EC2 instances providing user-based subscriptions.</p>', 'ListLicenseServerEndpoints' => '<p>List the Remote Desktop Services (RDS) License Server endpoints </p>', 'ListProductSubscriptions' => '<p>Lists the user-based subscription products available from an identity provider.</p>', 'ListTagsForResource' => '<p>Returns the list of tags for the specified resource.</p>', 'ListUserAssociations' => '<p>Lists user associations for an identity provider.</p>', 'RegisterIdentityProvider' => '<p>Registers an identity provider for user-based subscriptions.</p>', 'StartProductSubscription' => '<p>Starts a product subscription for a user with the specified identity provider.</p> <note> <p>Your estimated bill for charges on the number of users and related costs will take 48 hours to appear for billing periods that haven\'t closed (marked as <b>Pending</b> billing status) in Amazon Web Services Billing. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html">Viewing your monthly charges</a> in the <i>Amazon Web Services Billing User Guide</i>.</p> </note>', 'StopProductSubscription' => '<p>Stops a product subscription for a user with the specified identity provider.</p>', 'TagResource' => '<p>Adds tags to a resource.</p>', 'UntagResource' => '<p>Removes tags from a resource.</p>', 'UpdateIdentityProviderSettings' => '<p>Updates additional product configuration settings for the registered identity provider.</p>', ], 'shapes' => [ 'AccessDeniedException' => [ 'base' => '<p>You don\'t have sufficient access to perform this action.</p>', 'refs' => [], ], 'ActiveDirectoryIdentityProvider' => [ 'base' => '<p>Details about an Active Directory identity provider.</p>', 'refs' => [ 'IdentityProvider$ActiveDirectoryIdentityProvider' => '<p>The <code>ActiveDirectoryIdentityProvider</code> resource contains settings and other details about a specific Active Directory identity provider.</p>', ], ], 'ActiveDirectorySettings' => [ 'base' => '<p>Contains network access and credential details that are needed for user administration in the Active Directory.</p>', 'refs' => [ 'ActiveDirectoryIdentityProvider$ActiveDirectorySettings' => '<p>The <code>ActiveDirectorySettings</code> resource contains details about the Active Directory, including network access details such as domain name and IP addresses, and the credential provider for user administration.</p>', ], ], 'ActiveDirectorySettingsDomainIpv4ListList' => [ 'base' => NULL, 'refs' => [ 'ActiveDirectorySettings$DomainIpv4List' => '<p>A list of domain IPv4 addresses that are used for the Active Directory.</p>', ], ], 'ActiveDirectoryType' => [ 'base' => NULL, 'refs' => [ 'ActiveDirectoryIdentityProvider$ActiveDirectoryType' => '<p>The type of Active Directory â€“ either a self-managed Active Directory or an Amazon Web Services Managed Active Directory.</p>', ], ], 'Arn' => [ 'base' => NULL, 'refs' => [ 'CreateLicenseServerEndpointRequest$IdentityProviderArn' => '<p>The Amazon Resource Name (ARN) that identifies the <code>IdentityProvider</code> resource that contains details about a registered identity provider. In the case of Active Directory, that can be a self-managed Active Directory or an Amazon Web Services Managed Active Directory that contains user identity details.</p>', 'CreateLicenseServerEndpointResponse$IdentityProviderArn' => '<p>The Amazon Resource Name (ARN) of the identity provider specified in the request.</p>', 'CreateLicenseServerEndpointResponse$LicenseServerEndpointArn' => '<p>The ARN of the <code>LicenseServerEndpoint</code> resource.</p>', 'DeleteLicenseServerEndpointRequest$LicenseServerEndpointArn' => '<p>The Amazon Resource Name (ARN) that identifies the <code>LicenseServerEndpoint</code> resource to delete.</p>', 'DeregisterIdentityProviderRequest$IdentityProviderArn' => '<p>The Amazon Resource Name (ARN) that identifies the identity provider to deregister.</p>', 'DisassociateUserRequest$InstanceUserArn' => '<p>The Amazon Resource Name (ARN) of the user to disassociate from the EC2 instance.</p>', 'IdentityProviderSummary$IdentityProviderArn' => '<p>The Amazon Resource Name (ARN) of the identity provider.</p>', 'InstanceUserSummary$InstanceUserArn' => '<p>The Amazon Resource Name (ARN) that identifies the instance user.</p>', 'LicenseServerEndpoint$LicenseServerEndpointArn' => '<p>The ARN of the <code>ServerEndpoint</code> resource for the RDS license server.</p>', 'ProductUserSummary$ProductUserArn' => '<p>The Amazon Resource Name (ARN) for this product user.</p>', 'StopProductSubscriptionRequest$ProductUserArn' => '<p>The Amazon Resource Name (ARN) of the product user.</p>', 'UpdateIdentityProviderSettingsRequest$IdentityProviderArn' => '<p>The Amazon Resource Name (ARN) of the identity provider to update.</p>', ], ], 'AssociateUserRequest' => [ 'base' => NULL, 'refs' => [], ], 'AssociateUserResponse' => [ 'base' => NULL, 'refs' => [], ], 'BoxInteger' => [ 'base' => NULL, 'refs' => [ 'ListIdentityProvidersRequest$MaxResults' => '<p>The maximum number of results to return from a single request.</p>', 'ListInstancesRequest$MaxResults' => '<p>The maximum number of results to return from a single request.</p>', 'ListProductSubscriptionsRequest$MaxResults' => '<p>The maximum number of results to return from a single request.</p>', 'ListUserAssociationsRequest$MaxResults' => '<p>The maximum number of results to return from a single request.</p>', ], ], 'ConflictException' => [ 'base' => '<p>The request couldn\'t be completed because it conflicted with the current state of the resource.</p>', 'refs' => [], ], 'CreateLicenseServerEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateLicenseServerEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'CredentialsProvider' => [ 'base' => '<p>Contains information about the credential provider for user administration.</p>', 'refs' => [ 'ActiveDirectorySettings$DomainCredentialsProvider' => '<p>Points to the <code>CredentialsProvider</code> resource that contains information about the credential provider for user administration.</p>', 'RdsSalSettings$RdsSalCredentialsProvider' => '<p>The <code>CredentialsProvider</code> resource contains a reference to the credentials provider that\'s used for RDS license server user administration.</p>', ], ], 'DeleteLicenseServerEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteLicenseServerEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeregisterIdentityProviderRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeregisterIdentityProviderResponse' => [ 'base' => NULL, 'refs' => [], ], 'Directory' => [ 'base' => NULL, 'refs' => [ 'ActiveDirectoryIdentityProvider$DirectoryId' => '<p>The directory ID for an Active Directory identity provider.</p>', ], ], 'DisassociateUserRequest' => [ 'base' => NULL, 'refs' => [], ], 'DisassociateUserResponse' => [ 'base' => NULL, 'refs' => [], ], 'DomainNetworkSettings' => [ 'base' => '<p>Contains network settings for the Active Directory domain.</p>', 'refs' => [ 'ActiveDirectorySettings$DomainNetworkSettings' => '<p>The <code>DomainNetworkSettings</code> resource contains an array of subnets that apply for the Active Directory.</p>', ], ], 'DomainNetworkSettingsSubnetsList' => [ 'base' => NULL, 'refs' => [ 'DomainNetworkSettings$Subnets' => '<p>Contains a list of subnets that apply for the Active Directory domain.</p>', ], ], 'Filter' => [ 'base' => '<p>A filter name and value pair that is used to return more specific results from a describe or list operation. You can use filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p>', 'refs' => [ 'FilterList$member' => NULL, ], ], 'FilterList' => [ 'base' => NULL, 'refs' => [ 'ListIdentityProvidersRequest$Filters' => '<p>You can use the following filters to streamline results:</p> <ul> <li> <p>Product</p> </li> <li> <p>DirectoryId</p> </li> </ul>', 'ListInstancesRequest$Filters' => '<p>You can use the following filters to streamline results:</p> <ul> <li> <p>Status</p> </li> <li> <p>InstanceId</p> </li> </ul>', 'ListLicenseServerEndpointsRequest$Filters' => '<p>You can use the following filters to streamline results:</p> <ul> <li> <p>IdentityProviderArn</p> </li> </ul>', 'ListProductSubscriptionsRequest$Filters' => '<p>You can use the following filters to streamline results:</p> <ul> <li> <p>Status</p> </li> <li> <p>Username</p> </li> <li> <p>Domain</p> </li> </ul>', 'ListUserAssociationsRequest$Filters' => '<p>You can use the following filters to streamline results:</p> <ul> <li> <p>Status</p> </li> <li> <p>Username</p> </li> <li> <p>Domain</p> </li> </ul>', ], ], 'IdentityProvider' => [ 'base' => '<p>Refers to an identity provider.</p>', 'refs' => [ 'AssociateUserRequest$IdentityProvider' => '<p>The identity provider for the user.</p>', 'DeregisterIdentityProviderRequest$IdentityProvider' => '<p>An object that specifies details for the Active Directory identity provider.</p>', 'DisassociateUserRequest$IdentityProvider' => '<p>An object that specifies details for the Active Directory identity provider.</p>', 'IdentityProviderSummary$IdentityProvider' => '<p>The <code>IdentityProvider</code> resource contains information about an identity provider.</p>', 'InstanceUserSummary$IdentityProvider' => '<p>The <code>IdentityProvider</code> resource specifies details about the identity provider.</p>', 'ListProductSubscriptionsRequest$IdentityProvider' => '<p>An object that specifies details for the identity provider.</p>', 'ListUserAssociationsRequest$IdentityProvider' => '<p>An object that specifies details for the identity provider.</p>', 'ProductUserSummary$IdentityProvider' => '<p>An object that specifies details for the identity provider.</p>', 'RegisterIdentityProviderRequest$IdentityProvider' => '<p>An object that specifies details for the identity provider to register.</p>', 'StartProductSubscriptionRequest$IdentityProvider' => '<p>An object that specifies details for the identity provider.</p>', 'StopProductSubscriptionRequest$IdentityProvider' => '<p>An object that specifies details for the identity provider.</p>', 'UpdateIdentityProviderSettingsRequest$IdentityProvider' => NULL, ], ], 'IdentityProviderSummary' => [ 'base' => '<p>Describes an identity provider.</p>', 'refs' => [ 'DeregisterIdentityProviderResponse$IdentityProviderSummary' => '<p>Metadata that describes the results of an identity provider operation.</p>', 'IdentityProviderSummaryList$member' => NULL, 'RegisterIdentityProviderResponse$IdentityProviderSummary' => '<p>Metadata that describes the results of an identity provider operation.</p>', 'UpdateIdentityProviderSettingsResponse$IdentityProviderSummary' => NULL, ], ], 'IdentityProviderSummaryList' => [ 'base' => NULL, 'refs' => [ 'ListIdentityProvidersResponse$IdentityProviderSummaries' => '<p>An array of <code>IdentityProviderSummary</code> resources that contain details about the Active Directory identity providers that meet the request criteria.</p>', ], ], 'InstanceSummary' => [ 'base' => '<p>Describes an EC2 instance providing user-based subscriptions.</p>', 'refs' => [ 'InstanceSummaryList$member' => NULL, ], ], 'InstanceSummaryList' => [ 'base' => NULL, 'refs' => [ 'ListInstancesResponse$InstanceSummaries' => '<p>An array of <code>InstanceSummary</code> resources that contain details about the instances that provide user-based subscriptions and also meet the request criteria.</p>', ], ], 'InstanceUserSummary' => [ 'base' => '<p>Describes users of an EC2 instance providing user-based subscriptions.</p>', 'refs' => [ 'AssociateUserResponse$InstanceUserSummary' => '<p>Metadata that describes the associate user operation.</p>', 'DisassociateUserResponse$InstanceUserSummary' => '<p>Metadata that describes the associate user operation.</p>', 'InstanceUserSummaryList$member' => NULL, ], ], 'InstanceUserSummaryList' => [ 'base' => NULL, 'refs' => [ 'ListUserAssociationsResponse$InstanceUserSummaries' => '<p>Metadata that describes the list user association operation.</p>', ], ], 'InternalServerException' => [ 'base' => '<p>An exception occurred with the service.</p>', 'refs' => [], ], 'IpV4' => [ 'base' => NULL, 'refs' => [ 'ActiveDirectorySettingsDomainIpv4ListList$member' => NULL, ], ], 'LicenseServer' => [ 'base' => '<p>Information about a Remote Desktop Services (RDS) license server.</p>', 'refs' => [ 'LicenseServerList$member' => NULL, ], ], 'LicenseServerEndpoint' => [ 'base' => '<p>Contains details about a network endpoint for a Remote Desktop Services (RDS) license server.</p>', 'refs' => [ 'DeleteLicenseServerEndpointResponse$LicenseServerEndpoint' => '<p>Shows details from the <code>LicenseServerEndpoint</code> resource that was deleted.</p>', 'LicenseServerEndpointList$member' => NULL, ], ], 'LicenseServerEndpointId' => [ 'base' => NULL, 'refs' => [ 'LicenseServerEndpoint$LicenseServerEndpointId' => '<p>The ID of the license server endpoint.</p>', ], ], 'LicenseServerEndpointList' => [ 'base' => NULL, 'refs' => [ 'ListLicenseServerEndpointsResponse$LicenseServerEndpoints' => '<p>An array of <code>LicenseServerEndpoint</code> resources that contain detailed information about the RDS License Servers that meet the request criteria.</p>', ], ], 'LicenseServerEndpointProvisioningStatus' => [ 'base' => NULL, 'refs' => [ 'LicenseServer$ProvisioningStatus' => '<p>The current state of the provisioning process for the RDS license server.</p>', 'LicenseServerEndpoint$LicenseServerEndpointProvisioningStatus' => '<p>The current state of the provisioning process for the RDS license server endpoint</p>', ], ], 'LicenseServerHealthStatus' => [ 'base' => NULL, 'refs' => [ 'LicenseServer$HealthStatus' => '<p>The health status of the RDS license server.</p>', ], ], 'LicenseServerList' => [ 'base' => NULL, 'refs' => [ 'LicenseServerEndpoint$LicenseServers' => '<p>An array of <code>LicenseServer</code> resources that represent the license servers that are accessed through this endpoint.</p>', ], ], 'LicenseServerSettings' => [ 'base' => '<p>The settings to configure your license server.</p>', 'refs' => [ 'CreateLicenseServerEndpointRequest$LicenseServerSettings' => '<p>The <code>LicenseServerSettings</code> resource to create for the endpoint. The settings include the type of license server and the Secrets Manager secret that enables administrators to add or remove users associated with the license server.</p>', ], ], 'ListIdentityProvidersRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListIdentityProvidersResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListInstancesRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListInstancesResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListLicenseServerEndpointsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListLicenseServerEndpointsRequestMaxResultsInteger' => [ 'base' => NULL, 'refs' => [ 'ListLicenseServerEndpointsRequest$MaxResults' => '<p>The maximum number of results to return from a single request.</p>', ], ], 'ListLicenseServerEndpointsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListProductSubscriptionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListProductSubscriptionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListTagsForResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListTagsForResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListUserAssociationsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListUserAssociationsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ProductUserSummary' => [ 'base' => '<p>A summary of the user-based subscription products for a specific user.</p>', 'refs' => [ 'ProductUserSummaryList$member' => NULL, 'StartProductSubscriptionResponse$ProductUserSummary' => '<p>Metadata that describes the start product subscription operation.</p>', 'StopProductSubscriptionResponse$ProductUserSummary' => '<p>Metadata that describes the start product subscription operation.</p>', ], ], 'ProductUserSummaryList' => [ 'base' => NULL, 'refs' => [ 'ListProductSubscriptionsResponse$ProductUserSummaries' => '<p>Metadata that describes the list product subscriptions operation.</p>', ], ], 'RdsSalSettings' => [ 'base' => '<p>Server settings that are specific to a Remote Desktop Services (RDS) license server.</p>', 'refs' => [ 'ServerSettings$RdsSalSettings' => '<p>The <code>RdsSalSettings</code> resource contains settings to configure a specific Remote Desktop Services (RDS) license server.</p>', ], ], 'RegisterIdentityProviderRequest' => [ 'base' => NULL, 'refs' => [], ], 'RegisterIdentityProviderResponse' => [ 'base' => NULL, 'refs' => [], ], 'ResourceArn' => [ 'base' => NULL, 'refs' => [ 'ListTagsForResourceRequest$ResourceArn' => '<p>The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.</p>', 'TagResourceRequest$ResourceArn' => '<p>The Amazon Resource Name (ARN) of the resource that you want to tag.</p>', 'UntagResourceRequest$ResourceArn' => '<p>The Amazon Resource Name (ARN) of the resource that you want to remove tags from.</p>', ], ], 'ResourceNotFoundException' => [ 'base' => '<p>The resource couldn\'t be found.</p>', 'refs' => [], ], 'SecretsManagerCredentialsProvider' => [ 'base' => '<p>Contains a credentials secret that\'s stored in Secrets Manager.</p>', 'refs' => [ 'CredentialsProvider$SecretsManagerCredentialsProvider' => '<p>Identifies the Secrets Manager secret that contains credentials needed for user administration in the Active Directory.</p>', ], ], 'SecretsManagerCredentialsProviderSecretIdString' => [ 'base' => NULL, 'refs' => [ 'SecretsManagerCredentialsProvider$SecretId' => '<p>The ID of the Secrets Manager secret that contains credentials.</p>', ], ], 'SecurityGroup' => [ 'base' => NULL, 'refs' => [ 'Settings$SecurityGroupId' => '<p>A security group ID that allows inbound TCP port 1688 communication between resources in your VPC and the VPC endpoint for activation servers.</p>', 'UpdateSettings$SecurityGroupId' => '<p>A security group ID that allows inbound TCP port 1688 communication between resources in your VPC and the VPC endpoints for activation servers.</p>', ], ], 'ServerEndpoint' => [ 'base' => '<p>A network endpoint through which you can access one or more servers.</p>', 'refs' => [ 'LicenseServerEndpoint$ServerEndpoint' => '<p>The <code>ServerEndpoint</code> resource contains the network address of the RDS license server endpoint.</p>', ], ], 'ServerSettings' => [ 'base' => '<p>Contains settings for a specific server.</p>', 'refs' => [ 'LicenseServerSettings$ServerSettings' => '<p>The <code>ServerSettings</code> resource contains the settings for your server.</p>', ], ], 'ServerType' => [ 'base' => NULL, 'refs' => [ 'DeleteLicenseServerEndpointRequest$ServerType' => '<p>The type of License Server that the delete request refers to.</p>', 'LicenseServerEndpoint$ServerType' => '<p>The type of license server.</p>', 'LicenseServerSettings$ServerType' => '<p>The type of license server.</p>', ], ], 'ServiceQuotaExceededException' => [ 'base' => '<p>The request failed because a service quota is exceeded.</p>', 'refs' => [], ], 'Settings' => [ 'base' => '<p>The registered identity providerâ€™s product related configuration settings such as the subnets to provision VPC endpoints, and the security group ID that is associated with the VPC endpoints. The security group should permit inbound TCP port 1688 communication from resources in the VPC.</p>', 'refs' => [ 'IdentityProviderSummary$Settings' => '<p>The <code>Settings</code> resource contains details about the registered identity providerâ€™s product related configuration settings, such as the subnets to provision VPC endpoints.</p>', 'RegisterIdentityProviderRequest$Settings' => '<p>The registered identity providerâ€™s product related configuration settings such as the subnets to provision VPC endpoints.</p>', ], ], 'SettingsSubnetsList' => [ 'base' => NULL, 'refs' => [ 'Settings$Subnets' => '<p>The subnets defined for the registered identity provider.</p>', ], ], 'StartProductSubscriptionRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartProductSubscriptionResponse' => [ 'base' => NULL, 'refs' => [], ], 'StopProductSubscriptionRequest' => [ 'base' => NULL, 'refs' => [], ], 'StopProductSubscriptionResponse' => [ 'base' => NULL, 'refs' => [], ], 'String' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$message' => NULL, 'ActiveDirectorySettings$DomainName' => '<p>The domain name for the Active Directory.</p>', 'AssociateUserRequest$Domain' => '<p>The domain name of the Active Directory that contains information for the user to associate.</p>', 'AssociateUserRequest$InstanceId' => '<p>The ID of the EC2 instance that provides the user-based subscription.</p>', 'AssociateUserRequest$Username' => '<p>The user name from the identity provider.</p>', 'ConflictException$message' => NULL, 'DeregisterIdentityProviderRequest$Product' => '<p>The name of the user-based subscription product.</p> <p>Valid values: <code>VISUAL_STUDIO_ENTERPRISE</code> | <code>VISUAL_STUDIO_PROFESSIONAL</code> | <code>OFFICE_PROFESSIONAL_PLUS</code> </p>', 'DisassociateUserRequest$Domain' => '<p>The domain name of the Active Directory that contains information for the user to disassociate.</p>', 'DisassociateUserRequest$InstanceId' => '<p>The ID of the EC2 instance which provides user-based subscriptions.</p>', 'DisassociateUserRequest$Username' => '<p>The user name from the Active Directory identity provider for the user.</p>', 'Filter$Attribute' => '<p>The name of an attribute to use as a filter.</p>', 'Filter$Operation' => '<p>The type of search (For example, eq, geq, leq)</p>', 'Filter$Value' => '<p>Value of the filter.</p>', 'IdentityProviderSummary$FailureMessage' => '<p>The failure message associated with an identity provider.</p>', 'IdentityProviderSummary$Product' => '<p>The name of the user-based subscription product.</p>', 'IdentityProviderSummary$Status' => '<p>The status of the identity provider.</p>', 'InstanceSummary$InstanceId' => '<p>The ID of the EC2 instance, which provides user-based subscriptions.</p>', 'InstanceSummary$LastStatusCheckDate' => '<p>The date of the last status check.</p>', 'InstanceSummary$Status' => '<p>The status of an EC2 instance resource.</p>', 'InstanceSummary$StatusMessage' => '<p>The status message for an EC2 instance.</p>', 'InstanceUserSummary$AssociationDate' => '<p>The date a user was associated with an EC2 instance.</p>', 'InstanceUserSummary$DisassociationDate' => '<p>The date a user was disassociated from an EC2 instance.</p>', 'InstanceUserSummary$Domain' => '<p>The domain name of the Active Directory that contains the user information for the product subscription.</p>', 'InstanceUserSummary$InstanceId' => '<p>The ID of the EC2 instance that provides user-based subscriptions.</p>', 'InstanceUserSummary$Status' => '<p>The status of a user associated with an EC2 instance.</p>', 'InstanceUserSummary$StatusMessage' => '<p>The status message for users of an EC2 instance.</p>', 'InstanceUserSummary$Username' => '<p>The user name from the identity provider for the user.</p>', 'InternalServerException$message' => NULL, 'LicenseServer$Ipv4Address' => '<p>A list of domain IPv4 addresses that are used for the RDS license server.</p>', 'LicenseServerEndpoint$IdentityProviderArn' => '<p>The Amazon Resource Name (ARN) of the identity provider that\'s associated with the RDS license server endpoint.</p>', 'LicenseServerEndpoint$StatusMessage' => '<p>The message associated with the provisioning status, if there is one.</p>', 'ListIdentityProvidersRequest$NextToken' => '<p>A token to specify where to start paginating. This is the nextToken from a previously truncated response.</p>', 'ListIdentityProvidersResponse$NextToken' => '<p>The next token used for paginated responses. When this field isn\'t empty, there are additional elements that the service hasn\'t included in this request. Use this token with the next request to retrieve additional objects.</p>', 'ListInstancesRequest$NextToken' => '<p>A token to specify where to start paginating. This is the nextToken from a previously truncated response.</p>', 'ListInstancesResponse$NextToken' => '<p>The next token used for paginated responses. When this field isn\'t empty, there are additional elements that the service hasn\'t included in this request. Use this token with the next request to retrieve additional objects.</p>', 'ListLicenseServerEndpointsRequest$NextToken' => '<p>A token to specify where to start paginating. This is the nextToken from a previously truncated response.</p>', 'ListLicenseServerEndpointsResponse$NextToken' => '<p>The next token used for paginated responses. When this field isn\'t empty, there are additional elements that the service hasn\'t included in this request. Use this token with the next request to retrieve additional objects.</p>', 'ListProductSubscriptionsRequest$NextToken' => '<p>A token to specify where to start paginating. This is the nextToken from a previously truncated response.</p>', 'ListProductSubscriptionsRequest$Product' => '<p>The name of the user-based subscription product.</p> <p>Valid values: <code>VISUAL_STUDIO_ENTERPRISE</code> | <code>VISUAL_STUDIO_PROFESSIONAL</code> | <code>OFFICE_PROFESSIONAL_PLUS</code> </p>', 'ListProductSubscriptionsResponse$NextToken' => '<p>The next token used for paginated responses. When this field isn\'t empty, there are additional elements that the service hasn\'t included in this request. Use this token with the next request to retrieve additional objects.</p>', 'ListUserAssociationsRequest$InstanceId' => '<p>The ID of the EC2 instance, which provides user-based subscriptions.</p>', 'ListUserAssociationsRequest$NextToken' => '<p>A token to specify where to start paginating. This is the nextToken from a previously truncated response.</p>', 'ListUserAssociationsResponse$NextToken' => '<p>The next token used for paginated responses. When this field isn\'t empty, there are additional elements that the service hasn\'t included in this request. Use this token with the next request to retrieve additional objects.</p>', 'ProductUserSummary$Domain' => '<p>The domain name of the Active Directory that contains the user information for the product subscription.</p>', 'ProductUserSummary$Product' => '<p>The name of the user-based subscription product.</p>', 'ProductUserSummary$Status' => '<p>The status of a product for this user.</p>', 'ProductUserSummary$StatusMessage' => '<p>The status message for a product for this user.</p>', 'ProductUserSummary$SubscriptionEndDate' => '<p>The end date of a subscription.</p>', 'ProductUserSummary$SubscriptionStartDate' => '<p>The start date of a subscription.</p>', 'ProductUserSummary$Username' => '<p>The user name from the identity provider for this product user.</p>', 'RegisterIdentityProviderRequest$Product' => '<p>The name of the user-based subscription product.</p> <p>Valid values: <code>VISUAL_STUDIO_ENTERPRISE</code> | <code>VISUAL_STUDIO_PROFESSIONAL</code> | <code>OFFICE_PROFESSIONAL_PLUS</code> </p>', 'ResourceNotFoundException$message' => NULL, 'ServerEndpoint$Endpoint' => '<p>The network address of the endpoint.</p>', 'ServiceQuotaExceededException$message' => NULL, 'StartProductSubscriptionRequest$Domain' => '<p>The domain name of the Active Directory that contains the user for whom to start the product subscription.</p>', 'StartProductSubscriptionRequest$Product' => '<p>The name of the user-based subscription product.</p> <p>Valid values: <code>VISUAL_STUDIO_ENTERPRISE</code> | <code>VISUAL_STUDIO_PROFESSIONAL</code> | <code>OFFICE_PROFESSIONAL_PLUS</code> </p>', 'StartProductSubscriptionRequest$Username' => '<p>The user name from the identity provider of the user.</p>', 'StopProductSubscriptionRequest$Domain' => '<p>The domain name of the Active Directory that contains the user for whom to stop the product subscription.</p>', 'StopProductSubscriptionRequest$Product' => '<p>The name of the user-based subscription product.</p> <p>Valid values: <code>VISUAL_STUDIO_ENTERPRISE</code> | <code>VISUAL_STUDIO_PROFESSIONAL</code> | <code>OFFICE_PROFESSIONAL_PLUS</code> </p>', 'StopProductSubscriptionRequest$Username' => '<p>The user name from the identity provider for the user.</p>', 'StringList$member' => NULL, 'TagKeyList$member' => NULL, 'Tags$key' => NULL, 'Tags$value' => NULL, 'ThrottlingException$message' => NULL, 'UpdateIdentityProviderSettingsRequest$Product' => '<p>The name of the user-based subscription product.</p> <p>Valid values: <code>VISUAL_STUDIO_ENTERPRISE</code> | <code>VISUAL_STUDIO_PROFESSIONAL</code> | <code>OFFICE_PROFESSIONAL_PLUS</code> </p>', 'ValidationException$message' => NULL, ], ], 'StringList' => [ 'base' => NULL, 'refs' => [ 'InstanceSummary$Products' => '<p>A list of provided user-based subscription products.</p>', ], ], 'Subnet' => [ 'base' => NULL, 'refs' => [ 'DomainNetworkSettingsSubnetsList$member' => NULL, 'SettingsSubnetsList$member' => NULL, 'Subnets$member' => NULL, ], ], 'Subnets' => [ 'base' => NULL, 'refs' => [ 'UpdateSettings$AddSubnets' => '<p>The ID of one or more subnets in which License Manager will create a VPC endpoint for products that require connectivity to activation servers.</p>', 'UpdateSettings$RemoveSubnets' => '<p>The ID of one or more subnets to remove.</p>', ], ], 'TagKeyList' => [ 'base' => NULL, 'refs' => [ 'UntagResourceRequest$TagKeys' => '<p>The tag keys to remove from the resource.</p>', ], ], 'TagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'TagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'Tags' => [ 'base' => NULL, 'refs' => [ 'AssociateUserRequest$Tags' => '<p>The tags that apply for the user association.</p>', 'CreateLicenseServerEndpointRequest$Tags' => '<p>The tags that apply for the license server endpoint.</p>', 'ListTagsForResourceResponse$Tags' => '<p>The tags for the specified resource.</p>', 'RegisterIdentityProviderRequest$Tags' => '<p>The tags that apply to the identity provider\'s registration.</p>', 'StartProductSubscriptionRequest$Tags' => '<p>The tags that apply to the product subscription.</p>', 'TagResourceRequest$Tags' => '<p>The tags to apply to the specified resource.</p>', ], ], 'ThrottlingException' => [ 'base' => '<p>The request was denied because of request throttling. Retry the request.</p>', 'refs' => [], ], 'Timestamp' => [ 'base' => NULL, 'refs' => [ 'LicenseServerEndpoint$CreationTime' => '<p>The timestamp when License Manager created the license server endpoint.</p>', ], ], 'UntagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'UntagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateIdentityProviderSettingsRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateIdentityProviderSettingsResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateSettings' => [ 'base' => '<p>Updates the registered identity providerâ€™s product related configuration settings such as the subnets to provision VPC endpoints.</p>', 'refs' => [ 'UpdateIdentityProviderSettingsRequest$UpdateSettings' => '<p>Updates the registered identity providerâ€™s product related configuration settings. You can update any combination of settings in a single operation such as the:</p> <ul> <li> <p>Subnets which you want to add to provision VPC endpoints.</p> </li> <li> <p>Subnets which you want to remove the VPC endpoints from.</p> </li> <li> <p>Security group ID which permits traffic to the VPC endpoints.</p> </li> </ul>', ], ], 'ValidationException' => [ 'base' => '<p>A parameter is not valid.</p>', 'refs' => [], ], ],];
