<?php
// This file was auto-generated from sdk-root/src/data/marketplace-deployment/2023-01-25/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>The AWS Marketplace Deployment Service supports the Quick Launch experience, which is a deployment option for software as a service (SaaS) products. Quick Launch simplifies and reduces the time, resources, and steps required to configure, deploy, and launch a products. The AWS Marketplace Deployment Service provides sellers with a secure method for passing deployment parameters (for example, API keys and external IDs) to buyers during the Quick Launch experience.</p>', 'operations' => [ 'ListTagsForResource' => '<p>Lists all tags that have been added to a deployment parameter resource.</p>', 'PutDeploymentParameter' => '<p>Creates or updates a deployment parameter and is targeted by <code>catalog</code> and <code>agreementId</code>.</p>', 'TagResource' => '<p>Tags a resource.</p>', 'UntagResource' => '<p>Removes a tag or list of tags from a resource.</p>', ], 'shapes' => [ 'AccessDeniedException' => [ 'base' => '<p>You do not have sufficient access to perform this action.</p>', 'refs' => [], ], 'Catalog' => [ 'base' => NULL, 'refs' => [ 'PutDeploymentParameterRequest$catalog' => '<p>The catalog related to the request. Fixed value: <code>AWS Marketplace</code> </p>', ], ], 'ClientToken' => [ 'base' => NULL, 'refs' => [ 'PutDeploymentParameterRequest$clientToken' => '<p>The idempotency token for deployment parameters. A unique identifier for the new version.</p>', ], ], 'ConflictException' => [ 'base' => '<p>The request configuration has conflicts. For details, see the accompanying error message.</p>', 'refs' => [], ], 'DeploymentParameterInput' => [ 'base' => '<p>The shape containing the requested deployment parameter name and secretString.</p>', 'refs' => [ 'PutDeploymentParameterRequest$deploymentParameter' => '<p>The deployment parameter targeted to the acceptor of an agreement for which to create the AWS Secret Manager resource.</p>', ], ], 'DeploymentParameterName' => [ 'base' => NULL, 'refs' => [ 'DeploymentParameterInput$name' => '<p>The desired name of the deployment parameter. This is the identifier on which deployment parameters are keyed for a given buyer and product. If this name matches an existing deployment parameter, this request will update the existing resource.</p>', ], ], 'DeploymentParameterResourceIdentifier' => [ 'base' => NULL, 'refs' => [ 'PutDeploymentParameterResponse$deploymentParameterId' => '<p>The unique identifier of the deployment parameter.</p>', ], ], 'InternalServerException' => [ 'base' => '<p>There was an internal service exception.</p>', 'refs' => [], ], 'ListTagsForResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListTagsForResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'PutDeploymentParameterRequest' => [ 'base' => NULL, 'refs' => [], ], 'PutDeploymentParameterResponse' => [ 'base' => NULL, 'refs' => [], ], 'ResourceArn' => [ 'base' => NULL, 'refs' => [ 'PutDeploymentParameterResponse$resourceArn' => '<p>The Amazon Resource Name (ARN) associated with the deployment parameter resource you want to create or update.</p>', ], ], 'ResourceId' => [ 'base' => NULL, 'refs' => [ 'ConflictException$resourceId' => '<p>The unique identifier for the resource associated with the error.</p>', 'PutDeploymentParameterRequest$agreementId' => '<p>The unique identifier of the agreement.</p>', 'PutDeploymentParameterRequest$productId' => '<p>The product for which AWS Marketplace will save secrets for the buyerâ€™s account.</p>', 'PutDeploymentParameterResponse$agreementId' => '<p>The unique identifier of the agreement.</p>', ], ], 'ResourceNotFoundException' => [ 'base' => '<p>The specified resource wasn\'t found.</p>', 'refs' => [], ], 'SecretString' => [ 'base' => NULL, 'refs' => [ 'DeploymentParameterInput$secretString' => '<p>The text to encrypt and store in the secret.</p>', ], ], 'ServiceQuotaExceededException' => [ 'base' => '<p>The maximum number of requests per account has been exceeded.</p>', 'refs' => [], ], 'String' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$message' => NULL, 'ConflictException$message' => NULL, 'InternalServerException$message' => NULL, 'ListTagsForResourceRequest$resourceArn' => '<p>The Amazon Resource Name (ARN) associated with the deployment parameter resource you want to list tags on.</p>', 'ResourceNotFoundException$message' => NULL, 'ServiceQuotaExceededException$message' => NULL, 'StringList$member' => NULL, 'TagResourceRequest$resourceArn' => '<p>The Amazon Resource Name (ARN) associated with the resource you want to tag.</p>', 'Tags$key' => NULL, 'Tags$value' => NULL, 'ThrottlingException$message' => NULL, 'UntagResourceRequest$resourceArn' => '<p>The Amazon Resource Name (ARN) associated with the resource you want to remove the tag from.</p>', 'ValidationException$fieldName' => '<p>The field name associated with the error.</p>', 'ValidationException$message' => NULL, ], ], 'StringList' => [ 'base' => NULL, 'refs' => [ 'UntagResourceRequest$tagKeys' => '<p>A list of key names of tags to be removed.</p>', ], ], 'SyntheticTimestamp_date_time' => [ 'base' => NULL, 'refs' => [ 'PutDeploymentParameterRequest$expirationDate' => '<p>The date when deployment parameters expire and are scheduled for deletion.</p>', ], ], 'TagKey' => [ 'base' => NULL, 'refs' => [ 'TagsMap$key' => NULL, ], ], 'TagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'TagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'TagValue' => [ 'base' => NULL, 'refs' => [ 'TagsMap$value' => NULL, ], ], 'Tags' => [ 'base' => NULL, 'refs' => [ 'ListTagsForResourceResponse$tags' => '<p>A map of key-value pairs, where each pair represents a tag present on the resource.</p>', 'TagResourceRequest$tags' => '<p>A map of key-value pairs, where each pair represents a tag present on the resource.</p>', ], ], 'TagsMap' => [ 'base' => NULL, 'refs' => [ 'PutDeploymentParameterRequest$tags' => '<p>A map of key-value pairs, where each pair represents a tag saved to the resource. Tags will only be applied for create operations, and they\'ll be ignored if the resource already exists.</p>', 'PutDeploymentParameterResponse$tags' => '<p>A map of key-value pairs, where each pair represents a tag saved to the resource. Tags will only be applied for create operations, and they\'ll be ignored if the resource already exists.</p>', ], ], 'ThrottlingException' => [ 'base' => '<p>Too many requests.</p>', 'refs' => [], ], 'UntagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'UntagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'ValidationException' => [ 'base' => '<p>An error occurred during validation.</p>', 'refs' => [], ], ],];
