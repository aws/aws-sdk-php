<?php
// This file was auto-generated from sdk-root/src/data/iot-managed-integrations/2025-03-03/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>Managed integrations is a feature of AWS IoT Device Management that enables developers to quickly build innovative IoT solutions. Customers can use managed integrations to automate device setup workflows and support interoperability across many devices, regardless of device vendor or connectivity protocol. This allows developers to use a single user-interface to control, manage, and operate a range of devices.</p>', 'operations' => [ 'CreateCredentialLocker' => '<p>Create a product credential locker. This operation will trigger the creation of all the manufacturing resources including the Wi-Fi setup key pair and device certificate.</p>', 'CreateDestination' => '<p> Create a destination. IoT managed integrations uses the destination to determine where to deliver notifications for a device. </p>', 'CreateEventLogConfiguration' => '<p>Set the event log configuration for the account, resource type, or specific resource.</p>', 'CreateManagedThing' => '<p>Creates a managed thing. A managed thing contains the device identifier, protocol supported, and capabilities of the device in a protocol-specific format.</p>', 'CreateNotificationConfiguration' => '<p>Creates a notification configuration. A configuration is a connection between an event type and a destination that you have already created. </p>', 'CreateOtaTask' => '<p>Create an over-the-air (OTA) task to update a device.</p>', 'CreateOtaTaskConfiguration' => '<p>Create a configuraiton for the over-the-air (OTA) task.</p>', 'CreateProvisioningProfile' => '<p>Create a provisioning profile for a device to execute the provisioning flows using a provisioning template. The provisioning template is a document that defines the set of resources and policies applied to a device during the provisioning process.</p>', 'DeleteCredentialLocker' => '<p>Delete a credential locker. </p> <note> <p>This operation can\'t be undone and any existing device won\'t be able to use IoT managed integrations.</p> </note>', 'DeleteDestination' => '<p>Deletes a customer-managed destination specified by id. </p>', 'DeleteEventLogConfiguration' => '<p>Delete an event log configuration.</p>', 'DeleteManagedThing' => '<p>Delete a managed thing. If a controller is deleted, all of the devices connected to it will have their status changed to <code>PENDING</code>. It is not possible to remove a cloud device.</p>', 'DeleteNotificationConfiguration' => '<p>Deletes a notification configuration. </p>', 'DeleteOtaTask' => '<p>Delete the over-the-air (OTA) task.</p>', 'DeleteOtaTaskConfiguration' => '<p>Delete the over-the-air (OTA) task configuration.</p>', 'DeleteProvisioningProfile' => '<p>Delete a provisioning profile.</p>', 'GetCredentialLocker' => '<p>Get information on an existing credential locker</p>', 'GetCustomEndpoint' => '<p>Returns the IoT managed integrations custom endpoint.</p>', 'GetDefaultEncryptionConfiguration' => '<p> Retrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified region. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>', 'GetDestination' => '<p>Gets a destination by ID. </p>', 'GetDeviceDiscovery' => '<p> Get the current state of a device discovery.</p>', 'GetEventLogConfiguration' => '<p>Get an event log configuration.</p>', 'GetHubConfiguration' => '<p>Get a hub configuration.</p>', 'GetManagedThing' => '<p> Get the attributes and capabilities associated with a managed thing.</p>', 'GetManagedThingCapabilities' => '<p>Get the capabilities for a managed thing using the device ID.</p>', 'GetManagedThingConnectivityData' => '<p>Get the connectivity status of a managed thing.</p>', 'GetManagedThingMetaData' => '<p>Get the metadata information for a managed thing.</p>', 'GetManagedThingState' => '<p> Returns the managed thing state for the given device Id.</p>', 'GetNotificationConfiguration' => '<p> Get a notification configuration.</p>', 'GetOtaTask' => '<p>Get the over-the-air (OTA) task.</p>', 'GetOtaTaskConfiguration' => '<p>Get a configuraiton for the over-the-air (OTA) task.</p>', 'GetProvisioningProfile' => '<p>Get a provisioning profile by template name.</p>', 'GetRuntimeLogConfiguration' => '<p>Get the runtime log configuration for a specific managed thing or for all managed things as a group.</p>', 'GetSchemaVersion' => '<p>Gets a schema version with the provided information.</p>', 'ListCredentialLockers' => '<p>List information on an existing credential locker.</p>', 'ListDestinations' => '<p> List all destination names under one Amazon Web Services account.</p>', 'ListEventLogConfigurations' => '<p>List all event log configurations for an account.</p>', 'ListManagedThingSchemas' => '<p>List schemas associated with a managed thing.</p>', 'ListManagedThings' => '<p>List all of the associations and statuses for a managed thing by its owner.</p>', 'ListNotificationConfigurations' => '<p> List all notification configurations.</p>', 'ListOtaTaskConfigurations' => '<p>List all of the over-the-air (OTA) task configurations.</p>', 'ListOtaTaskExecutions' => '<p>List all of the over-the-air (OTA) task executions.</p>', 'ListOtaTasks' => '<p>List all of the over-the-air (OTA) tasks.</p>', 'ListProvisioningProfiles' => '<p>List the provisioning profiles within the Amazon Web Services account.</p>', 'ListSchemaVersions' => '<p>Lists schema versions with the provided information.</p>', 'PutDefaultEncryptionConfiguration' => '<p>Sets the default encryption configuration for the Amazon Web Services account. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a> in the AWS IoT SiteWise User Guide.</p>', 'PutHubConfiguration' => '<p>Update a hub configuration.</p>', 'PutRuntimeLogConfiguration' => '<p>Set the runtime log configuration for a specific managed thing or for all managed things as a group.</p>', 'RegisterCustomEndpoint' => '<p>Customers can request IoT managed integrations to manage the server trust for them or bring their own external server trusts for the custom domain. Returns an IoT managed integrations endpoint.</p>', 'ResetRuntimeLogConfiguration' => '<p>Reset a runtime log configuration for a specific managed thing or for all managed things as a group.</p>', 'SendManagedThingCommand' => '<p>Send the command to the device represented by the managed thing. </p>', 'StartDeviceDiscovery' => '<p> During user-guided setup, this is used to start device discovery. The authentication material (install code) is passed as a message to the controller telling it to start the discovery.</p>', 'UpdateDestination' => '<p> Update a destination specified by id. </p>', 'UpdateEventLogConfiguration' => '<p>Update an event log configuration by log configuration ID.</p>', 'UpdateManagedThing' => '<p>Update the attributes and capabilities associated with a managed thing.</p>', 'UpdateNotificationConfiguration' => '<p> Update a notification configuration.</p>', 'UpdateOtaTask' => '<p>Update an over-the-air (OTA) task.</p>', ], 'shapes' => [ 'AbortConfigCriteria' => [ 'base' => '<p>Structure representing one abort config criteria.</p>', 'refs' => [ 'AbortConfigCriteriaList$member' => NULL, ], ], 'AbortConfigCriteriaList' => [ 'base' => NULL, 'refs' => [ 'OtaTaskAbortConfig$AbortConfigCriteriaList' => '<p>The list of criteria for the abort config.</p>', ], ], 'AbortCriteriaAction' => [ 'base' => NULL, 'refs' => [ 'AbortConfigCriteria$Action' => '<p>The action taken by the abort configuration.</p>', ], ], 'AbortCriteriaFailureType' => [ 'base' => NULL, 'refs' => [ 'AbortConfigCriteria$FailureType' => '<p>Over-the-air (OTA) task abort criteria failure type.</p>', ], ], 'AccessDeniedException' => [ 'base' => '<p>User is not authorized.</p>', 'refs' => [], ], 'ActionName' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportActions$member' => NULL, ], ], 'ActionReference' => [ 'base' => NULL, 'refs' => [ 'CapabilityAction$ref' => '<p>Describe a capability action with an reference.</p>', ], ], 'ActionTraceId' => [ 'base' => NULL, 'refs' => [ 'CapabilityAction$actionTraceId' => '<p>Describe a capability action with an <code>actionTraceId</code> for a response command.</p>', ], ], 'AdvertisedProductId' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$AdvertisedProductId' => '<p>The id of the advertised product.</p>', 'ManagedThingSummary$AdvertisedProductId' => '<p>The id of the advertised product.</p>', ], ], 'AttributeName' => [ 'base' => NULL, 'refs' => [ 'MetaData$key' => NULL, ], ], 'AttributeValue' => [ 'base' => NULL, 'refs' => [ 'MetaData$value' => NULL, ], ], 'AuthMaterialString' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$AuthenticationMaterial' => '<p>The authentication material defining the device connectivity setup requests. The authentication materials used are the device bar code.</p>', ], ], 'AuthMaterialType' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$AuthenticationMaterialType' => '<p>The type of authentication material used for device connectivity setup requests.</p>', ], ], 'BaseRatePerMinute' => [ 'base' => NULL, 'refs' => [ 'ExponentialRolloutRate$BaseRatePerMinute' => '<p>The base rate per minute for the rollout of an over-the-air (OTA) task.</p>', ], ], 'Boolean' => [ 'base' => NULL, 'refs' => [ 'DeleteManagedThingRequest$Force' => '<p>When set to <code>TRUE</code>, a forceful deteletion of the managed thing will occur. When set to <code>FALSE</code>, a non-forceful deletion of the managed thing will occur.</p>', ], ], 'Brand' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$Brand' => '<p>The brand of the device.</p>', 'GetManagedThingResponse$Brand' => '<p>The brand of the device.</p>', 'ManagedThingSummary$Brand' => '<p>The brand of the device.</p>', 'UpdateManagedThingRequest$Brand' => '<p>The brand of the device.</p>', ], ], 'CaCertificate' => [ 'base' => NULL, 'refs' => [ 'CreateProvisioningProfileRequest$CaCertificate' => '<p>The id of the certificate authority (CA) certificate.</p>', ], ], 'Capabilities' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$Capabilities' => '<p>The capabilities of the device such as light bulb.</p>', 'GetManagedThingCapabilitiesResponse$Capabilities' => '<p>The capabilities of the device such as light bulb.</p>', 'UpdateManagedThingRequest$Capabilities' => '<p>The capabilities of the device such as light bulb.</p>', ], ], 'CapabilityAction' => [ 'base' => '<p>Action for an Amazon Web Services capability, containing the action parameters for control.</p>', 'refs' => [ 'CapabilityActions$member' => NULL, ], ], 'CapabilityActionName' => [ 'base' => NULL, 'refs' => [ 'CapabilityAction$name' => '<p>Describe a capability action with a name.</p>', ], ], 'CapabilityActions' => [ 'base' => NULL, 'refs' => [ 'CommandCapability$actions' => '<p>Describe the command capability with the actions it supports.</p>', ], ], 'CapabilityId' => [ 'base' => NULL, 'refs' => [ 'ListManagedThingSchemasRequest$CapabilityIdFilter' => '<p>Filter on a capability id.</p>', 'ManagedThingSchemaListItem$CapabilityId' => '<p>The id of the capability for a managed thing.</p>', ], ], 'CapabilityName' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportCapability$name' => '<p>The name of the capability.</p>', 'CommandCapability$name' => '<p>Describe the capability with an name.</p>', 'StateCapability$name' => '<p>Name for the Amazon Web Services capability.</p>', ], ], 'CapabilityProperties' => [ 'base' => NULL, 'refs' => [ 'CapabilityAction$parameters' => '<p>Describe a capability action with a capability property.</p>', 'StateCapability$properties' => '<p>Describe the command capability with the properties it supports.</p>', ], ], 'CapabilityReport' => [ 'base' => '<p>Report of all capabilities supported by the device.</p>', 'refs' => [ 'CreateManagedThingRequest$CapabilityReport' => '<p>A report of the capabilities for the managed thing.</p>', 'GetManagedThingCapabilitiesResponse$CapabilityReport' => '<p>A report of the capabilities for the managed thing.</p>', 'UpdateManagedThingRequest$CapabilityReport' => '<p>A report of the capabilities for the managed thing.</p>', ], ], 'CapabilityReportActions' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportCapability$actions' => '<p>The capability actions used in the capability report.</p>', ], ], 'CapabilityReportCapabilities' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportEndpoint$capabilities' => '<p>The capabilities used in the capability report.</p>', ], ], 'CapabilityReportCapability' => [ 'base' => '<p>The capability used in capability report.</p>', 'refs' => [ 'CapabilityReportCapabilities$member' => NULL, ], ], 'CapabilityReportEndpoint' => [ 'base' => '<p>The endpoint used in the capability report.</p>', 'refs' => [ 'CapabilityReportEndpoints$member' => NULL, ], ], 'CapabilityReportEndpoints' => [ 'base' => NULL, 'refs' => [ 'CapabilityReport$endpoints' => '<p>The endpoints used in the capability report.</p>', ], ], 'CapabilityReportEvents' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportCapability$events' => '<p>The capability events used in the capability report.</p>', ], ], 'CapabilityReportProperties' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportCapability$properties' => '<p>The capability properties used in the capability report.</p>', ], ], 'CapabilityReportVersion' => [ 'base' => NULL, 'refs' => [ 'CapabilityReport$version' => '<p>The version of the capability report.</p>', ], ], 'CapabilityVersion' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportCapability$version' => '<p>The version of the capability.</p>', 'CommandCapability$version' => '<p>Describe the capability with a version.</p>', 'StateCapability$version' => '<p>Version for the Amazon Web Services capability.</p>', ], ], 'ClaimCertificate' => [ 'base' => NULL, 'refs' => [ 'CreateProvisioningProfileResponse$ClaimCertificate' => '<p>The id of the claim certificate.</p>', 'GetProvisioningProfileResponse$ClaimCertificate' => '<p>The id of the claim certificate.</p>', ], ], 'ClaimCertificatePrivateKey' => [ 'base' => NULL, 'refs' => [ 'CreateProvisioningProfileResponse$ClaimCertificatePrivateKey' => '<p>The private key of the claim certificate. This is stored securely on the device for validating the connection endpoint with IoT managed integrations using the public key.</p>', ], ], 'Classification' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$Classification' => '<p>The classification of the managed thing such as light bulb or thermostat.</p>', 'GetManagedThingResponse$Classification' => '<p>The classification of the managed thing such as light bulb or thermostat.</p>', 'ManagedThingSummary$Classification' => '<p>The classification of the managed thing such as light bulb or thermostat.</p>', 'UpdateManagedThingRequest$Classification' => '<p>The classification of the managed thing such as light bulb or thermostat.</p>', ], ], 'ClientToken' => [ 'base' => NULL, 'refs' => [ 'CreateCredentialLockerRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'CreateDestinationRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'CreateEventLogConfigurationRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'CreateManagedThingRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'CreateNotificationConfigurationRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'CreateOtaTaskConfigurationRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'CreateOtaTaskRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'CreateProvisioningProfileRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', 'StartDeviceDiscoveryRequest$ClientToken' => '<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>', ], ], 'CommandCapabilities' => [ 'base' => NULL, 'refs' => [ 'CommandEndpoint$capabilities' => '<p>Describe the endpoint with an id, a name, and the relevant capabilities for sending commands.</p>', ], ], 'CommandCapability' => [ 'base' => '<p>The command capabilities added for the managed thing</p>', 'refs' => [ 'CommandCapabilities$member' => NULL, ], ], 'CommandEndpoint' => [ 'base' => '<p>The endpoint for a managed thing when sending a command.</p>', 'refs' => [ 'CommandEndpoints$member' => NULL, ], ], 'CommandEndpoints' => [ 'base' => NULL, 'refs' => [ 'SendManagedThingCommandRequest$Endpoints' => '<p>The device endpoint.</p>', ], ], 'ConfigurationError' => [ 'base' => '<p>Provides the default encryption configuration error update details.</p>', 'refs' => [ 'ConfigurationStatus$error' => '<p>The error details describing a failed default encryption configuration update.</p>', ], ], 'ConfigurationErrorCode' => [ 'base' => NULL, 'refs' => [ 'ConfigurationError$code' => '<p>The error code returned when the default encryption configuration update fails.</p>', ], ], 'ConfigurationErrorMessage' => [ 'base' => NULL, 'refs' => [ 'ConfigurationError$message' => '<p>The error message returned when the default encryption configuration update fails.</p>', ], ], 'ConfigurationState' => [ 'base' => NULL, 'refs' => [ 'ConfigurationStatus$state' => '<p>The status state describing the default encryption configuration update.</p>', ], ], 'ConfigurationStatus' => [ 'base' => '<p>Provides the status of the default encryption configuration for an Amazon Web Services account.</p>', 'refs' => [ 'GetDefaultEncryptionConfigurationResponse$configurationStatus' => '<p>Provides the status of the default encryption configuration for an Amazon Web Services account.</p>', 'PutDefaultEncryptionConfigurationResponse$configurationStatus' => '<p>Provides the status of the default encryption configuration for an Amazon Web Services account.</p>', ], ], 'ConflictException' => [ 'base' => '<p>There is a conflict with the request.</p>', 'refs' => [], ], 'ConnectivityStatus' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingConnectivityDataResponse$Connected' => '<p>The connectivity status for a managed thing.</p>', ], ], 'ConnectivityTimestamp' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingConnectivityDataResponse$Timestamp' => '<p>The timestamp value of when the connectivity status for a managed thing was last taken.</p>', ], ], 'ConnectorAssociationId' => [ 'base' => NULL, 'refs' => [ 'GetDeviceDiscoveryResponse$ConnectorAssociationId' => '<p>The ID tracking the current discovery process for one connector association.</p>', 'SendManagedThingCommandRequest$ConnectorAssociationId' => '<p>The ID tracking the current discovery process for one connector association.</p>', 'StartDeviceDiscoveryRequest$ConnectorAssociationIdentifier' => '<p>The id of the connector association.</p>', ], ], 'ConnectorDeviceId' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$ConnectorDeviceId' => '<p>The third-party device id as defined by the connector. This device id must not contain personal identifiable information (PII).</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>', 'ManagedThingSummary$ConnectorDeviceId' => '<p>The third-party device id as defined by the connector. This device id must not contain personal identifiable information (PII).</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>', ], ], 'ConnectorPolicyId' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$ConnectorPolicyId' => '<p>The id of the connector policy.</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>', 'ListManagedThingsRequest$ConnectorPolicyIdFilter' => '<p>Filter on a connector policy id for a managed thing.</p>', 'ManagedThingSummary$ConnectorPolicyId' => '<p>The id of the connector policy.</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>', ], ], 'CreateCredentialLockerRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateCredentialLockerResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateDestinationRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateDestinationResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateEventLogConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateEventLogConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateManagedThingRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateManagedThingResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateNotificationConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateNotificationConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateOtaTaskConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateOtaTaskConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateOtaTaskRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateOtaTaskResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateProvisioningProfileRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateProvisioningProfileResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreatedAt' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingResponse$CreatedAt' => '<p>The timestamp value of when the device creation request occurred.</p>', 'GetManagedThingResponse$CreatedAt' => '<p>The timestamp value of when the device creation request occurred.</p>', 'GetOtaTaskConfigurationResponse$CreatedAt' => '<p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>', 'GetOtaTaskResponse$CreatedAt' => '<p>The timestamp value of when the over-the-air (OTA) task was created.</p>', 'ManagedThingSummary$CreatedAt' => '<p>The timestamp value of when the device creation request occurred.</p>', 'ManagedThingSummary$UpdatedAt' => '<p>The timestamp value of when the managed thing was last updated at.</p>', 'OtaTaskConfigurationSummary$CreatedAt' => '<p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>', 'OtaTaskSummary$CreatedAt' => '<p>The timestamp value of when the over-the-air (OTA) task was created at.</p>', ], ], 'CredentialLockerArn' => [ 'base' => NULL, 'refs' => [ 'CreateCredentialLockerResponse$Arn' => '<p>The Amazon Resource Name (ARN) of the credential locker.</p>', 'CredentialLockerSummary$Arn' => '<p>The Amazon Resource Name (ARN) of the credential locker.</p>', 'GetCredentialLockerResponse$Arn' => '<p>The Amazon Resource Name (ARN) of the credential locker.</p>', ], ], 'CredentialLockerCreatedAt' => [ 'base' => NULL, 'refs' => [ 'CreateCredentialLockerResponse$CreatedAt' => '<p>The timestamp value of when the credential locker request occurred.</p>', 'CredentialLockerSummary$CreatedAt' => '<p>The timestampe value of when the credential locker was created at.</p>', 'GetCredentialLockerResponse$CreatedAt' => '<p>The timestamp value of when the credential locker requset occurred.</p>', ], ], 'CredentialLockerId' => [ 'base' => NULL, 'refs' => [ 'CreateCredentialLockerResponse$Id' => '<p>The identifier of the credential locker creation request.</p>', 'CreateManagedThingRequest$CredentialLockerId' => '<p>The identifier of the credential for the managed thing.</p>', 'CredentialLockerSummary$Id' => '<p>The id of the credential locker.</p>', 'DeleteCredentialLockerRequest$Identifier' => '<p>The identifier of the credential locker.</p>', 'GetCredentialLockerRequest$Identifier' => '<p>The identifier of the credential locker.</p>', 'GetCredentialLockerResponse$Id' => '<p>The identifier of the credential locker.</p>', 'GetManagedThingResponse$CredentialLockerId' => '<p>The identifier of the credential locker for the managed thing.</p>', 'ListManagedThingsRequest$CredentialLockerFilter' => '<p>Filter on a credential locker for a managed thing.</p>', 'ManagedThingSummary$CredentialLockerId' => '<p>The identifier of the credential locker for the managed thing.</p>', 'UpdateManagedThingRequest$CredentialLockerId' => '<p>The identifier of the credential for the managed thing.</p>', ], ], 'CredentialLockerListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListCredentialLockersResponse$Items' => '<p>The list of credential lockers.</p>', ], ], 'CredentialLockerName' => [ 'base' => NULL, 'refs' => [ 'CreateCredentialLockerRequest$Name' => '<p>The name of the credential locker.</p>', 'CredentialLockerSummary$Name' => '<p>The name of the credential locker.</p>', 'GetCredentialLockerResponse$Name' => '<p>The name of the credential locker.</p>', ], ], 'CredentialLockerSummary' => [ 'base' => '<p>Structure describing one Credential Locker.</p>', 'refs' => [ 'CredentialLockerListDefinition$member' => NULL, ], ], 'DeleteCredentialLockerRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteDestinationRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteEventLogConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteLocalStoreAfterUpload' => [ 'base' => NULL, 'refs' => [ 'RuntimeLogConfigurations$DeleteLocalStoreAfterUpload' => '<p>Configuration to enable or disable deleting of runtime logs in the device once uploaded to the cloud.</p>', ], ], 'DeleteManagedThingRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteNotificationConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteOtaTaskConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteOtaTaskRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteProvisioningProfileRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeliveryDestinationArn' => [ 'base' => NULL, 'refs' => [ 'CreateDestinationRequest$DeliveryDestinationArn' => '<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>', 'DestinationSummary$DeliveryDestinationArn' => '<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>', 'GetDestinationResponse$DeliveryDestinationArn' => '<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>', 'UpdateDestinationRequest$DeliveryDestinationArn' => '<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>', ], ], 'DeliveryDestinationRoleArn' => [ 'base' => NULL, 'refs' => [ 'CreateDestinationRequest$RoleArn' => '<p>The Amazon Resource Name (ARN) of the delivery destination role.</p>', 'DestinationSummary$RoleArn' => '<p>The Amazon Resource Name (ARN) of the delivery destination.</p>', 'GetDestinationResponse$RoleArn' => '<p>The Amazon Resource Name (ARN) of the delivery destination role.</p>', 'UpdateDestinationRequest$RoleArn' => '<p>The Amazon Resource Name (ARN) of the delivery destination role.</p>', ], ], 'DeliveryDestinationType' => [ 'base' => NULL, 'refs' => [ 'CreateDestinationRequest$DeliveryDestinationType' => '<p>The destination type for the customer-managed destination.</p>', 'DestinationSummary$DeliveryDestinationType' => '<p>The destination type for the customer-managed destination.</p>', 'GetDestinationResponse$DeliveryDestinationType' => '<p>The destination type for the customer-managed destination.</p>', 'UpdateDestinationRequest$DeliveryDestinationType' => '<p>The destination type for the customer-managed destination.</p>', ], ], 'DestinationCreatedAt' => [ 'base' => NULL, 'refs' => [ 'GetDestinationResponse$CreatedAt' => '<p>The timestamp value of when the destination creation requset occurred.</p>', ], ], 'DestinationDescription' => [ 'base' => NULL, 'refs' => [ 'CreateDestinationRequest$Description' => '<p>The description of the customer-managed destination.</p>', 'DestinationSummary$Description' => '<p>The description of the customer-managed destination.</p>', 'GetDestinationResponse$Description' => '<p>The description of the customer-managed destination.</p>', 'UpdateDestinationRequest$Description' => '<p>The description of the customer-managed destination.</p>', ], ], 'DestinationListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListDestinationsResponse$DestinationList' => '<p>The list of destinations.</p>', ], ], 'DestinationName' => [ 'base' => NULL, 'refs' => [ 'CreateDestinationRequest$Name' => '<p>The name of the customer-managed destination.</p>', 'CreateDestinationResponse$Name' => '<p>The name of the customer-managed destination.</p>', 'CreateNotificationConfigurationRequest$DestinationName' => '<p>The name of the destination for the notification configuration.</p>', 'DeleteDestinationRequest$Name' => '<p>The id of the customer-managed destination.</p>', 'DestinationSummary$Name' => '<p>The name of the customer-managed destination.</p>', 'GetDestinationRequest$Name' => '<p>The name of the customer-managed destination.</p>', 'GetDestinationResponse$Name' => '<p>The name of the customer-managed destination.</p>', 'GetNotificationConfigurationResponse$DestinationName' => '<p>The name of the destination for the notification configuration.</p>', 'NotificationConfigurationSummary$DestinationName' => '<p>The name of the destination for the notification configuration.</p>', 'UpdateDestinationRequest$Name' => '<p>The name of the customer-managed destination.</p>', 'UpdateNotificationConfigurationRequest$DestinationName' => '<p>The name of the destination for the notification configuration.</p>', ], ], 'DestinationSummary' => [ 'base' => '<p>Structure describing a destination for IoT managed integrations to deliver notifications for a device.</p>', 'refs' => [ 'DestinationListDefinition$member' => NULL, ], ], 'DestinationUpdatedAt' => [ 'base' => NULL, 'refs' => [ 'GetDestinationResponse$UpdatedAt' => '<p>The timestamp value of when the destination update requset occurred.</p>', ], ], 'DeviceDiscoveryArn' => [ 'base' => NULL, 'refs' => [ 'GetDeviceDiscoveryResponse$Arn' => '<p>The Amazon Resource Name (ARN) of the device discovery job request.</p>', ], ], 'DeviceDiscoveryId' => [ 'base' => NULL, 'refs' => [ 'GetDeviceDiscoveryRequest$Identifier' => '<p>The id of the device discovery job request.</p>', 'GetDeviceDiscoveryResponse$Id' => '<p>The id of the device discovery job request.</p>', 'StartDeviceDiscoveryResponse$Id' => '<p>The id of the device discovery job request.</p>', ], ], 'DeviceDiscoveryStatus' => [ 'base' => NULL, 'refs' => [ 'GetDeviceDiscoveryResponse$Status' => '<p>The status of the device discovery job request.</p>', ], ], 'DeviceSpecificKey' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$DeviceSpecificKey' => '<p>A Zwave device-specific key used during device activation.</p> <note> <p>This parameter is used for Zwave devices only.</p> </note>', ], ], 'DeviceType' => [ 'base' => NULL, 'refs' => [ 'DeviceTypes$member' => NULL, ], ], 'DeviceTypes' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportEndpoint$deviceTypes' => '<p>The type of device.</p>', ], ], 'DisconnectReasonValue' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingConnectivityDataResponse$DisconnectReason' => '<p>The reason for the connectivity disconnect with the managed thing.</p>', ], ], 'DiscoveryAuthMaterialString' => [ 'base' => NULL, 'refs' => [ 'StartDeviceDiscoveryRequest$AuthenticationMaterial' => '<p>The authentication material required to start the local device discovery job request.</p>', ], ], 'DiscoveryAuthMaterialType' => [ 'base' => NULL, 'refs' => [ 'StartDeviceDiscoveryRequest$AuthenticationMaterialType' => '<p>The type of authentication material used for device discovery jobs.</p>', ], ], 'DiscoveryFinishedAt' => [ 'base' => NULL, 'refs' => [ 'GetDeviceDiscoveryResponse$FinishedAt' => '<p>The timestamp value for the completion time of the device discovery.</p>', ], ], 'DiscoveryStartedAt' => [ 'base' => NULL, 'refs' => [ 'GetDeviceDiscoveryResponse$StartedAt' => '<p>The timestamp value for the start time of the device discovery.</p>', 'StartDeviceDiscoveryResponse$StartedAt' => '<p>The timestamp value for the start time of the device discovery.</p>', ], ], 'DiscoveryType' => [ 'base' => NULL, 'refs' => [ 'GetDeviceDiscoveryResponse$DiscoveryType' => '<p>The discovery type supporting the type of device to be discovered in the device discovery job request.</p>', 'StartDeviceDiscoveryRequest$DiscoveryType' => '<p>The discovery type supporting the type of device to be discovered in the device discovery job request.</p>', ], ], 'DurationInMinutes' => [ 'base' => NULL, 'refs' => [ 'ScheduleMaintenanceWindow$DurationInMinutes' => '<p>Displays the duration of the next maintenance window.</p>', ], ], 'EncryptionType' => [ 'base' => NULL, 'refs' => [ 'GetDefaultEncryptionConfigurationResponse$encryptionType' => '<p>The type of encryption used for the encryption configuration.</p>', 'PutDefaultEncryptionConfigurationRequest$encryptionType' => '<p>The type of encryption used for the encryption configuration.</p>', 'PutDefaultEncryptionConfigurationResponse$encryptionType' => '<p>The type of encryption used for the encryption configuration.</p>', ], ], 'EndTime' => [ 'base' => NULL, 'refs' => [ 'OtaTaskSchedulingConfig$EndTime' => '<p>The time an over-the-air (OTA) task will stop.</p>', ], ], 'EndpointAddress' => [ 'base' => NULL, 'refs' => [ 'GetCustomEndpointResponse$EndpointAddress' => '<p>The IoT managed integrations dedicated, custom endpoint for the device to route traffic through.</p>', 'RegisterCustomEndpointResponse$EndpointAddress' => '<p>The IoT managed integrations dedicated, custom endpoint for the device to route traffic through.</p>', ], ], 'EndpointId' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportEndpoint$id' => '<p>The id of the endpoint used in the capability report.</p>', 'CommandEndpoint$endpointId' => '<p>The id of the endpoint for a managed thing.</p>', 'ListManagedThingSchemasRequest$EndpointIdFilter' => '<p>Filter on an endpoint id.</p>', 'ManagedThingSchemaListItem$EndpointId' => '<p>The id of the endpoint for a managed thing.</p>', 'StateEndpoint$endpointId' => '<p>Numeric identifier of the endpoint</p>', ], ], 'ErrorMessage' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$Message' => NULL, 'ConflictException$Message' => NULL, 'InternalFailureException$Message' => NULL, 'InternalServerException$Message' => NULL, 'ResourceNotFoundException$Message' => NULL, 'ServiceQuotaExceededException$Message' => NULL, 'ServiceUnavailableException$Message' => NULL, 'ThrottlingException$Message' => NULL, 'UnauthorizedException$Message' => NULL, 'ValidationException$Message' => NULL, ], ], 'EventLogConfigurationListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListEventLogConfigurationsResponse$EventLogConfigurationList' => '<p>A list of each event log configuration and pertinent information.</p>', ], ], 'EventLogConfigurationSummary' => [ 'base' => '<p>List of event log configurations.</p>', 'refs' => [ 'EventLogConfigurationListDefinition$member' => NULL, ], ], 'EventName' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportEvents$member' => NULL, ], ], 'EventType' => [ 'base' => NULL, 'refs' => [ 'CreateNotificationConfigurationRequest$EventType' => '<p>The type of event triggering a device notification to the customer-managed destination.</p>', 'CreateNotificationConfigurationResponse$EventType' => '<p>The type of event triggering a device notification to the customer-managed destination.</p>', 'DeleteNotificationConfigurationRequest$EventType' => '<p>The type of event triggering a device notification to the customer-managed destination.</p>', 'GetNotificationConfigurationRequest$EventType' => '<p>The type of event triggering a device notification to the customer-managed destination.</p>', 'GetNotificationConfigurationResponse$EventType' => '<p>The type of event triggering a device notification to the customer-managed destination.</p>', 'NotificationConfigurationSummary$EventType' => '<p>The type of event triggering a device notification to the customer-managed destination.</p>', 'UpdateNotificationConfigurationRequest$EventType' => '<p>The type of event triggering a device notification to the customer-managed destination.</p>', ], ], 'ExecutionNumber' => [ 'base' => NULL, 'refs' => [ 'OtaTaskExecutionSummary$ExecutionNumber' => '<p>The execution number of the over-the-air (OTA) task execution summary.</p>', ], ], 'ExponentialRolloutRate' => [ 'base' => '<p>Structure representing exponential rate of rollout for an over-the-air (OTA) task.</p>', 'refs' => [ 'OtaTaskExecutionRolloutConfig$ExponentialRolloutRate' => '<p>Structure representing exponential rate of rollout for an over-the-air (OTA) task.</p>', ], ], 'GetCredentialLockerRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetCredentialLockerResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetCustomEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetCustomEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDefaultEncryptionConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDefaultEncryptionConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDestinationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDestinationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetDeviceDiscoveryRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDeviceDiscoveryResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetEventLogConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetEventLogConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetHubConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetHubConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingCapabilitiesRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingCapabilitiesResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingConnectivityDataRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingConnectivityDataResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingMetaDataRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingMetaDataResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingStateRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetManagedThingStateResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetNotificationConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetNotificationConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetOtaTaskConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetOtaTaskConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetOtaTaskRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetOtaTaskResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetProvisioningProfileRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetProvisioningProfileResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetRuntimeLogConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetRuntimeLogConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaVersionRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetSchemaVersionResponse' => [ 'base' => NULL, 'refs' => [], ], 'HubConfigurationUpdatedAt' => [ 'base' => NULL, 'refs' => [ 'GetHubConfigurationResponse$UpdatedAt' => '<p>The timestamp value of when the hub configuration was updated.</p>', ], ], 'HubNetworkMode' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$HubNetworkMode' => '<p>The network mode for the hub-connected device.</p>', 'UpdateManagedThingRequest$HubNetworkMode' => '<p>The network mode for the hub-connected device.</p>', ], ], 'HubTokenTimerExpirySettingInSeconds' => [ 'base' => NULL, 'refs' => [ 'GetHubConfigurationResponse$HubTokenTimerExpirySettingInSeconds' => '<p>A user-defined integer value that represents the hub token timer expiry setting in seconds.</p>', 'PutHubConfigurationRequest$HubTokenTimerExpirySettingInSeconds' => '<p>A user-defined integer value that represents the hub token timer expiry setting in seconds.</p>', 'PutHubConfigurationResponse$HubTokenTimerExpirySettingInSeconds' => '<p>A user-defined integer value that represents the hub token timer expiry setting in seconds.</p>', ], ], 'InProgressTimeoutInMinutes' => [ 'base' => NULL, 'refs' => [ 'OtaTaskTimeoutConfig$InProgressTimeoutInMinutes' => '<p>Specifies the amount of time the device has to finish execution of this task. The timeout interval can be anywhere between 1 minute and 7 days.</p>', ], ], 'IncrementFactor' => [ 'base' => NULL, 'refs' => [ 'ExponentialRolloutRate$IncrementFactor' => '<p>The incremental factor for increasing the rollout rate of an over-the-air (OTA) task.</p>', ], ], 'Integer' => [ 'base' => NULL, 'refs' => [ 'TaskProcessingDetails$NumberOfCanceledThings' => '<p>The number of canceled things in an over-the-air (OTA) task.</p>', 'TaskProcessingDetails$NumberOfFailedThings' => '<p>The number of failed things in an over-the-air (OTA) task.</p>', 'TaskProcessingDetails$NumberOfInProgressThings' => '<p>The number of in progress things in an over-the-air (OTA) task.</p>', 'TaskProcessingDetails$numberOfQueuedThings' => '<p>The number of queued things in an over-the-air (OTA) task.</p>', 'TaskProcessingDetails$numberOfRejectedThings' => '<p>The number of rejected things in an over-the-air (OTA) task.</p>', 'TaskProcessingDetails$numberOfRemovedThings' => '<p>The number of removed things in an over-the-air (OTA) task.</p>', 'TaskProcessingDetails$numberOfSucceededThings' => '<p>The number of succeeded things in an over-the-air (OTA) task.</p>', 'TaskProcessingDetails$numberOfTimedOutThings' => '<p>The number of timed out things in an over-the-air (OTA) task.</p>', ], ], 'InternalFailureException' => [ 'base' => '<p>An unexpected error has occurred.</p>', 'refs' => [], ], 'InternalServerException' => [ 'base' => '<p>Internal error from the service that indicates an unexpected error or that the service is unavailable.</p>', 'refs' => [], ], 'InternationalArticleNumber' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$InternationalArticleNumber' => '<p>The unique 13 digit number that identifies the managed thing.</p>', ], ], 'KmsKeyArn' => [ 'base' => NULL, 'refs' => [ 'GetDefaultEncryptionConfigurationResponse$kmsKeyArn' => '<p>The Key Amazon Resource Name (ARN) of the AWS KMS key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>', 'PutDefaultEncryptionConfigurationRequest$kmsKeyArn' => '<p>The Key Amazon Resource Name (ARN) of the AWS KMS key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>', 'PutDefaultEncryptionConfigurationResponse$kmsKeyArn' => '<p>The Key Amazon Resource Name (ARN) of the AWS KMS key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>', ], ], 'LastUpdatedAt' => [ 'base' => NULL, 'refs' => [ 'GetOtaTaskResponse$LastUpdatedAt' => '<p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>', 'OtaTaskExecutionSummary$LastUpdatedAt' => '<p>The timestamp value of when the over-the-air (OTA) task execution summary was last updated.</p>', 'OtaTaskSummary$LastUpdatedAt' => '<p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>', ], ], 'ListCredentialLockersRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListCredentialLockersResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListDestinationsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListDestinationsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListEventLogConfigurationsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListEventLogConfigurationsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListManagedThingSchemasRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListManagedThingSchemasResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListManagedThingsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListManagedThingsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListNotificationConfigurationsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListNotificationConfigurationsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListOtaTaskConfigurationsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListOtaTaskConfigurationsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListOtaTaskExecutionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListOtaTaskExecutionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListOtaTasksRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListOtaTasksResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListProvisioningProfilesRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListProvisioningProfilesResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListSchemaVersionsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListSchemaVersionsResponse' => [ 'base' => NULL, 'refs' => [], ], 'LocalStoreFileRotationMaxBytes' => [ 'base' => NULL, 'refs' => [ 'RuntimeLogConfigurations$LocalStoreFileRotationMaxBytes' => '<p>Configuration to set the maximum bytes of runtime logs that can be stored on the device before the oldest logs are deleted or overwritten.</p>', ], ], 'LocalStoreFileRotationMaxFiles' => [ 'base' => NULL, 'refs' => [ 'RuntimeLogConfigurations$LocalStoreFileRotationMaxFiles' => '<p>Configuration to set the maximum number of runtime log files that can be stored on the device before the oldest files are deleted or overwritten.</p>', ], ], 'LocalStoreLocation' => [ 'base' => NULL, 'refs' => [ 'RuntimeLogConfigurations$LocalStoreLocation' => '<p>Configuration of where to store runtime logs in the device.</p>', ], ], 'LogConfigurationId' => [ 'base' => NULL, 'refs' => [ 'CreateEventLogConfigurationResponse$Id' => '<p>The identifier of the event log configuration request.</p>', 'DeleteEventLogConfigurationRequest$Id' => '<p>The identifier of the event log configuration.</p>', 'EventLogConfigurationSummary$Id' => '<p>The identifier of the event log configuration.</p>', 'GetEventLogConfigurationRequest$Id' => '<p>The identifier of the event log configuration.</p>', 'GetEventLogConfigurationResponse$Id' => '<p>The identifier of the event log configuration.</p>', 'UpdateEventLogConfigurationRequest$Id' => '<p>The log configuration id.</p>', ], ], 'LogLevel' => [ 'base' => NULL, 'refs' => [ 'CreateEventLogConfigurationRequest$EventLogLevel' => '<p>The logging level for the event log configuration.</p>', 'EventLogConfigurationSummary$EventLogLevel' => '<p>The logging level for the event log configuration.</p>', 'GetEventLogConfigurationResponse$EventLogLevel' => '<p>The logging level for the event log configuration.</p>', 'RuntimeLogConfigurations$LogLevel' => '<p>The different log levels available for configuration.</p>', 'RuntimeLogConfigurations$LogFlushLevel' => '<p>The different log levels available for configuration.</p>', 'UpdateEventLogConfigurationRequest$EventLogLevel' => '<p>The log level for the event in terms of severity.</p>', ], ], 'MacAddress' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$MacAddress' => '<p>The media access control (MAC) address for the device represented by the managed thing.</p> <note> <p>This parameter is used for Zigbee devices only.</p> </note>', ], ], 'ManagedThingArn' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingResponse$Arn' => '<p>The Amazon Resource Name (ARN) of the managed thing.</p>', 'GetManagedThingResponse$Arn' => '<p>The Amazon Resource Name (ARN) of the managed thing.</p>', 'ManagedThingSummary$Arn' => '<p>The Amazon Resource Name (ARN) of the managed thing.</p>', ], ], 'ManagedThingId' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingResponse$Id' => '<p>The id of the managed thing.</p>', 'DeleteManagedThingRequest$Identifier' => '<p>The id of the managed thing.</p>', 'GetDeviceDiscoveryResponse$ControllerId' => '<p>The id of the end-user\'s IoT hub.</p>', 'GetManagedThingCapabilitiesRequest$Identifier' => '<p>The id of the device.</p>', 'GetManagedThingCapabilitiesResponse$ManagedThingId' => '<p>The id of the device.</p>', 'GetManagedThingConnectivityDataRequest$Identifier' => '<p>The identifier of a managed thing.</p>', 'GetManagedThingConnectivityDataResponse$ManagedThingId' => '<p>The id of a managed thing.</p>', 'GetManagedThingMetaDataRequest$Identifier' => '<p>The managed thing id.</p>', 'GetManagedThingMetaDataResponse$ManagedThingId' => '<p>The managed thing id.</p>', 'GetManagedThingRequest$Identifier' => '<p>The id of the managed thing.</p>', 'GetManagedThingResponse$Id' => '<p>The id of the managed thing.</p>', 'GetManagedThingStateRequest$ManagedThingId' => '<p>The id of the device.</p>', 'GetRuntimeLogConfigurationRequest$ManagedThingId' => '<p>The id for a managed thing.</p>', 'GetRuntimeLogConfigurationResponse$ManagedThingId' => '<p>The id for a managed thing.</p>', 'ListManagedThingSchemasRequest$Identifier' => '<p>The managed thing id.</p>', 'ManagedThingSummary$Id' => '<p>The id of the device.</p>', 'OtaTaskExecutionSummaries$ManagedThingId' => '<p>The id of a managed thing.</p>', 'PutRuntimeLogConfigurationRequest$ManagedThingId' => '<p>The id for a managed thing.</p>', 'ResetRuntimeLogConfigurationRequest$ManagedThingId' => '<p>The id of a managed thing.</p>', 'SendManagedThingCommandRequest$ManagedThingId' => '<p>The id of the device.</p>', 'StartDeviceDiscoveryRequest$ControllerIdentifier' => '<p>The id of the end-user\'s IoT hub.</p>', 'UpdateManagedThingRequest$Identifier' => '<p>The id of the managed thing.</p>', ], ], 'ManagedThingListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListManagedThingsResponse$Items' => '<p>The list of managed things.</p>', ], ], 'ManagedThingSchemaListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListManagedThingSchemasResponse$Items' => '<p>The list of managed thing schemas.</p>', ], ], 'ManagedThingSchemaListItem' => [ 'base' => '<p>Structure representing one schema item associated with a managed thing.</p>', 'refs' => [ 'ManagedThingSchemaListDefinition$member' => NULL, ], ], 'ManagedThingSummary' => [ 'base' => '<p>Structure representing one managed thing.</p>', 'refs' => [ 'ManagedThingListDefinition$member' => NULL, ], ], 'MaxResults' => [ 'base' => NULL, 'refs' => [ 'ListCredentialLockersRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListDestinationsRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListEventLogConfigurationsRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListManagedThingSchemasRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListManagedThingsRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListNotificationConfigurationsRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListOtaTaskConfigurationsRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListOtaTaskExecutionsRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListOtaTasksRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListProvisioningProfilesRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', 'ListSchemaVersionsRequest$MaxResults' => '<p>The maximum number of results to return at one time.</p>', ], ], 'MaximumPerMinute' => [ 'base' => NULL, 'refs' => [ 'OtaTaskExecutionRolloutConfig$MaximumPerMinute' => '<p>The maximum number of things that will be notified of a pending task, per minute.</p>', ], ], 'MetaData' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$MetaData' => '<p>The metadata for the managed thing.</p>', 'GetManagedThingMetaDataResponse$MetaData' => '<p>The metadata for the managed thing.</p>', 'GetManagedThingResponse$MetaData' => '<p>The metadata for the managed thing.</p>', 'UpdateManagedThingRequest$MetaData' => '<p>The metadata for the managed thing.</p>', ], ], 'MinNumberOfExecutedThings' => [ 'base' => NULL, 'refs' => [ 'AbortConfigCriteria$MinNumberOfExecutedThings' => '<p>The minimum number of things that must receive task execution notifications before the task can be aborted.</p>', ], ], 'MinNumberOfRetries' => [ 'base' => NULL, 'refs' => [ 'RetryConfigCriteria$MinNumberOfRetries' => '<p>The number of retries allowed for a failure type for the over-the-air (OTA) task.</p>', ], ], 'Model' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$Model' => '<p>The model of the device.</p>', 'GetManagedThingResponse$Model' => '<p>The model of the device.</p>', 'ManagedThingSummary$Model' => '<p>The model of the device.</p>', 'UpdateManagedThingRequest$Model' => '<p>The model of the device.</p>', ], ], 'Name' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$Name' => '<p>The name of the managed thing representing the physical device.</p>', 'GetManagedThingResponse$Name' => '<p>The name of the managed thing representing the physical device.</p>', 'ManagedThingSummary$Name' => '<p>The name of the managed thing representing the physical device.</p>', 'UpdateManagedThingRequest$Name' => '<p>The name of the managed thing representing the physical device.</p>', ], ], 'NextToken' => [ 'base' => NULL, 'refs' => [ 'ListCredentialLockersRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListCredentialLockersResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListDestinationsRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListDestinationsResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListEventLogConfigurationsRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListEventLogConfigurationsResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListManagedThingSchemasRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListManagedThingSchemasResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListManagedThingsRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListManagedThingsResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListNotificationConfigurationsRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListNotificationConfigurationsResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListOtaTaskConfigurationsRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListOtaTaskConfigurationsResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListProvisioningProfilesRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListProvisioningProfilesResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListSchemaVersionsRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListSchemaVersionsResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', ], ], 'NodeId' => [ 'base' => NULL, 'refs' => [ 'CapabilityReport$nodeId' => '<p>The numeric identifier of the node.</p>', ], ], 'NotificationConfigurationCreatedAt' => [ 'base' => NULL, 'refs' => [ 'GetNotificationConfigurationResponse$CreatedAt' => '<p>The timestamp value of when the notification configuration was created.</p>', ], ], 'NotificationConfigurationListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListNotificationConfigurationsResponse$NotificationConfigurationList' => '<p>The list of notification configurations.</p>', ], ], 'NotificationConfigurationSummary' => [ 'base' => '<p>Structure describing a notification configuration.</p>', 'refs' => [ 'NotificationConfigurationListDefinition$member' => NULL, ], ], 'NotificationConfigurationUpdatedAt' => [ 'base' => NULL, 'refs' => [ 'GetNotificationConfigurationResponse$UpdatedAt' => '<p>The timestamp value of when the notification configuration was last updated.</p>', ], ], 'NumberOfNotifiedThings' => [ 'base' => NULL, 'refs' => [ 'RolloutRateIncreaseCriteria$numberOfNotifiedThings' => '<p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>', ], ], 'NumberOfSucceededThings' => [ 'base' => NULL, 'refs' => [ 'RolloutRateIncreaseCriteria$numberOfSucceededThings' => '<p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>', ], ], 'OtaDescription' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskConfigurationRequest$Description' => '<p>A description of the over-the-air (OTA) task configuration.</p>', 'CreateOtaTaskRequest$Description' => '<p>The description of the over-the-air (OTA) task.</p>', 'CreateOtaTaskResponse$Description' => '<p>A description of the over-the-air (OTA) task.</p>', 'GetOtaTaskConfigurationResponse$Description' => '<p>A description of the over-the-air (OTA) task configuration.</p>', 'GetOtaTaskResponse$Description' => '<p>The description of the over-the-air (OTA) task.</p>', 'UpdateOtaTaskRequest$Description' => '<p>The description of the over-the-air (OTA) task.</p>', ], ], 'OtaMechanism' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskRequest$OtaMechanism' => '<p>The deployment mechanism for the over-the-air (OTA) task.</p>', 'GetOtaTaskResponse$OtaMechanism' => '<p>The deployment mechanism for the over-the-air (OTA) task.</p>', ], ], 'OtaNextToken' => [ 'base' => NULL, 'refs' => [ 'ListOtaTaskExecutionsRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListOtaTaskExecutionsResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListOtaTasksRequest$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', 'ListOtaTasksResponse$NextToken' => '<p>A token that can be used to retrieve the next set of results.</p>', ], ], 'OtaProtocol' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskRequest$Protocol' => '<p>The connection protocol the over-the-air (OTA) task uses to update the device.</p>', 'GetOtaTaskResponse$Protocol' => '<p>The connection protocol the over-the-air (OTA) task uses to update the device.</p>', ], ], 'OtaStatus' => [ 'base' => NULL, 'refs' => [ 'GetOtaTaskResponse$Status' => '<p>The status of the over-the-air (OTA) task.</p>', 'OtaTaskSummary$Status' => '<p>The status of the over-the-air (OTA) task summary.</p>', ], ], 'OtaTargetQueryString' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskRequest$OtaTargetQueryString' => '<p>The query string to add things to the thing group.</p>', 'GetOtaTaskResponse$OtaTargetQueryString' => '<p>The query string to add things to the thing group.</p>', ], ], 'OtaTaskAbortConfig' => [ 'base' => '<p>Over-the-air (OTA) task abort config.</p>', 'refs' => [ 'PushConfig$AbortConfig' => '<p>Structure representing one abort config.</p>', ], ], 'OtaTaskArn' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskResponse$TaskArn' => '<p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>', 'GetOtaTaskResponse$TaskArn' => '<p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task</p>', 'OtaTaskSummary$TaskArn' => '<p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>', ], ], 'OtaTaskConfigurationId' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskConfigurationResponse$TaskConfigurationId' => '<p>The identifier of the over-the-air (OTA) task configuration.</p>', 'CreateOtaTaskRequest$TaskConfigurationId' => '<p>The identifier for the over-the-air (OTA) task configuration.</p>', 'DeleteOtaTaskConfigurationRequest$Identifier' => '<p>The identifier of the over-the-air (OTA) task configuration.</p>', 'GetOtaTaskConfigurationRequest$Identifier' => '<p>The over-the-air (OTA) task configuration id.</p>', 'GetOtaTaskConfigurationResponse$TaskConfigurationId' => '<p>The over-the-air (OTA) task configuration id.</p>', 'GetOtaTaskResponse$TaskConfigurationId' => '<p>The identifier for the over-the-air (OTA) task configuration.</p>', 'OtaTaskConfigurationSummary$TaskConfigurationId' => '<p>The id of the over-the-air (OTA) task configuration</p>', 'OtaTaskSummary$TaskConfigurationId' => '<p>The identifier for the over-the-air (OTA) task configuration.</p>', 'UpdateOtaTaskRequest$TaskConfigurationId' => '<p>The identifier for the over-the-air (OTA) task configuration.</p>', ], ], 'OtaTaskConfigurationListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListOtaTaskConfigurationsResponse$Items' => '<p>The list of the over-the-air (OTA) task configurations.</p>', ], ], 'OtaTaskConfigurationName' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskConfigurationRequest$Name' => '<p>The name of the over-the-air (OTA) task.</p>', 'GetOtaTaskConfigurationResponse$Name' => '<p>The name of the over-the-air (OTA) task configuration.</p>', 'OtaTaskConfigurationSummary$Name' => '<p>The name of the over-the-air (OTA) task configuration.</p>', ], ], 'OtaTaskConfigurationSummary' => [ 'base' => '<p>Structure representing one over-the-air (OTA) task configuration.</p>', 'refs' => [ 'OtaTaskConfigurationListDefinition$member' => NULL, ], ], 'OtaTaskExecutionRetryConfig' => [ 'base' => '<p>Over-the-air (OTA) task retry config.</p>', 'refs' => [ 'CreateOtaTaskRequest$OtaTaskExecutionRetryConfig' => NULL, 'GetOtaTaskResponse$OtaTaskExecutionRetryConfig' => NULL, ], ], 'OtaTaskExecutionRolloutConfig' => [ 'base' => '<p>Over-the-air (OTA) task rollout config.</p>', 'refs' => [ 'PushConfig$RolloutConfig' => '<p>Structure representing one rollout config.</p>', ], ], 'OtaTaskExecutionStatus' => [ 'base' => NULL, 'refs' => [ 'OtaTaskExecutionSummary$Status' => '<p>The status of the over-the-air (OTA) task execution summary.</p>', ], ], 'OtaTaskExecutionSummaries' => [ 'base' => '<p>Structure representing one execution summary.</p>', 'refs' => [ 'OtaTaskExecutionSummariesListDefinition$member' => NULL, ], ], 'OtaTaskExecutionSummariesListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListOtaTaskExecutionsResponse$ExecutionSummaries' => '<p>A list of all of the over-the-air (OTA) task executions.</p>', ], ], 'OtaTaskExecutionSummary' => [ 'base' => '<p>Structure representing one over-the-air (OTA) task execution summary.</p>', 'refs' => [ 'OtaTaskExecutionSummaries$TaskExecutionSummary' => '<p>Structure representing one over-the-air (OTA) task execution summary</p>', ], ], 'OtaTaskId' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskResponse$TaskId' => '<p>The identifier of the over-the-air (OTA) task.</p>', 'DeleteOtaTaskRequest$Identifier' => '<p>The identifier of the over-the-air (OTA) task.</p>', 'GetOtaTaskRequest$Identifier' => '<p>The over-the-air (OTA) task id.</p>', 'GetOtaTaskResponse$TaskId' => '<p>The id of the over-the-air (OTA) task.</p>', 'ListOtaTaskExecutionsRequest$Identifier' => '<p>The over-the-air (OTA) task id.</p>', 'OtaTaskSummary$TaskId' => '<p>The id of the over-the-air (OTA) task.</p>', 'UpdateOtaTaskRequest$Identifier' => '<p>The over-the-air (OTA) task id.</p>', ], ], 'OtaTaskListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListOtaTasksResponse$Tasks' => '<p>A list of all of the over-the-air (OTA) tasks.</p>', ], ], 'OtaTaskSchedulingConfig' => [ 'base' => '<p>Over-the-air (OTA) task scheduling config.</p>', 'refs' => [ 'CreateOtaTaskRequest$OtaSchedulingConfig' => NULL, 'GetOtaTaskResponse$OtaSchedulingConfig' => NULL, ], ], 'OtaTaskSummary' => [ 'base' => '<p>Structure representing one over-the-air (OTA) task.</p>', 'refs' => [ 'OtaTaskListDefinition$member' => NULL, ], ], 'OtaTaskTimeoutConfig' => [ 'base' => '<p>Over-the-air (OTA) task timeout config.</p>', 'refs' => [ 'PushConfig$TimeoutConfig' => '<p>Structure representing one timeout config.</p>', ], ], 'OtaType' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskRequest$OtaType' => '<p>The frequency type for the over-the-air (OTA) task.</p>', 'GetOtaTaskResponse$OtaType' => '<p>The frequency type for the over-the-air (OTA) task.</p>', ], ], 'Owner' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$Owner' => '<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>', 'GetManagedThingResponse$Owner' => '<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>', 'ListManagedThingsRequest$OwnerFilter' => '<p>Filter on device owners when listing managed things.</p>', 'ManagedThingSummary$Owner' => '<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>', 'UpdateManagedThingRequest$Owner' => '<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>', ], ], 'ParentControllerId' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$ParentControllerId' => '<p>Id of the controller device used for the discovery job.</p>', 'ListManagedThingsRequest$ParentControllerIdentifierFilter' => '<p>Filter on a parent controller id for a managed thing.</p>', 'ManagedThingSummary$ParentControllerId' => '<p>Id of the controller device used for the discovery job.</p>', ], ], 'PropertyName' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportProperties$member' => NULL, ], ], 'ProvisioningProfileArn' => [ 'base' => NULL, 'refs' => [ 'CreateProvisioningProfileResponse$Arn' => '<p>The Amazon Resource Name (ARN) of the provisioning template used in the provisioning profile.</p>', 'GetProvisioningProfileResponse$Arn' => '<p>The Amazon Resource Name (ARN) of the provisioning template used in the provisioning profile.</p>', 'ProvisioningProfileSummary$Arn' => '<p>The Amazon Resource Name (ARN) of the provisioning template used in the provisioning profile.</p>', ], ], 'ProvisioningProfileId' => [ 'base' => NULL, 'refs' => [ 'CreateProvisioningProfileResponse$Id' => '<p>The identifier of the provisioning profile.</p>', 'DeleteProvisioningProfileRequest$Identifier' => '<p>The name of the provisioning template.</p>', 'GetProvisioningProfileRequest$Identifier' => '<p>The provisioning template the device uses for the provisioning process.</p>', 'GetProvisioningProfileResponse$Id' => '<p>The provisioning profile id..</p>', 'ProvisioningProfileSummary$Id' => '<p>The identifier of the provisioning profile.</p>', ], ], 'ProvisioningProfileListDefinition' => [ 'base' => NULL, 'refs' => [ 'ListProvisioningProfilesResponse$Items' => '<p>The list of provisioning profiles.</p>', ], ], 'ProvisioningProfileName' => [ 'base' => NULL, 'refs' => [ 'CreateProvisioningProfileRequest$Name' => '<p>The name of the provisioning template.</p>', 'CreateProvisioningProfileResponse$Name' => '<p>The name of the provisioning template.</p>', 'GetProvisioningProfileResponse$Name' => '<p>The name of the provisioning template.</p>', 'ProvisioningProfileSummary$Name' => '<p>The name of the provisioning template.</p>', ], ], 'ProvisioningProfileSummary' => [ 'base' => '<p>Structure describing a provisioning profile. </p>', 'refs' => [ 'ProvisioningProfileListDefinition$member' => NULL, ], ], 'ProvisioningStatus' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$ProvisioningStatus' => '<p>The provisioning status of the device in the provisioning workflow for onboarding to IoT managed integrations.</p>', 'ListManagedThingsRequest$ProvisioningStatusFilter' => '<p>Filter on the status of the device.</p>', 'ManagedThingSummary$ProvisioningStatus' => '<p>The provisioning status of the device in the provisioning workflow for onboarding to IoT managed integrations.</p>', ], ], 'ProvisioningType' => [ 'base' => NULL, 'refs' => [ 'CreateProvisioningProfileRequest$ProvisioningType' => '<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>', 'CreateProvisioningProfileResponse$ProvisioningType' => '<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>', 'GetProvisioningProfileResponse$ProvisioningType' => '<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>', 'ProvisioningProfileSummary$ProvisioningType' => '<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>', ], ], 'PushConfig' => [ 'base' => '<p>Structure representing a push config.</p>', 'refs' => [ 'CreateOtaTaskConfigurationRequest$PushConfig' => '<p>Describes the type of configuration used for the over-the-air (OTA) task.</p>', 'GetOtaTaskConfigurationResponse$PushConfig' => '<p>Describes the type of configuration used for the over-the-air (OTA) task.</p>', ], ], 'PutDefaultEncryptionConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'PutDefaultEncryptionConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'PutHubConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'PutHubConfigurationResponse' => [ 'base' => NULL, 'refs' => [], ], 'PutRuntimeLogConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'QueuedAt' => [ 'base' => NULL, 'refs' => [ 'OtaTaskExecutionSummary$QueuedAt' => '<p>The timestamp value of when the over-the-air (OTA) task execution summary is targeted to start.</p>', ], ], 'RegisterCustomEndpointRequest' => [ 'base' => NULL, 'refs' => [], ], 'RegisterCustomEndpointResponse' => [ 'base' => NULL, 'refs' => [], ], 'ResetRuntimeLogConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'ResourceNotFoundException' => [ 'base' => '<p>The specified resource does not exist.</p>', 'refs' => [], ], 'RetryAttempt' => [ 'base' => NULL, 'refs' => [ 'OtaTaskExecutionSummary$RetryAttempt' => '<p>The number of retry attempts for starting the over-the-air (OTA) task execution summary after a failed attempt.</p>', ], ], 'RetryConfigCriteria' => [ 'base' => '<p>Structure representing one retry config criteria.</p>', 'refs' => [ 'RetryConfigCriteriaList$member' => NULL, ], ], 'RetryConfigCriteriaList' => [ 'base' => NULL, 'refs' => [ 'OtaTaskExecutionRetryConfig$RetryConfigCriteria' => '<p>The list of retry config criteria.</p>', ], ], 'RetryCriteriaFailureType' => [ 'base' => NULL, 'refs' => [ 'RetryConfigCriteria$FailureType' => '<p>Over-the-air (OTA) retry criteria failure type.</p>', ], ], 'Role' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$Role' => '<p>The type of device used. This will be the hub controller, cloud device, or AWS IoT device.</p>', 'GetManagedThingResponse$Role' => '<p>The type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p>', 'ListManagedThingsRequest$RoleFilter' => '<p>Filter on the type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p>', 'ManagedThingSummary$Role' => '<p>The type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p>', ], ], 'RolloutRateIncreaseCriteria' => [ 'base' => '<p>Structure representing rollout config criteria.</p>', 'refs' => [ 'ExponentialRolloutRate$RateIncreaseCriteria' => '<p>The criteria for increasing the rollout rate of an over-the-air (OTA) task.</p>', ], ], 'RuntimeLogConfigurations' => [ 'base' => '<p>The different configurations for runtime logs.</p>', 'refs' => [ 'GetRuntimeLogConfigurationResponse$RuntimeLogConfigurations' => '<p>The runtime log configuration for a managed thing.</p>', 'PutRuntimeLogConfigurationRequest$RuntimeLogConfigurations' => '<p>The runtime log configuration for a managed thing.</p>', ], ], 'S3Url' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskRequest$S3Url' => '<p>The URL to the Amazon S3 bucket where the over-the-air (OTA) task is stored.</p>', 'GetOtaTaskResponse$S3Url' => '<p>The URL to the Amazon S3 bucket where the over-the-air (OTA) task is stored.</p>', ], ], 'ScheduleMaintenanceWindow' => [ 'base' => '<p>Structure representing scheduling maintenance window.</p>', 'refs' => [ 'ScheduleMaintenanceWindowList$member' => NULL, ], ], 'ScheduleMaintenanceWindowList' => [ 'base' => NULL, 'refs' => [ 'OtaTaskSchedulingConfig$MaintenanceWindows' => '<p>Maintenance window list for over-the-air (OTA) task scheduling config.</p>', ], ], 'ScheduleStartTime' => [ 'base' => NULL, 'refs' => [ 'OtaTaskSchedulingConfig$StartTime' => '<p>The time an over-the-air (OTA) task will start.</p>', ], ], 'SchedulingConfigEndBehavior' => [ 'base' => NULL, 'refs' => [ 'OtaTaskSchedulingConfig$EndBehavior' => '<p>Specifies the end behavior for all task executions after a task reaches the selected <code>endTime</code>. If <code>endTime</code> is not selected when creating the task, then <code>endBehavior</code> does not apply.</p>', ], ], 'SchemaId' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionResponse$SchemaId' => '<p>The id of the schema version.</p>', 'ListSchemaVersionsRequest$SchemaId' => '<p>Filter on the id of the schema version.</p>', 'SchemaVersionListItem$SchemaId' => '<p>The identifier of the schema version.</p>', ], ], 'SchemaVersionDescription' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionResponse$Description' => '<p>The description of the schema version.</p>', 'SchemaVersionListItem$Description' => '<p>A description of the schema version.</p>', ], ], 'SchemaVersionFormat' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionRequest$Format' => '<p>The format of the schema version.</p>', ], ], 'SchemaVersionList' => [ 'base' => NULL, 'refs' => [ 'ListSchemaVersionsResponse$Items' => '<p>The list of schema versions.</p>', ], ], 'SchemaVersionListItem' => [ 'base' => '<p>List item describing a schema version.</p>', 'refs' => [ 'SchemaVersionList$member' => NULL, ], ], 'SchemaVersionNamespaceName' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionResponse$Namespace' => '<p>The name of the schema version.</p>', 'ListSchemaVersionsRequest$Namespace' => '<p>Filter on the name of the schema version.</p>', 'SchemaVersionListItem$Namespace' => '<p>The name of the schema version.</p>', ], ], 'SchemaVersionSchema' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionResponse$Schema' => '<p>The schema of the schema version.</p>', ], ], 'SchemaVersionType' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionRequest$Type' => '<p>The type of schema version.</p>', 'GetSchemaVersionResponse$Type' => '<p>The type of schema version.</p>', 'ListSchemaVersionsRequest$Type' => '<p>Filter on the type of schema version.</p>', 'SchemaVersionListItem$Type' => '<p>The type of schema version.</p>', ], ], 'SchemaVersionVersion' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionResponse$SemanticVersion' => '<p>The schema version. If this is left blank, it defaults to the latest version.</p>', 'ListSchemaVersionsRequest$SemanticVersion' => '<p>The schema version. If this is left blank, it defaults to the latest version.</p>', 'SchemaVersionListItem$SemanticVersion' => '<p>The schema version. If this is left blank, it defaults to the latest version.</p>', ], ], 'SchemaVersionVisibility' => [ 'base' => NULL, 'refs' => [ 'GetSchemaVersionResponse$Visibility' => '<p>The visibility of the schema version.</p>', 'ListSchemaVersionsRequest$Visibility' => '<p>The visibility of the schema version.</p>', 'SchemaVersionListItem$Visibility' => '<p>The visibility of the schema version.</p>', ], ], 'SchemaVersionedId' => [ 'base' => NULL, 'refs' => [ 'CapabilityReportCapability$id' => '<p>The id of the schema version.</p>', 'CommandCapability$id' => '<p>Describe the capability with an id.</p>', 'GetSchemaVersionRequest$SchemaVersionedId' => '<p>Schema id with a version specified. If the version is missing, it defaults to latest version.</p>', 'StateCapability$id' => '<p>The id of the managed thing in the capability report.</p>', ], ], 'SendManagedThingCommandRequest' => [ 'base' => NULL, 'refs' => [], ], 'SendManagedThingCommandResponse' => [ 'base' => NULL, 'refs' => [], ], 'SerialNumber' => [ 'base' => NULL, 'refs' => [ 'CreateManagedThingRequest$SerialNumber' => '<p>The serial number of the device.</p>', 'GetManagedThingResponse$SerialNumber' => '<p>The serial number of the device.</p>', 'ListManagedThingsRequest$SerialNumberFilter' => '<p>Filter on the serial number of the device.</p>', 'ManagedThingSummary$SerialNumber' => '<p>The serial number of the device.</p>', 'UpdateManagedThingRequest$SerialNumber' => '<p>The serial number of the device.</p>', ], ], 'ServiceQuotaExceededException' => [ 'base' => '<p>The service quota has been exceeded for this request.</p>', 'refs' => [], ], 'ServiceUnavailableException' => [ 'base' => '<p>The service is temporarily unavailable.</p>', 'refs' => [], ], 'SetupAt' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$ActivatedAt' => '<p>The timestampe value of when the device was activated.</p>', 'ManagedThingSummary$ActivatedAt' => '<p>The timestampe value of when the managed thing was activated at.</p>', ], ], 'SmartHomeResourceId' => [ 'base' => NULL, 'refs' => [ 'CreateEventLogConfigurationRequest$ResourceId' => '<p>The identifier of the resource for the event log configuration.</p>', 'EventLogConfigurationSummary$ResourceId' => '<p>The identifier of the resource for the event log configuration.</p>', 'GetEventLogConfigurationResponse$ResourceId' => '<p>The identifier of the resource for the event log configuration.</p>', ], ], 'SmartHomeResourceType' => [ 'base' => NULL, 'refs' => [ 'CreateEventLogConfigurationRequest$ResourceType' => '<p>The type of resource for the event log configuration.</p>', 'EventLogConfigurationSummary$ResourceType' => '<p>The type of resource for the event log configuration.</p>', 'GetEventLogConfigurationResponse$ResourceType' => '<p>The type of resource for the event log configuration.</p>', ], ], 'StartDeviceDiscoveryRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartDeviceDiscoveryResponse' => [ 'base' => NULL, 'refs' => [], ], 'StartTime' => [ 'base' => NULL, 'refs' => [ 'ScheduleMaintenanceWindow$StartTime' => '<p>Displays the start time of the next maintenance window.</p>', ], ], 'StartedAt' => [ 'base' => NULL, 'refs' => [ 'OtaTaskExecutionSummary$StartedAt' => '<p>The timestamp value of when the over-the-air (OTA) task execution summary started.</p>', ], ], 'StateCapabilities' => [ 'base' => NULL, 'refs' => [ 'StateEndpoint$capabilities' => '<p>Describe the endpoint with an id, a name, and the relevant capabilities for the reporting state.</p>', ], ], 'StateCapability' => [ 'base' => '<p>State capabilities added for the managed thing.</p>', 'refs' => [ 'StateCapabilities$member' => NULL, ], ], 'StateEndpoint' => [ 'base' => '<p>Describe the endpoint with an Id, a name, and the relevant capabilities for reporting state</p>', 'refs' => [ 'StateEndpoints$member' => NULL, ], ], 'StateEndpoints' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingStateResponse$Endpoints' => '<p>The device endpoint.</p>', ], ], 'String' => [ 'base' => NULL, 'refs' => [ 'Target$member' => NULL, ], ], 'TagKey' => [ 'base' => NULL, 'refs' => [ 'TagsMap$key' => NULL, ], ], 'TagValue' => [ 'base' => NULL, 'refs' => [ 'TagsMap$value' => NULL, ], ], 'TagsMap' => [ 'base' => NULL, 'refs' => [ 'CreateCredentialLockerRequest$Tags' => '<p>A set of key/value pairs that are used to manage the credential locker.</p>', 'CreateDestinationRequest$Tags' => '<p>A set of key/value pairs that are used to manage the destination.</p>', 'CreateManagedThingRequest$Tags' => '<p>A set of key/value pairs that are used to manage the managed thing.</p>', 'CreateNotificationConfigurationRequest$Tags' => '<p>A set of key/value pairs that are used to manage the notification configuration.</p>', 'CreateOtaTaskRequest$Tags' => '<p>A set of key/value pairs that are used to manage the over-the-air (OTA) task.</p>', 'CreateProvisioningProfileRequest$Tags' => '<p>A set of key/value pairs that are used to manage the provisioning profile.</p>', 'GetCredentialLockerResponse$Tags' => '<p>A set of key/value pairs that are used to manage the credential locker.</p>', 'GetDestinationResponse$Tags' => '<p>A set of key/value pairs that are used to manage the customer-managed destination.</p>', 'GetDeviceDiscoveryResponse$Tags' => '<p>A set of key/value pairs that are used to manage the device discovery request.</p>', 'GetManagedThingResponse$Tags' => '<p>A set of key/value pairs that are used to manage the managed thing.</p>', 'GetNotificationConfigurationResponse$Tags' => '<p>A set of key/value pairs that are used to manage the notification configuration.</p>', 'GetProvisioningProfileResponse$Tags' => '<p>A set of key/value pairs that are used to manage the provisioning profile.</p>', 'StartDeviceDiscoveryRequest$Tags' => '<p>A set of key/value pairs that are used to manage the device discovery request.</p>', ], ], 'Target' => [ 'base' => NULL, 'refs' => [ 'CreateOtaTaskRequest$Target' => '<p>The device targeted for the over-the-air (OTA) task.</p>', 'GetOtaTaskResponse$Target' => '<p>The device targeted for the over-the-air (OTA) task.</p>', 'TaskProcessingDetails$processingTargets' => '<p>The targets of the over-the-air (OTA) task.</p>', ], ], 'TaskProcessingDetails' => [ 'base' => '<p>Details about the over-the-air (OTA) task process.</p>', 'refs' => [ 'GetOtaTaskResponse$TaskProcessingDetails' => '<p>The processing details of all over-the-air (OTA) tasks.</p>', ], ], 'ThresholdPercentage' => [ 'base' => NULL, 'refs' => [ 'AbortConfigCriteria$ThresholdPercentage' => '<p>The minimum percentage of over-the-air (OTA) task execution failures that must occur to initiate the last abort.</p>', ], ], 'ThrottlingException' => [ 'base' => '<p>The rate exceeds the limit.</p>', 'refs' => [], ], 'TraceId' => [ 'base' => NULL, 'refs' => [ 'SendManagedThingCommandResponse$TraceId' => '<p>The trace request identifier. This is specified by the device owner, but will be generated by IoT managed integrations if not provided by the device owner.</p>', ], ], 'UnauthorizedException' => [ 'base' => '<p>You are not authorized to perform this operation.</p>', 'refs' => [], ], 'UniversalProductCode' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$UniversalProductCode' => '<p>The universal product code (UPC) of the device model. The UPC is typically used in the United States of America and Canada.</p>', ], ], 'UpdateDestinationRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateEventLogConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateManagedThingRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateNotificationConfigurationRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateOtaTaskRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdatedAt' => [ 'base' => NULL, 'refs' => [ 'GetManagedThingResponse$UpdatedAt' => '<p>The timestamp value of when the managed thing was last updated at.</p>', ], ], 'UploadLog' => [ 'base' => NULL, 'refs' => [ 'RuntimeLogConfigurations$UploadLog' => '<p>Configuration to enable or disable uploading of runtime logs to the cloud.</p>', ], ], 'UploadPeriodMinutes' => [ 'base' => NULL, 'refs' => [ 'RuntimeLogConfigurations$UploadPeriodMinutes' => '<p>Configuration to set the time interval in minutes between each batch of runtime logs that the device uploads to the cloud.</p>', ], ], 'ValidationException' => [ 'base' => '<p>A validation error occurred when performing the API request.</p>', 'refs' => [], ], 'ValidationSchema' => [ 'base' => NULL, 'refs' => [ 'ManagedThingSchemaListItem$Schema' => '<p>The validation schema for one schema item associated with a managed thing.</p>', ], ], ],];
