{
  "version": "1.0",
  "examples": {
    "CreateCloudConnector": [
      {
        "input": {
          "ClientToken": "1234567890",
          "EndpointConfig": {
            "lambda": {
              "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
            }
          },
          "EndpointType": "LAMBDA",
          "Name": "Connector for TP Link Cloud"
        },
        "output": {
          "Id": "TPLinkConnector1211"
        },
        "id": "example-1",
        "title": "CreateCloudConnector happy path for TP Link"
      },
      {
        "input": {
          "ClientToken": "12312321",
          "EndpointConfig": {
            "lambda": {
              "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
            }
          },
          "EndpointType": "LAMBDA",
          "Name": "Connector for Ring Cloud"
        },
        "output": {
          "Id": "RingConnector1212"
        },
        "id": "example-2",
        "title": "CreateCloudConnector happy path for Ring"
      },
      {
        "input": {
          "ClientToken": "1213123123",
          "EndpointConfig": {
            "lambda": {
              "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion2"
            }
          },
          "EndpointType": "LAMBDA",
          "Name": "Connector for Ring Cloud"
        },
        "id": "example-3",
        "title": "CreateCloudConnector error path for Ring connector which already exists"
      }
    ],
    "GetCloudConnector": [
      {
        "input": {
          "Identifier": "123456789012"
        },
        "output": {
          "EndpointConfig": {
            "lambda": {
              "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
            }
          },
          "EndpointType": "LAMBDA",
          "Id": "123456789012",
          "Name": "Connector for TP Link Cloud V2"
        },
        "id": "example-1",
        "title": "GetCloudConnector happy path for TP Link to get connector resource"
      },
      {
        "input": {
          "Identifier": "123456789012"
        },
        "output": {
          "EndpointConfig": {
            "lambda": {
              "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
            }
          },
          "Name": "Connector for Ring Cloud"
        },
        "id": "example-2",
        "title": "GetCloudConnector happy path for Ring to pending status"
      },
      {
        "input": {
          "Identifier": "123456789012"
        },
        "id": "example-3",
        "title": "GetCloudConnector error Id for Ring connector which does not exist"
      }
    ],
    "GetSchemaVersion": [
      {
        "input": {
          "SchemaVersionedId": "matter.ColorControl@1.4",
          "Type": "capability"
        },
        "output": {
          "Description": "The Color Control cluster defined as Harmony Capability.",
          "Namespace": "matter",
          "Schema": {
            "name": "Color Control",
            "$defs": {
            },
            "$id": "/schema-versions/capability/matter.ColorControl@1.4",
            "$ref": "/schema-versions/definition/aws.capability@1.0",
            "actions": [
              {
                "name": "MoveToHue",
                "extrinsicId": "0x00",
                "request": {
                  "parameters": {
                    "Hue": {
                      "value": {
                        "$ref": "aws.integer@1.0"
                      },
                      "extrinsicId": "0"
                    }
                  }
                }
              }
            ],
            "description": "The Color Control cluster defined as Harmony Capability.",
            "events": [

            ],
            "extrinsicId": "0x0300",
            "extrinsicVersion": "14",
            "properties": {
              "CurrentHue": {
                "value": {
                  "$ref": "aws.integer@1.0"
                },
                "mutable": false
              }
            },
            "title": "Color Control Cluster"
          },
          "SchemaId": "matter.ColorControl",
          "SemanticVersion": "1.4",
          "Type": "capability"
        },
        "id": "example-1",
        "title": "GetSchemaVersion happy path for an example schema version."
      },
      {
        "input": {
          "Format": "ZCL",
          "SchemaVersionedId": "matter.ColorControl@1.4",
          "Type": "capability"
        },
        "output": {
          "Description": "The Color Control cluster defined as Harmony Capability.",
          "Namespace": "matter",
          "Schema": {
          },
          "SchemaId": "matter.ColorControl",
          "SemanticVersion": "1.4",
          "Type": "capability"
        },
        "id": "example-2",
        "title": "GetSchemaVersion happy path for an example schema version."
      },
      {
        "input": {
          "SchemaVersionedId": "matter.ColorControl@$latest",
          "Type": "capability"
        },
        "id": "example-3",
        "title": "GetSchemaVersion error path for an example schema version that does not exist."
      }
    ],
    "ListCloudConnectors": [
      {
        "input": {
          "MaxResults": 5
        },
        "output": {
          "Items": [
            {
              "Description": "Description for TP Link Cloud V2",
              "EndpointConfig": {
                "lambda": {
                  "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                }
              },
              "EndpointType": "LAMBDA",
              "Name": "Connector for TP Link Cloud V2"
            },
            {
              "Description": "Description for Ring Cloud",
              "EndpointConfig": {
                "lambda": {
                  "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                }
              },
              "EndpointType": "LAMBDA",
              "Name": "Connector for Ring Cloud"
            }
          ]
        },
        "id": "example-1",
        "title": "ListCloudConnectors happy path to get a list of connector resources"
      },
      {
        "input": {
          "MaxResults": 5
        },
        "id": "example-2",
        "title": "ListCloudConnectors error path for unauthorized user"
      }
    ],
    "ListSchemaVersions": [
      {
        "input": {
          "SchemaId": "example.ColorControl",
          "Type": "capability"
        },
        "output": {
          "Items": [
            {
              "Description": "The Color Control cluster defined as Harmony Capability.",
              "Namespace": "matter",
              "SchemaId": "example.ColorControl",
              "SemanticVersion": "1.4",
              "Type": "capability"
            }
          ]
        },
        "id": "example-1",
        "title": "ListSchemaVersions happy path for an example schema version."
      },
      {
        "input": {
          "SemanticVersion": "34.56",
          "Type": "capability"
        },
        "output": {
          "Items": [
            {
              "Description": "The Color Control cluster defined as Harmony Capability.",
              "Namespace": "matter",
              "SchemaId": "example.ColorControl",
              "SemanticVersion": "1.4",
              "Type": "capability"
            }
          ]
        },
        "id": "example-2",
        "title": "ListSchemaVersions by version."
      },
      {
        "input": {
          "Namespace": "matter",
          "SchemaId": "example.ColorControl",
          "Type": "capability"
        },
        "id": "example-3",
        "title": "ListSchemaVersions error  for invalid input."
      }
    ],
    "SendConnectorEvent": [
      {
        "input": {
          "ConnectorId": "MockConnectorId",
          "DeviceDiscoveryId": "358275hbk3qr",
          "Devices": [
            {
              "CapabilityReport": {
                "version": "1.0.0",
                "endpoints": [
                  {
                    "clusters": [
                      {
                        "attributes": [
                          {
                            "value": "exampleString",
                            "id": "0x0000"
                          },
                          {
                            "id": "0x0001"
                          },
                          {
                            "id": "0x0002"
                          }
                        ],
                        "commands": [
                          "0x00",
                          "0x01"
                        ],
                        "events": [

                        ],
                        "id": "0x0201",
                        "revision": 1
                      }
                    ],
                    "deviceTypes": [
                      "Refrigerator"
                    ],
                    "id": "EP1"
                  }
                ],
                "nodeId": "1"
              },
              "ConnectorDeviceId": "Mock-Connector-DeviceId-1",
              "ConnectorDeviceName": "Sample-User-device-1"
            }
          ],
          "Message": "Sample ConnectorEventMessage",
          "Operation": "DEVICE_DISCOVERY",
          "OperationVersion": "1.0",
          "StatusCode": 200,
          "UserId": "MockThirdPartyUserId"
        },
        "output": {
          "ConnectorId": "MockConnectorId"
        },
        "id": "example-1",
        "title": "SendConnectorEvent happy path for device discovery"
      },
      {
        "input": {
          "ConnectorId": "MockConnectorId",
          "MatterEndpoint": {
            "clusters": [
              {
                "attributes": {
                  "0x0000": [
                    73
                  ],
                  "0x15570003": "exampleString"
                },
                "commands": {
                  "0x03": {
                  }
                },
                "id": "0x1003"
              }
            ],
            "id": "1"
          },
          "Message": "Sample ConnectorEventMessage",
          "Operation": "DEVICE_COMMAND_RESPONSE",
          "OperationVersion": "1.0",
          "StatusCode": 200,
          "TraceId": "9b75f3839b6140f=_1",
          "UserId": "MockThirdPartyUserId"
        },
        "output": {
          "ConnectorId": "MockConnectorId"
        },
        "id": "example-2",
        "title": "SendConnectorEvent happy path for device command response"
      },
      {
        "input": {
          "ConnectorId": "MockConnectorId",
          "MatterEndpoint": {
            "clusters": [
              {
                "attributes": {
                  "0x0000": 73
                },
                "id": "0x1003"
              }
            ],
            "id": "1"
          },
          "Message": "Sample ConnectorEventMessage",
          "Operation": "DEVICE_EVENT",
          "OperationVersion": "1.0",
          "StatusCode": 200,
          "TraceId": "TraceId-Sample",
          "UserId": "MockThirdPartyUserId"
        },
        "output": {
          "ConnectorId": "MockConnectorId"
        },
        "id": "example-3",
        "title": "SendConnectorEvent happy path for device event"
      }
    ],
    "UpdateCloudConnector": [
      {
        "input": {
          "Identifier": "123456789012",
          "Name": "Connector for TP Link Cloud V2"
        },
        "id": "example-1",
        "title": "UpdateCloudConnector happy path for TP Link to update display name"
      },
      {
        "input": {
          "Identifier": "123456789012",
          "Name": "Connector for Ring Cloud"
        },
        "id": "example-2",
        "title": "UpdateCloudConnector error Id for Ring connector which does not exist"
      }
    ]
  }
}
