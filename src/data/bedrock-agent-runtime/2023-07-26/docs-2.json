{
  "version": "2.0",
  "service": "<p>Contains APIs related to model invocation and querying of knowledge bases.</p>",
  "operations": {
    "CreateInvocation": "<p>Creates a new invocation within a session. An invocation groups the related invocation steps that store the content from a conversation. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p> <p>Related APIs</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocations.html\">ListInvocations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListSessions.html\">ListSessions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetSession.html\">GetSession</a> </p> </li> </ul>",
    "CreateSession": "<p>Creates a session to temporarily store conversations for generative AI (GenAI) applications built with open-source frameworks such as LangGraph and LlamaIndex. Sessions enable you to save the state of conversations at checkpoints, with the added security and infrastructure of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p> <p>By default, Amazon Bedrock uses Amazon Web Services-managed keys for session encryption, including session metadata, or you can use your own KMS key. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/session-encryption.html\">Amazon Bedrock session encryption</a>.</p> <note> <p> You use a session to store state and conversation history for generative AI applications built with open-source frameworks. For Amazon Bedrock Agents, the service automatically manages conversation context and associates them with the agent-specific sessionId you specify in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> API operation. </p> </note> <p>Related APIs:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListSessions.html\">ListSessions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetSession.html\">GetSession</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_EndSession.html\">EndSession</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_DeleteSession.html\">DeleteSession</a> </p> </li> </ul>",
    "DeleteAgentMemory": "<p>Deletes memory from the specified memory identifier.</p>",
    "DeleteSession": "<p>Deletes a session that you ended. You can't delete a session with an <code>ACTIVE</code> status. To delete an active session, you must first end it with the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_EndSession.html\">EndSession</a> API operation. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
    "EndSession": "<p>Ends the session. After you end a session, you can still access its content but you can’t add to it. To delete the session and it's content, you use the DeleteSession API operation. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
    "GenerateQuery": "<p>Generates an SQL query from a natural language query. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-generate-query.html\">Generate a query for structured data</a> in the Amazon Bedrock User Guide.</p>",
    "GetAgentMemory": "<p>Gets the sessions stored in the memory of the agent.</p>",
    "GetInvocationStep": "<p>Retrieves the details of a specific invocation step within an invocation in a session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
    "GetSession": "<p>Retrieves details about a specific session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
    "InvokeAgent": "<note> </note> <p>Sends a prompt for the agent to process and respond to. Note the following fields for the request:</p> <ul> <li> <p>To continue the same conversation with an agent, use the same <code>sessionId</code> value in the request.</p> </li> <li> <p>To activate trace enablement, turn <code>enableTrace</code> to <code>true</code>. Trace enablement helps you follow the agent's reasoning process that led it to the information it processed, the actions it took, and the final result it yielded. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-events\">Trace enablement</a>.</p> </li> <li> <p>To stream agent responses, make sure that only orchestration prompt is enabled. Agent streaming is not supported for the following steps: </p> <ul> <li> <p> <code>Pre-processing</code> </p> </li> <li> <p> <code>Post-processing</code> </p> </li> <li> <p>Agent with 1 Knowledge base and <code>User Input</code> not enabled</p> </li> </ul> </li> <li> <p>End a conversation by setting <code>endSession</code> to <code>true</code>.</p> </li> <li> <p>In the <code>sessionState</code> object, you can include attributes for the session or prompt or, if you configured an action group to return control, results from invocation of the action group.</p> </li> </ul> <p>The response contains both <b>chunk</b> and <b>trace</b> attributes.</p> <p>The final response is returned in the <code>bytes</code> field of the <code>chunk</code> object. The <code>InvokeAgent</code> returns one chunk for the entire interaction.</p> <ul> <li> <p>The <code>attribution</code> object contains citations for parts of the response.</p> </li> <li> <p>If you set <code>enableTrace</code> to <code>true</code> in the request, you can trace the agent's steps and reasoning process that led it to the response.</p> </li> <li> <p>If the action predicted was configured to return control, the response returns parameters for the action, elicited from the user, in the <code>returnControl</code> field.</p> </li> <li> <p>Errors are also surfaced in the response.</p> </li> </ul>",
    "InvokeFlow": "<p>Invokes an alias of a flow to run the inputs that you specify and return the output of each node as a stream. If there's an error, the error is returned. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-test.html\">Test a flow in Amazon Bedrock</a> in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html\">Amazon Bedrock User Guide</a>.</p> <note> <p>The CLI doesn't support streaming operations in Amazon Bedrock, including <code>InvokeFlow</code>.</p> </note>",
    "InvokeInlineAgent": "<p> Invokes an inline Amazon Bedrock agent using the configurations you provide with the request. </p> <ul> <li> <p>Specify the following fields for security purposes.</p> <ul> <li> <p>(Optional) <code>customerEncryptionKeyArn</code> – The Amazon Resource Name (ARN) of a KMS key to encrypt the creation of the agent.</p> </li> <li> <p>(Optional) <code>idleSessionTTLinSeconds</code> – Specify the number of seconds for which the agent should maintain session information. After this time expires, the subsequent <code>InvokeInlineAgent</code> request begins a new session.</p> </li> </ul> </li> <li> <p>To override the default prompt behavior for agent orchestration and to use advanced prompts, include a <code>promptOverrideConfiguration</code> object. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p> </li> <li> <p>The agent instructions will not be honored if your agent has only one knowledge base, uses default prompts, has no action group, and user input is disabled.</p> </li> </ul> <note> </note>",
    "ListInvocationSteps": "<p>Lists all invocation steps associated with a session and optionally, an invocation within the session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
    "ListInvocations": "<p>Lists all invocations associated with a specific session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
    "ListSessions": "<p>Lists all sessions in your Amazon Web Services account. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
    "ListTagsForResource": "<p>List all the tags for the resource you specify.</p>",
    "OptimizePrompt": "<p>Optimizes a prompt for the task that you specify. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-optimize.html\">Optimize a prompt</a> in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html\">Amazon Bedrock User Guide</a>.</p>",
    "PutInvocationStep": "<p>Add an invocation step to an invocation in a session. An invocation step stores fine-grained state checkpoints, including text and images, for each interaction. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p> <p>Related APIs:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetInvocationStep.html\">GetInvocationStep</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocationSteps.html\">ListInvocationSteps</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocations.html\">ListInvocations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocations.html\">ListSessions</a> </p> </li> </ul>",
    "Rerank": "<p>Reranks the relevance of sources based on queries. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/rerank.html\">Improve the relevance of query responses with a reranker model</a>.</p>",
    "Retrieve": "<p>Queries a knowledge base and retrieves information from it.</p>",
    "RetrieveAndGenerate": "<p>Queries a knowledge base and generates responses based on the retrieved results and using the specified foundation model or <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html\">inference profile</a>. The response only cites sources that are relevant to the query.</p>",
    "RetrieveAndGenerateStream": "<p>Queries a knowledge base and generates responses based on the retrieved results, with output in streaming format.</p> <note> <p>The CLI doesn't support streaming operations in Amazon Bedrock, including <code>InvokeModelWithResponseStream</code>.</p> </note> <p>This operation requires permission for the <code> bedrock:RetrieveAndGenerate</code> action.</p>",
    "TagResource": "<p>Associate tags with a resource. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html\">Tagging resources</a> in the Amazon Bedrock User Guide.</p>",
    "UntagResource": "<p>Remove tags from a resource.</p>",
    "UpdateSession": "<p>Updates the metadata or encryption settings of a session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>"
  },
  "shapes": {
    "APISchema": {
      "base": "<p> Contains details about the OpenAPI schema for the action group. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>. You can either include the schema directly in the payload field or you can upload it to an S3 bucket and specify the S3 bucket location in the s3 field. </p>",
      "refs": {
        "AgentActionGroup$apiSchema": "<p> Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>. </p>"
      }
    },
    "AWSResourceARN": {
      "base": null,
      "refs": {
        "InvokeAgentRequest$sourceArn": "<p>The ARN of the resource making the request.</p>"
      }
    },
    "AccessDeniedException": {
      "base": "<p>The request is denied because of missing access permissions. Check your permissions and retry your request.</p>",
      "refs": {
        "FlowResponseStream$accessDeniedException": "<p>The request is denied because of missing access permissions. Check your permissions and retry your request.</p>",
        "InlineAgentResponseStream$accessDeniedException": "<p>The request is denied because of missing access permissions. Check your permissions and retry your request.</p>",
        "OptimizedPromptStream$accessDeniedException": "<p>The request is denied because of missing access permissions. Check your permissions and retry your request.</p>",
        "ResponseStream$accessDeniedException": "<p>The request is denied because of missing access permissions. Check your permissions and retry your request.</p>",
        "RetrieveAndGenerateStreamResponseOutput$accessDeniedException": "<p>The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied\">AccessDeniedException</a> in the Amazon Bedrock User Guide.</p>"
      }
    },
    "ActionGroupExecutor": {
      "base": "<p> Contains details about the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user. </p>",
      "refs": {
        "AgentActionGroup$actionGroupExecutor": "<p> The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user. </p>"
      }
    },
    "ActionGroupInvocationInput": {
      "base": "<p>Contains information about the action group being invoked. For more information about the possible structures, see the InvocationInput tab in <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/trace-orchestration.html\">OrchestrationTrace</a> in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html\">Amazon Bedrock User Guide</a>.</p>",
      "refs": {
        "InvocationInput$actionGroupInvocationInput": "<p>Contains information about the action group to be invoked.</p>"
      }
    },
    "ActionGroupInvocationOutput": {
      "base": "<p>Contains the JSON-formatted string returned by the API invoked by the action group.</p>",
      "refs": {
        "Observation$actionGroupInvocationOutput": "<p>Contains the JSON-formatted string returned by the API invoked by the action group.</p>"
      }
    },
    "ActionGroupName": {
      "base": null,
      "refs": {
        "ActionGroupInvocationInput$actionGroupName": "<p>The name of the action group.</p>"
      }
    },
    "ActionGroupOutputString": {
      "base": null,
      "refs": {
        "ActionGroupInvocationOutput$text": "<p>The JSON-formatted string returned by the API invoked by the action group.</p>"
      }
    },
    "ActionGroupSignature": {
      "base": null,
      "refs": {
        "AgentActionGroup$parentActionGroupSignature": "<p>Specify a built-in or computer use action for this action group. If you specify a value, you must leave the <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields empty for this action group. </p> <ul> <li> <p>To allow your agent to request the user for additional information when trying to complete a task, set this field to <code>AMAZON.UserInput</code>. </p> </li> <li> <p>To allow your agent to generate, run, and troubleshoot code when trying to complete a task, set this field to <code>AMAZON.CodeInterpreter</code>.</p> </li> <li> <p>To allow your agent to use an Anthropic computer use tool, specify one of the following values. </p> <important> <p> Computer use is a new Anthropic Claude model capability (in beta) available with Anthropic Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. When operating computer use functionality, we recommend taking additional security precautions, such as executing computer actions in virtual environments with restricted data access and limited internet connectivity. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p> </important> <ul> <li> <p> <code>ANTHROPIC.Computer</code> - Gives the agent permission to use the mouse and keyboard and take screenshots.</p> </li> <li> <p> <code>ANTHROPIC.TextEditor</code> - Gives the agent permission to view, create and edit files.</p> </li> <li> <p> <code>ANTHROPIC.Bash</code> - Gives the agent permission to run commands in a bash shell.</p> </li> </ul> </li> </ul>"
      }
    },
    "ActionGroupSignatureParams": {
      "base": null,
      "refs": {
        "AgentActionGroup$parentActionGroupSignatureParams": "<p> The configuration settings for a computer use action. </p> <important> <p>Computer use is a new Anthropic Claude model capability (in beta) available with Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>.</p> </important>"
      }
    },
    "ActionGroupSignatureParamsKeyString": {
      "base": null,
      "refs": {
        "ActionGroupSignatureParams$key": null
      }
    },
    "ActionGroupSignatureParamsValueString": {
      "base": null,
      "refs": {
        "ActionGroupSignatureParams$value": null
      }
    },
    "ActionInvocationType": {
      "base": null,
      "refs": {
        "ApiInvocationInput$actionInvocationType": "<p>Contains information about the API operation to invoke.</p>",
        "FunctionInvocationInput$actionInvocationType": "<p>Contains information about the function to invoke,</p>"
      }
    },
    "AdditionalModelRequestFields": {
      "base": null,
      "refs": {
        "BedrockRerankingModelConfiguration$additionalModelRequestFields": "<p>A JSON object whose keys are request fields for the model and whose values are values for those fields.</p>",
        "ExternalSourcesGenerationConfiguration$additionalModelRequestFields": "<p> Additional model parameters and their corresponding values not included in the textInferenceConfig structure for an external source. Takes in custom model parameters specific to the language model being used. </p>",
        "GenerationConfiguration$additionalModelRequestFields": "<p> Additional model parameters and corresponding values not included in the textInferenceConfig structure for a knowledge base. This allows users to provide custom model parameters specific to the language model being used. </p>",
        "OrchestrationConfiguration$additionalModelRequestFields": "<p> Additional model parameters and corresponding values not included in the textInferenceConfig structure for a knowledge base. This allows users to provide custom model parameters specific to the language model being used. </p>",
        "VectorSearchBedrockRerankingModelConfiguration$additionalModelRequestFields": "<p>A JSON object whose keys are request fields for the model and whose values are values for those fields.</p>"
      }
    },
    "AdditionalModelRequestFieldsKey": {
      "base": null,
      "refs": {
        "AdditionalModelRequestFields$key": null
      }
    },
    "AdditionalModelRequestFieldsValue": {
      "base": null,
      "refs": {
        "AdditionalModelRequestFields$value": null
      }
    },
    "AgentActionGroup": {
      "base": "<p> Contains details of the inline agent's action group. </p>",
      "refs": {
        "AgentActionGroups$member": null
      }
    },
    "AgentActionGroups": {
      "base": null,
      "refs": {
        "Collaborator$actionGroups": "<p> List of action groups with each action group defining tasks the inline collaborator agent needs to carry out. </p>",
        "InvokeInlineAgentRequest$actionGroups": "<p> A list of action groups with each action group defining the action the inline agent needs to carry out. </p>"
      }
    },
    "AgentAliasArn": {
      "base": null,
      "refs": {
        "AgentCollaboratorInvocationInput$agentCollaboratorAliasArn": "<p>The collaborator's alias ARN.</p>",
        "AgentCollaboratorInvocationOutput$agentCollaboratorAliasArn": "<p>The output's agent collaborator alias ARN.</p>",
        "Caller$agentAliasArn": "<p>The caller's agent alias ARN.</p>",
        "CollaboratorConfiguration$agentAliasArn": "<p> The Amazon Resource Name (ARN) of the inline collaborator agent. </p>"
      }
    },
    "AgentAliasId": {
      "base": null,
      "refs": {
        "DeleteAgentMemoryRequest$agentAliasId": "<p>The unique identifier of an alias of an agent.</p>",
        "GetAgentMemoryRequest$agentAliasId": "<p>The unique identifier of an alias of an agent.</p>",
        "InvokeAgentRequest$agentAliasId": "<p>The alias of the agent to use.</p>",
        "TracePart$agentAliasId": "<p>The unique identifier of the alias of the agent.</p>"
      }
    },
    "AgentCollaboration": {
      "base": null,
      "refs": {
        "Collaborator$agentCollaboration": "<p> Defines how the inline supervisor agent handles information across multiple collaborator agents to coordinate a final response. </p>",
        "InvokeInlineAgentRequest$agentCollaboration": "<p> Defines how the inline collaborator agent handles information across multiple collaborator agents to coordinate a final response. The inline collaborator agent can also be the supervisor. </p>"
      }
    },
    "AgentCollaboratorInputPayload": {
      "base": "<p>Input for an agent collaborator. The input can be text or an action invocation result.</p>",
      "refs": {
        "AgentCollaboratorInvocationInput$input": "<p>Text or action invocation result input for the collaborator.</p>"
      }
    },
    "AgentCollaboratorInvocationInput": {
      "base": "<p>An agent collaborator invocation input.</p>",
      "refs": {
        "InvocationInput$agentCollaboratorInvocationInput": "<p>The collaborator's invocation input.</p>"
      }
    },
    "AgentCollaboratorInvocationOutput": {
      "base": "<p>Output from an agent collaborator.</p>",
      "refs": {
        "Observation$agentCollaboratorInvocationOutput": "<p>A collaborator's invocation output.</p>"
      }
    },
    "AgentCollaboratorOutputPayload": {
      "base": "<p>Output from an agent collaborator. The output can be text or an action invocation result.</p>",
      "refs": {
        "AgentCollaboratorInvocationOutput$output": "<p>The output's output.</p>"
      }
    },
    "AgentCollaboratorPayloadString": {
      "base": null,
      "refs": {
        "AgentCollaboratorInputPayload$text": "<p>Input text.</p>",
        "AgentCollaboratorOutputPayload$text": "<p>Text output.</p>"
      }
    },
    "AgentId": {
      "base": null,
      "refs": {
        "DeleteAgentMemoryRequest$agentId": "<p>The unique identifier of the agent to which the alias belongs.</p>",
        "GetAgentMemoryRequest$agentId": "<p>The unique identifier of the agent to which the alias belongs.</p>",
        "InvokeAgentRequest$agentId": "<p>The unique identifier of the agent to use.</p>",
        "TracePart$agentId": "<p>The unique identifier of the agent.</p>"
      }
    },
    "AgentVersion": {
      "base": null,
      "refs": {
        "TracePart$agentVersion": "<p>The version of the agent.</p>"
      }
    },
    "AnalyzePromptEvent": {
      "base": "<p>An event in which the prompt was analyzed in preparation for optimization.</p>",
      "refs": {
        "OptimizedPromptStream$analyzePromptEvent": "<p>An event in which the prompt was analyzed in preparation for optimization.</p>"
      }
    },
    "ApiContentMap": {
      "base": null,
      "refs": {
        "ApiRequestBody$content": "<p>The content of the request body. The key of the object in this field is a media type defining the format of the request body.</p>"
      }
    },
    "ApiInvocationInput": {
      "base": "<p>Contains information about the API operation that the agent predicts should be called.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p>In the <code>returnControl</code> field of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> </p> </li> </ul>",
      "refs": {
        "InvocationInputMember$apiInvocationInput": "<p>Contains information about the API operation that the agent predicts should be called.</p>"
      }
    },
    "ApiParameter": {
      "base": "<p>Information about a parameter to provide to the API request.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> </p> </li> </ul>",
      "refs": {
        "ApiParameters$member": null
      }
    },
    "ApiParameters": {
      "base": null,
      "refs": {
        "ApiInvocationInput$parameters": "<p>The parameters to provide for the API request, as the agent elicited from the user.</p>"
      }
    },
    "ApiPath": {
      "base": null,
      "refs": {
        "ActionGroupInvocationInput$apiPath": "<p>The path to the API to call, based off the action group.</p>",
        "ApiInvocationInput$apiPath": "<p>The path to the API operation.</p>",
        "ApiResult$apiPath": "<p>The path to the API operation.</p>"
      }
    },
    "ApiRequestBody": {
      "base": "<p>The request body to provide for the API request, as the agent elicited from the user.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> </p> </li> </ul>",
      "refs": {
        "ApiInvocationInput$requestBody": "<p>The request body to provide for the API request, as the agent elicited from the user.</p>"
      }
    },
    "ApiResult": {
      "base": "<p>Contains information about the API operation that was called from the action group and the response body that was returned.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p>In the <code>returnControlInvocationResults</code> of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax\">InvokeAgent request</a> </p> </li> </ul>",
      "refs": {
        "InvocationResultMember$apiResult": "<p>The result from the API response from the action group invocation.</p>"
      }
    },
    "AttributeType": {
      "base": null,
      "refs": {
        "MetadataAttributeSchema$type": "<p>The attribute's type.</p>"
      }
    },
    "Attribution": {
      "base": "<p>Contains citations for a part of an agent response.</p>",
      "refs": {
        "InlineAgentPayloadPart$attribution": "<p>Contains citations for a part of an agent response.</p>",
        "PayloadPart$attribution": "<p>Contains citations for a part of an agent response.</p>"
      }
    },
    "BadGatewayException": {
      "base": "<p>There was an issue with a dependency due to a server issue. Retry your request.</p>",
      "refs": {
        "FlowResponseStream$badGatewayException": "<p>There was an issue with a dependency due to a server issue. Retry your request.</p>",
        "InlineAgentResponseStream$badGatewayException": "<p>There was an issue with a dependency due to a server issue. Retry your request. </p>",
        "OptimizedPromptStream$badGatewayException": "<p>There was an issue with a dependency due to a server issue. Retry your request.</p>",
        "ResponseStream$badGatewayException": "<p>There was an issue with a dependency due to a server issue. Retry your request.</p>",
        "RetrieveAndGenerateStreamResponseOutput$badGatewayException": "<p>The request failed due to a bad gateway error.</p>"
      }
    },
    "BasePromptTemplate": {
      "base": null,
      "refs": {
        "PromptConfiguration$basePromptTemplate": "<p>Defines the prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html\">Prompt template placeholder variables</a>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts-configure.html\">Configure the prompt templates</a>.</p>"
      }
    },
    "BedrockModelArn": {
      "base": null,
      "refs": {
        "BedrockRerankingModelConfiguration$modelArn": "<p>The ARN of the reranker model.</p>",
        "ExternalSourcesRetrieveAndGenerateConfiguration$modelArn": "<p>The model Amazon Resource Name (ARN) for the external source wrapper object in the <code>retrieveAndGenerate</code> function.</p>",
        "ImplicitFilterConfiguration$modelArn": "<p>The model that generates the filter.</p>",
        "KnowledgeBaseRetrieveAndGenerateConfiguration$modelArn": "<p>The ARN of the foundation model or <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html\">inference profile</a> used to generate a response.</p>"
      }
    },
    "BedrockModelConfigurations": {
      "base": "<p>Settings for a model called with <a>InvokeAgent</a>.</p>",
      "refs": {
        "InvokeAgentRequest$bedrockModelConfigurations": "<p>Model performance settings for the request.</p>"
      }
    },
    "BedrockRerankingConfiguration": {
      "base": "<p>Contains configurations for an Amazon Bedrock reranker model.</p>",
      "refs": {
        "RerankingConfiguration$bedrockRerankingConfiguration": "<p>Contains configurations for an Amazon Bedrock reranker.</p>"
      }
    },
    "BedrockRerankingConfigurationNumberOfResultsInteger": {
      "base": null,
      "refs": {
        "BedrockRerankingConfiguration$numberOfResults": "<p>The number of results to return after reranking.</p>"
      }
    },
    "BedrockRerankingModelArn": {
      "base": null,
      "refs": {
        "VectorSearchBedrockRerankingModelConfiguration$modelArn": "<p>The ARN of the reranker model to use.</p>"
      }
    },
    "BedrockRerankingModelConfiguration": {
      "base": "<p>Contains configurations for a reranker model.</p>",
      "refs": {
        "BedrockRerankingConfiguration$modelConfiguration": "<p>Contains configurations for a reranker model.</p>"
      }
    },
    "BedrockSessionContentBlock": {
      "base": "<p>A block of content that you pass to, or receive from, a Amazon Bedrock session in an invocation step. You pass the content to a session in the <code>payLoad</code> of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_PutInvocationStep.html\">PutInvocationStep</a> API operation. You retrieve the content with the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetInvocationStep.html\">GetInvocationStep</a> API operation.</p> <p>For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
      "refs": {
        "BedrockSessionContentBlocks$member": null
      }
    },
    "BedrockSessionContentBlockTextString": {
      "base": null,
      "refs": {
        "BedrockSessionContentBlock$text": "<p>The text in the invocation step.</p>"
      }
    },
    "BedrockSessionContentBlocks": {
      "base": null,
      "refs": {
        "InvocationStepPayload$contentBlocks": "<p>The content for the invocation step.</p>"
      }
    },
    "Blob": {
      "base": null,
      "refs": {
        "ReasoningContentBlock$redactedContent": "<p>The content in the reasoning that was encrypted by the model provider for trust and safety reasons.</p>"
      }
    },
    "Boolean": {
      "base": null,
      "refs": {
        "CodeInterpreterInvocationOutput$executionTimeout": "<p>Indicates if the execution of the code timed out.</p>",
        "InvokeAgentRequest$enableTrace": "<p>Specifies whether to turn on the trace or not to track the agent's reasoning process. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-events\">Trace enablement</a>.</p>",
        "InvokeAgentRequest$endSession": "<p>Specifies whether to end the session with the agent or not.</p>",
        "InvokeFlowRequest$enableTrace": "<p>Specifies whether to return the trace for the flow or not. Traces track inputs and outputs for nodes in the flow. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
        "InvokeInlineAgentRequest$enableTrace": "<p> Specifies whether to turn on the trace or not to track the agent's reasoning process. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/trace-events.html\">Using trace</a>. <pre><code> &lt;/p&gt; </code></pre>",
        "InvokeInlineAgentRequest$endSession": "<p> Specifies whether to end the session with the inline agent or not. </p>",
        "ParameterDetail$required": "<p> Whether the parameter is required for the agent to complete the function for action group invocation. </p>",
        "PreProcessingParsedResponse$isValid": "<p>Whether the user input is valid or not. If <code>false</code>, the agent doesn't proceed to orchestration.</p>",
        "StreamingConfigurations$streamFinalResponse": "<p> Specifies whether to enable streaming for the final response. This is set to <code>false</code> by default. </p>"
      }
    },
    "ByteContentBlob": {
      "base": null,
      "refs": {
        "ByteContentDoc$data": "<p>The byte value of the file to upload, encoded as a Base-64 string.</p>",
        "ByteContentFile$data": "<p>The raw bytes of the file to attach. The maximum size of all files that is attached is 10MB. You can attach a maximum of 5 files. </p>"
      }
    },
    "ByteContentDoc": {
      "base": "<p>This property contains the document to chat with, along with its attributes.</p>",
      "refs": {
        "ExternalSource$byteContent": "<p>The identifier, contentType, and data of the external source wrapper object.</p>"
      }
    },
    "ByteContentFile": {
      "base": "<p>The property contains the file to chat with, along with its attributes.</p>",
      "refs": {
        "FileSource$byteContent": "<p>The data and the text of the attached files.</p>"
      }
    },
    "Caller": {
      "base": "<p>Details about a caller.</p>",
      "refs": {
        "CallerChain$member": null
      }
    },
    "CallerChain": {
      "base": null,
      "refs": {
        "TracePart$callerChain": "<p>The part's caller chain.</p>"
      }
    },
    "Citation": {
      "base": "<p>An object containing a segment of the generated response that is based on a source in the knowledge base, alongside information about the source.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>citations</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>citations</code> field</p> </li> </ul>",
      "refs": {
        "CitationEvent$citation": "<p>The citation.</p>",
        "Citations$member": null
      }
    },
    "CitationEvent": {
      "base": "<p>A citation event.</p>",
      "refs": {
        "RetrieveAndGenerateStreamResponseOutput$citation": "<p>A citation event.</p>"
      }
    },
    "Citations": {
      "base": null,
      "refs": {
        "Attribution$citations": "<p>A list of citations and related information for a part of an agent response.</p>",
        "RetrieveAndGenerateResponse$citations": "<p>A list of segments of the generated response that are based on sources in the knowledge base, alongside information about the sources.</p>"
      }
    },
    "CodeInterpreterInvocationInput": {
      "base": "<p>Contains information about the code interpreter being invoked.</p>",
      "refs": {
        "InvocationInput$codeInterpreterInvocationInput": "<p>Contains information about the code interpreter to be invoked.</p>"
      }
    },
    "CodeInterpreterInvocationOutput": {
      "base": "<p>Contains the JSON-formatted string returned by the API invoked by the code interpreter.</p>",
      "refs": {
        "Observation$codeInterpreterInvocationOutput": "<p>Contains the JSON-formatted string returned by the API invoked by the code interpreter.</p>"
      }
    },
    "CollaborationInstruction": {
      "base": null,
      "refs": {
        "CollaboratorConfiguration$collaboratorInstruction": "<p> Instructions that tell the inline collaborator agent what it should do and how it should interact with users. </p>"
      }
    },
    "Collaborator": {
      "base": "<p> List of inline collaborators. </p>",
      "refs": {
        "Collaborators$member": null
      }
    },
    "CollaboratorConfiguration": {
      "base": "<p> Settings of an inline collaborator agent. </p>",
      "refs": {
        "CollaboratorConfigurations$member": null
      }
    },
    "CollaboratorConfigurations": {
      "base": null,
      "refs": {
        "Collaborator$collaboratorConfigurations": "<p> Settings of the collaborator agent. </p>",
        "InvokeInlineAgentRequest$collaboratorConfigurations": "<p> Settings for an inline agent collaborator called with <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeInlineAgent.html\">InvokeInlineAgent</a>. </p>"
      }
    },
    "Collaborators": {
      "base": null,
      "refs": {
        "InvokeInlineAgentRequest$collaborators": "<p> List of collaborator inline agents. </p>"
      }
    },
    "ConfirmationState": {
      "base": null,
      "refs": {
        "ApiResult$confirmationState": "<p>Controls the API operations or functions to invoke based on the user confirmation.</p>",
        "FunctionResult$confirmationState": "<p>Contains the user confirmation information about the function that was called.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>There was a conflict performing an operation. Resolve the conflict and retry your request.</p>",
      "refs": {
        "FlowResponseStream$conflictException": "<p>There was a conflict performing an operation. Resolve the conflict and retry your request.</p>",
        "InlineAgentResponseStream$conflictException": "<p>There was a conflict performing an operation. Resolve the conflict and retry your request. </p>",
        "ResponseStream$conflictException": "<p>There was a conflict performing an operation. Resolve the conflict and retry your request.</p>",
        "RetrieveAndGenerateStreamResponseOutput$conflictException": "<p>Error occurred because of a conflict while performing an operation.</p>"
      }
    },
    "ContentBlock": {
      "base": "<p>A content block.</p>",
      "refs": {
        "ContentBlocks$member": null
      }
    },
    "ContentBlocks": {
      "base": null,
      "refs": {
        "Message$content": "<p>The message's content.</p>"
      }
    },
    "ContentBody": {
      "base": "<p>Contains the body of the API response.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p>In the <code>returnControlInvocationResults</code> field of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax\">InvokeAgent request</a> </p> </li> </ul>",
      "refs": {
        "ResponseBody$value": null
      }
    },
    "ContentMap": {
      "base": null,
      "refs": {
        "RequestBody$content": "<p>The content in the request body.</p>"
      }
    },
    "ContentType": {
      "base": null,
      "refs": {
        "ByteContentDoc$contentType": "<p>The MIME type of the document contained in the wrapper object.</p>"
      }
    },
    "ConversationHistory": {
      "base": "<p>A conversation history.</p>",
      "refs": {
        "InlineSessionState$conversationHistory": "<p> Contains the conversation history that persist across sessions. </p>",
        "SessionState$conversationHistory": "<p>The state's conversation history.</p>"
      }
    },
    "ConversationRole": {
      "base": null,
      "refs": {
        "Message$role": "<p>The message's role.</p>"
      }
    },
    "CreateInvocationRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateInvocationResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreationMode": {
      "base": null,
      "refs": {
        "ModelInvocationInput$parserMode": "<p>Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the <code>promptType</code>.</p>",
        "ModelInvocationInput$promptCreationMode": "<p>Specifies whether the default prompt template was <code>OVERRIDDEN</code>. If it was, the <code>basePromptTemplate</code> that was set in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> object when the agent was created or updated is used instead.</p>",
        "PromptConfiguration$parserMode": "<p>Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the <code>promptType</code>. If you set the field as <code>OVERRIDDEN</code>, the <code>overrideLambda</code> field in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> must be specified with the ARN of a Lambda function.</p>",
        "PromptConfiguration$promptCreationMode": "<p>Specifies whether to override the default prompt template for this <code>promptType</code>. Set this value to <code>OVERRIDDEN</code> to use the prompt that you provide in the <code>basePromptTemplate</code>. If you leave it as <code>DEFAULT</code>, the agent uses a default prompt template.</p>"
      }
    },
    "CustomControlMethod": {
      "base": null,
      "refs": {
        "ActionGroupExecutor$customControl": "<p> To return the action group invocation results directly in the <code>InvokeInlineAgent</code> response, specify <code>RETURN_CONTROL</code>. </p>"
      }
    },
    "CustomOrchestrationTrace": {
      "base": "<p> The trace behavior for the custom orchestration. </p>",
      "refs": {
        "Trace$customOrchestrationTrace": "<p> Details about the custom orchestration step in which the agent determines the order in which actions are executed. </p>"
      }
    },
    "CustomOrchestrationTraceEvent": {
      "base": "<p> The event in the custom orchestration sequence. Events are the responses which the custom orchestration Lambda function sends as response to the agent. </p>",
      "refs": {
        "CustomOrchestrationTrace$event": "<p> The event details used with the custom orchestration. </p>"
      }
    },
    "DateTimestamp": {
      "base": "<p>Time Stamp.</p>",
      "refs": {
        "CreateInvocationResponse$createdAt": "<p>The timestamp for when the invocation was created.</p>",
        "CreateSessionResponse$createdAt": "<p>The timestamp for when the session was created.</p>",
        "FlowTraceConditionNodeResultEvent$timestamp": "<p>The date and time that the trace was returned.</p>",
        "FlowTraceNodeInputEvent$timestamp": "<p>The date and time that the trace was returned.</p>",
        "FlowTraceNodeOutputEvent$timestamp": "<p>The date and time that the trace was returned.</p>",
        "GetSessionResponse$createdAt": "<p>The timestamp for when the session was created.</p>",
        "GetSessionResponse$lastUpdatedAt": "<p>The timestamp for when the session was last modified.</p>",
        "InvocationStep$invocationStepTime": "<p>The timestamp for when the invocation step was created.</p>",
        "InvocationStepSummary$invocationStepTime": "<p>The timestamp for when the invocation step was created.</p>",
        "InvocationSummary$createdAt": "<p>The timestamp for when the invocation was created.</p>",
        "MemorySessionSummary$sessionExpiryTime": "<p>The time when the memory duration for the session is set to end.</p>",
        "MemorySessionSummary$sessionStartTime": "<p>The start time for this session.</p>",
        "PutInvocationStepRequest$invocationStepTime": "<p>The timestamp for when the invocation step occurred.</p>",
        "SessionSummary$createdAt": "<p>The timestamp for when the session was created.</p>",
        "SessionSummary$lastUpdatedAt": "<p>The timestamp for when the session was last modified.</p>",
        "UpdateSessionResponse$createdAt": "<p>The timestamp for when the session was created.</p>",
        "UpdateSessionResponse$lastUpdatedAt": "<p>The timestamp for when the session was last modified.</p>"
      }
    },
    "DeleteAgentMemoryRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentMemoryResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "DependencyFailedException": {
      "base": "<p>There was an issue with a dependency. Check the resource configurations and retry the request.</p>",
      "refs": {
        "FlowResponseStream$dependencyFailedException": "<p>There was an issue with a dependency. Check the resource configurations and retry the request.</p>",
        "InlineAgentResponseStream$dependencyFailedException": "<p>There was an issue with a dependency. Check the resource configurations and retry the request.</p>",
        "OptimizedPromptStream$dependencyFailedException": "<p>There was an issue with a dependency. Check the resource configurations and retry the request.</p>",
        "ResponseStream$dependencyFailedException": "<p>There was an issue with a dependency. Check the resource configurations and retry the request.</p>",
        "RetrieveAndGenerateStreamResponseOutput$dependencyFailedException": "<p>The request failed due to a dependency error.</p>"
      }
    },
    "Document": {
      "base": null,
      "refs": {
        "FlowInputContent$document": "<p>The input to send to the prompt flow input node.</p>",
        "FlowMultiTurnInputContent$document": "<p>The requested additional input to send back to the multi-turn flow node.</p>",
        "FlowOutputContent$document": "<p>The content in the output.</p>",
        "FlowTraceNodeInputContent$document": "<p>The content of the node input.</p>",
        "FlowTraceNodeOutputContent$document": "<p>The content of the node output.</p>",
        "PromptConfiguration$additionalModelRequestFields": "<p>If the Converse or ConverseStream operations support the model, <code>additionalModelRequestFields</code> contains additional inference parameters, beyond the base set of inference parameters in the <code>inferenceConfiguration</code> field. </p> <p>For more information, see <i>Inference request parameters and response fields for foundation models</i> in the Amazon Bedrock user guide.</p>",
        "RerankDocument$jsonDocument": "<p>Contains a JSON document to rerank.</p>"
      }
    },
    "Double": {
      "base": null,
      "refs": {
        "KnowledgeBaseRetrievalResult$score": "<p>The level of relevance of the result to the query.</p>"
      }
    },
    "EndSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "EndSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "ExecutionType": {
      "base": null,
      "refs": {
        "ActionGroupInvocationInput$executionType": "<p>How fulfillment of the action is handled. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/action-handle.html\">Handling fulfillment of the action</a>.</p>"
      }
    },
    "ExternalSource": {
      "base": "<p>The unique external source of the content contained in the wrapper object.</p>",
      "refs": {
        "ExternalSources$member": null
      }
    },
    "ExternalSourceType": {
      "base": null,
      "refs": {
        "ExternalSource$sourceType": "<p>The source type of the external source wrapper object.</p>"
      }
    },
    "ExternalSources": {
      "base": null,
      "refs": {
        "ExternalSourcesRetrieveAndGenerateConfiguration$sources": "<p>The document for the external source wrapper object in the <code>retrieveAndGenerate</code> function.</p>"
      }
    },
    "ExternalSourcesGenerationConfiguration": {
      "base": "<p>Contains the generation configuration of the external source wrapper object.</p>",
      "refs": {
        "ExternalSourcesRetrieveAndGenerateConfiguration$generationConfiguration": "<p>The prompt used with the external source wrapper object with the <code>retrieveAndGenerate</code> function.</p>"
      }
    },
    "ExternalSourcesRetrieveAndGenerateConfiguration": {
      "base": "<p>The configurations of the external source wrapper object in the <code>retrieveAndGenerate</code> function.</p>",
      "refs": {
        "RetrieveAndGenerateConfiguration$externalSourcesConfiguration": "<p>The configuration for the external source wrapper object in the <code>retrieveAndGenerate</code> function.</p>"
      }
    },
    "FailureReasonString": {
      "base": null,
      "refs": {
        "FailureTrace$failureReason": "<p>The reason the interaction failed.</p>"
      }
    },
    "FailureTrace": {
      "base": "<p>Contains information about the failure of the interaction.</p>",
      "refs": {
        "Trace$failureTrace": "<p>Contains information about the failure of the interaction.</p>"
      }
    },
    "FieldForReranking": {
      "base": "<p>Contains information for a metadata field to include in or exclude from consideration when reranking.</p>",
      "refs": {
        "FieldsForReranking$member": null
      }
    },
    "FieldForRerankingFieldNameString": {
      "base": null,
      "refs": {
        "FieldForReranking$fieldName": "<p>The name of a metadata field to include in or exclude from consideration when reranking.</p>"
      }
    },
    "FieldsForReranking": {
      "base": null,
      "refs": {
        "RerankingMetadataSelectiveModeConfiguration$fieldsToExclude": "<p>An array of objects, each of which specifies a metadata field to exclude from consideration when reranking.</p>",
        "RerankingMetadataSelectiveModeConfiguration$fieldsToInclude": "<p>An array of objects, each of which specifies a metadata field to include in consideration when reranking. The remaining metadata fields are ignored.</p>"
      }
    },
    "FileBody": {
      "base": null,
      "refs": {
        "OutputFile$bytes": "<p>The byte count of files that contains response from code interpreter.</p>"
      }
    },
    "FilePart": {
      "base": "<p>Contains intermediate response for code interpreter if any files have been generated.</p>",
      "refs": {
        "ResponseStream$files": "<p>Contains intermediate response for code interpreter if any files have been generated.</p>"
      }
    },
    "FileSource": {
      "base": "<p>The source file of the content contained in the wrapper object.</p>",
      "refs": {
        "InputFile$source": "<p>Specifies where the files are located.</p>"
      }
    },
    "FileSourceType": {
      "base": null,
      "refs": {
        "FileSource$sourceType": "<p>The source type of the files to attach.</p>"
      }
    },
    "FileUseCase": {
      "base": null,
      "refs": {
        "InputFile$useCase": "<p>Specifies how the source files will be used by the code interpreter.</p>"
      }
    },
    "Files": {
      "base": null,
      "refs": {
        "CodeInterpreterInvocationInput$files": "<p>Files that are uploaded for code interpreter to use.</p>",
        "CodeInterpreterInvocationOutput$files": "<p>Contains output files, if generated by code execution.</p>"
      }
    },
    "FilterAttribute": {
      "base": "<p>Specifies the name that the metadata attribute must match and the value to which to compare the value of the metadata attribute. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> </p> </li> </ul>",
      "refs": {
        "RetrievalFilter$equals": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value matches the <code>value</code> in this object.</p> <p>The following example would return data sources with an <code>animal</code> attribute whose value is <code>cat</code>:</p> <p> <code>\"equals\": { \"key\": \"animal\", \"value\": \"cat\" }</code> </p>",
        "RetrievalFilter$greaterThan": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value is greater than the <code>value</code> in this object.</p> <p>The following example would return data sources with an <code>year</code> attribute whose value is greater than <code>1989</code>:</p> <p> <code>\"greaterThan\": { \"key\": \"year\", \"value\": 1989 }</code> </p>",
        "RetrievalFilter$greaterThanOrEquals": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value is greater than or equal to the <code>value</code> in this object.</p> <p>The following example would return data sources with an <code>year</code> attribute whose value is greater than or equal to <code>1989</code>:</p> <p> <code>\"greaterThanOrEquals\": { \"key\": \"year\", \"value\": 1989 }</code> </p>",
        "RetrievalFilter$in": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value is in the list specified in the <code>value</code> in this object.</p> <p>The following example would return data sources with an <code>animal</code> attribute that is either <code>cat</code> or <code>dog</code>:</p> <p> <code>\"in\": { \"key\": \"animal\", \"value\": [\"cat\", \"dog\"] }</code> </p>",
        "RetrievalFilter$lessThan": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value is less than the <code>value</code> in this object.</p> <p>The following example would return data sources with an <code>year</code> attribute whose value is less than to <code>1989</code>.</p> <p> <code>\"lessThan\": { \"key\": \"year\", \"value\": 1989 }</code> </p>",
        "RetrievalFilter$lessThanOrEquals": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value is less than or equal to the <code>value</code> in this object.</p> <p>The following example would return data sources with an <code>year</code> attribute whose value is less than or equal to <code>1989</code>.</p> <p> <code>\"lessThanOrEquals\": { \"key\": \"year\", \"value\": 1989 }</code> </p>",
        "RetrievalFilter$listContains": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value is a list that contains the <code>value</code> as one of its members.</p> <p>The following example would return data sources with an <code>animals</code> attribute that is a list containing a <code>cat</code> member (for example <code>[\"dog\", \"cat\"]</code>).</p> <p> <code>\"listContains\": { \"key\": \"animals\", \"value\": \"cat\" }</code> </p>",
        "RetrievalFilter$notEquals": "<p>Knowledge base data sources are returned when:</p> <ul> <li> <p>It contains a metadata attribute whose name matches the <code>key</code> and whose value doesn't match the <code>value</code> in this object.</p> </li> <li> <p>The key is not present in the document.</p> </li> </ul> <p>The following example would return data sources that don't contain an <code>animal</code> attribute whose value is <code>cat</code>.</p> <p> <code>\"notEquals\": { \"key\": \"animal\", \"value\": \"cat\" }</code> </p>",
        "RetrievalFilter$notIn": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value isn't in the list specified in the <code>value</code> in this object.</p> <p>The following example would return data sources whose <code>animal</code> attribute is neither <code>cat</code> nor <code>dog</code>.</p> <p> <code>\"notIn\": { \"key\": \"animal\", \"value\": [\"cat\", \"dog\"] }</code> </p>",
        "RetrievalFilter$startsWith": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value starts with the <code>value</code> in this object. This filter is currently only supported for Amazon OpenSearch Serverless vector stores.</p> <p>The following example would return data sources with an <code>animal</code> attribute starts with <code>ca</code> (for example, <code>cat</code> or <code>camel</code>).</p> <p> <code>\"startsWith\": { \"key\": \"animal\", \"value\": \"ca\" }</code> </p>",
        "RetrievalFilter$stringContains": "<p>Knowledge base data sources are returned if they contain a metadata attribute whose name matches the <code>key</code> and whose value is one of the following:</p> <ul> <li> <p>A string that contains the <code>value</code> as a substring. The following example would return data sources with an <code>animal</code> attribute that contains the substring <code>at</code> (for example <code>cat</code>).</p> <p> <code>\"stringContains\": { \"key\": \"animal\", \"value\": \"at\" }</code> </p> </li> <li> <p>A list with a member that contains the <code>value</code> as a substring. The following example would return data sources with an <code>animals</code> attribute that is a list containing a member that contains the substring <code>at</code> (for example <code>[\"dog\", \"cat\"]</code>).</p> <p> <code>\"stringContains\": { \"key\": \"animals\", \"value\": \"at\" }</code> </p> </li> </ul>"
      }
    },
    "FilterKey": {
      "base": null,
      "refs": {
        "FilterAttribute$key": "<p>The name that the metadata attribute must match.</p>"
      }
    },
    "FilterValue": {
      "base": null,
      "refs": {
        "FilterAttribute$value": "<p>The value to whcih to compare the value of the metadata attribute.</p>"
      }
    },
    "FinalResponse": {
      "base": "<p>Contains details about the response to the user.</p>",
      "refs": {
        "Observation$finalResponse": "<p>Contains details about the response to the user.</p>"
      }
    },
    "FinalResponseString": {
      "base": null,
      "refs": {
        "FinalResponse$text": "<p>The text in the response to the user.</p>"
      }
    },
    "Float": {
      "base": null,
      "refs": {
        "RerankResult$relevanceScore": "<p>The relevance score of the document.</p>"
      }
    },
    "FlowAliasIdentifier": {
      "base": null,
      "refs": {
        "InvokeFlowRequest$flowAliasIdentifier": "<p>The unique identifier of the flow alias.</p>"
      }
    },
    "FlowCompletionEvent": {
      "base": "<p>Contains information about why a flow completed.</p>",
      "refs": {
        "FlowResponseStream$flowCompletionEvent": "<p>Contains information about why the flow completed.</p>"
      }
    },
    "FlowCompletionReason": {
      "base": null,
      "refs": {
        "FlowCompletionEvent$completionReason": "<p>The reason that the flow completed.</p>"
      }
    },
    "FlowExecutionId": {
      "base": null,
      "refs": {
        "InvokeFlowRequest$executionId": "<p>The unique identifier for the current flow execution. If you don't provide a value, Amazon Bedrock creates the identifier for you. </p>",
        "InvokeFlowResponse$executionId": "<p>The unique identifier for the current flow execution.</p>"
      }
    },
    "FlowIdentifier": {
      "base": null,
      "refs": {
        "InvokeFlowRequest$flowIdentifier": "<p>The unique identifier of the flow.</p>"
      }
    },
    "FlowInput": {
      "base": "<p>Contains information about an input into the prompt flow and where to send it.</p>",
      "refs": {
        "FlowInputs$member": null
      }
    },
    "FlowInputContent": {
      "base": "<p>Contains information about an input into the flow.</p>",
      "refs": {
        "FlowInput$content": "<p>Contains information about an input into the prompt flow.</p>"
      }
    },
    "FlowInputs": {
      "base": null,
      "refs": {
        "InvokeFlowRequest$inputs": "<p>A list of objects, each containing information about an input into the flow.</p>"
      }
    },
    "FlowMultiTurnInputContent": {
      "base": "<p>The content structure containing input information for multi-turn flow interactions.</p>",
      "refs": {
        "FlowMultiTurnInputRequestEvent$content": "<p>The content payload containing the input request details for the multi-turn interaction.</p>"
      }
    },
    "FlowMultiTurnInputRequestEvent": {
      "base": "<p>Response object from the flow multi-turn node requesting additional information.</p>",
      "refs": {
        "FlowResponseStream$flowMultiTurnInputRequestEvent": "<p>The event stream containing the multi-turn input request information from the flow.</p>"
      }
    },
    "FlowOutputContent": {
      "base": "<p>Contains information about the content in an output from prompt flow invocation.</p>",
      "refs": {
        "FlowOutputEvent$content": "<p>The content in the output.</p>"
      }
    },
    "FlowOutputEvent": {
      "base": "<p>Contains information about an output from prompt flow invoction.</p>",
      "refs": {
        "FlowResponseStream$flowOutputEvent": "<p>Contains information about an output from flow invocation.</p>"
      }
    },
    "FlowResponseStream": {
      "base": "<p>The output of the flow.</p>",
      "refs": {
        "InvokeFlowResponse$responseStream": "<p>The output of the flow, returned as a stream. If there's an error, the error is returned.</p>"
      }
    },
    "FlowTrace": {
      "base": "<p>Contains information about an input or output for a node in the flow. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTraceEvent$trace": "<p>The trace object containing information about an input or output for a node in the flow.</p>"
      }
    },
    "FlowTraceCondition": {
      "base": "<p>Contains information about a condition that was satisfied. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTraceConditions$member": null
      }
    },
    "FlowTraceConditionNodeResultEvent": {
      "base": "<p>Contains information about an output from a condition node. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTrace$conditionNodeResultTrace": "<p>Contains information about an output from a condition node.</p>"
      }
    },
    "FlowTraceConditions": {
      "base": null,
      "refs": {
        "FlowTraceConditionNodeResultEvent$satisfiedConditions": "<p>An array of objects containing information about the conditions that were satisfied.</p>"
      }
    },
    "FlowTraceEvent": {
      "base": "<p>Contains information about a trace, which tracks an input or output for a node in the flow. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowResponseStream$flowTraceEvent": "<p>Contains information about a trace, which tracks an input or output for a node in the flow.</p>"
      }
    },
    "FlowTraceNodeInputContent": {
      "base": "<p>Contains the content of the node input. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTraceNodeInputField$content": "<p>The content of the node input.</p>"
      }
    },
    "FlowTraceNodeInputEvent": {
      "base": "<p>Contains information about the input into a node. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTrace$nodeInputTrace": "<p>Contains information about the input into a node.</p>"
      }
    },
    "FlowTraceNodeInputField": {
      "base": "<p>Contains information about a field in the input into a node. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTraceNodeInputFields$member": null
      }
    },
    "FlowTraceNodeInputFields": {
      "base": null,
      "refs": {
        "FlowTraceNodeInputEvent$fields": "<p>An array of objects containing information about each field in the input.</p>"
      }
    },
    "FlowTraceNodeOutputContent": {
      "base": "<p>Contains the content of the node output. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTraceNodeOutputField$content": "<p>The content of the node output.</p>"
      }
    },
    "FlowTraceNodeOutputEvent": {
      "base": "<p>Contains information about the output from a node. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTrace$nodeOutputTrace": "<p>Contains information about the output from a node.</p>"
      }
    },
    "FlowTraceNodeOutputField": {
      "base": "<p>Contains information about a field in the output from a node. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html\">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>",
      "refs": {
        "FlowTraceNodeOutputFields$member": null
      }
    },
    "FlowTraceNodeOutputFields": {
      "base": null,
      "refs": {
        "FlowTraceNodeOutputEvent$fields": "<p>An array of objects containing information about each field in the output.</p>"
      }
    },
    "Function": {
      "base": null,
      "refs": {
        "ActionGroupInvocationInput$function": "<p>The function in the action group to call.</p>"
      }
    },
    "FunctionDefinition": {
      "base": "<p> Defines parameters that the agent needs to invoke from the user to complete the function. Corresponds to an action in an action group. </p>",
      "refs": {
        "Functions$member": null
      }
    },
    "FunctionDescription": {
      "base": null,
      "refs": {
        "FunctionDefinition$description": "<p> A description of the function and its purpose. </p>"
      }
    },
    "FunctionInvocationInput": {
      "base": "<p>Contains information about the function that the agent predicts should be called.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p>In the <code>returnControl</code> field of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> </p> </li> </ul>",
      "refs": {
        "InvocationInputMember$functionInvocationInput": "<p>Contains information about the function that the agent predicts should be called.</p>"
      }
    },
    "FunctionParameter": {
      "base": "<p>Contains information about a parameter of the function.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p>In the <code>returnControl</code> field of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> </p> </li> </ul>",
      "refs": {
        "FunctionParameters$member": null
      }
    },
    "FunctionParameters": {
      "base": null,
      "refs": {
        "FunctionInvocationInput$parameters": "<p>A list of parameters of the function.</p>"
      }
    },
    "FunctionResult": {
      "base": "<p>Contains information about the function that was called from the action group and the response that was returned.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p>In the <code>returnControlInvocationResults</code> of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax\">InvokeAgent request</a> </p> </li> </ul>",
      "refs": {
        "InvocationResultMember$functionResult": "<p>The result from the function from the action group invocation.</p>"
      }
    },
    "FunctionSchema": {
      "base": "<p> Contains details about the function schema for the action group or the JSON or YAML-formatted payload defining the schema. </p>",
      "refs": {
        "AgentActionGroup$functionSchema": "<p> Contains details about the function schema for the action group or the JSON or YAML-formatted payload defining the schema. </p>"
      }
    },
    "Functions": {
      "base": null,
      "refs": {
        "FunctionSchema$functions": "<p> A list of functions that each define an action in the action group. </p>"
      }
    },
    "GenerateQueryRequest": {
      "base": null,
      "refs": {
      }
    },
    "GenerateQueryResponse": {
      "base": null,
      "refs": {
      }
    },
    "GeneratedQueries": {
      "base": null,
      "refs": {
        "GenerateQueryResponse$queries": "<p>A list of objects, each of which defines a generated query that can correspond to the natural language queries.</p>"
      }
    },
    "GeneratedQuery": {
      "base": "<p>Contains information about a query generated for a natural language query.</p>",
      "refs": {
        "GeneratedQueries$member": null
      }
    },
    "GeneratedQueryType": {
      "base": null,
      "refs": {
        "GeneratedQuery$type": "<p>The type of transformed query.</p>"
      }
    },
    "GeneratedResponsePart": {
      "base": "<p>Contains metadata about a part of the generated response that is accompanied by a citation.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>generatedResponsePart</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>generatedResponsePart</code> field</p> </li> </ul>",
      "refs": {
        "Citation$generatedResponsePart": "<p>Contains the generated response and metadata </p>",
        "CitationEvent$generatedResponsePart": "<p>The generated response to the citation event.</p>"
      }
    },
    "GenerationConfiguration": {
      "base": "<p>Contains configurations for response generation based on the knowledge base query results.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> </p> </li> </ul>",
      "refs": {
        "KnowledgeBaseRetrieveAndGenerateConfiguration$generationConfiguration": "<p>Contains configurations for response generation based on the knowledge base query results.</p>"
      }
    },
    "GetAgentMemoryRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentMemoryResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetInvocationStepRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetInvocationStepResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "GuadrailAction": {
      "base": null,
      "refs": {
        "GuardrailEvent$action": "<p>The guardrail action.</p>",
        "RetrieveAndGenerateResponse$guardrailAction": "<p>Specifies if there is a guardrail intervention in the response.</p>",
        "RetrieveResponse$guardrailAction": "<p>Specifies if there is a guardrail intervention in the response.</p>"
      }
    },
    "GuardrailAction": {
      "base": null,
      "refs": {
        "GuardrailTrace$action": "<p>The trace action details used with the Guardrail.</p>"
      }
    },
    "GuardrailAssessment": {
      "base": "<p>Assessment details of the content analyzed by Guardrails.</p>",
      "refs": {
        "GuardrailAssessmentList$member": null
      }
    },
    "GuardrailAssessmentList": {
      "base": null,
      "refs": {
        "GuardrailTrace$inputAssessments": "<p>The details of the input assessments used in the Guardrail Trace.</p>",
        "GuardrailTrace$outputAssessments": "<p>The details of the output assessments used in the Guardrail Trace.</p>"
      }
    },
    "GuardrailConfiguration": {
      "base": "<p>The configuration details for the guardrail.</p>",
      "refs": {
        "ExternalSourcesGenerationConfiguration$guardrailConfiguration": "<p>The configuration details for the guardrail.</p>",
        "GenerationConfiguration$guardrailConfiguration": "<p>The configuration details for the guardrail.</p>",
        "RetrieveRequest$guardrailConfiguration": "<p>Guardrail settings.</p>"
      }
    },
    "GuardrailConfigurationGuardrailIdString": {
      "base": null,
      "refs": {
        "GuardrailConfiguration$guardrailId": "<p>The unique identifier for the guardrail.</p>"
      }
    },
    "GuardrailConfigurationGuardrailVersionString": {
      "base": null,
      "refs": {
        "GuardrailConfiguration$guardrailVersion": "<p>The version of the guardrail.</p>"
      }
    },
    "GuardrailConfigurationWithArn": {
      "base": "<p> The configuration details for the guardrail. </p>",
      "refs": {
        "Collaborator$guardrailConfiguration": "<p> Details of the guardwrail associated with the inline collaborator. </p>",
        "InvokeInlineAgentRequest$guardrailConfiguration": "<p> The <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails.html\">guardrails</a> to assign to the inline agent. </p>"
      }
    },
    "GuardrailContentFilter": {
      "base": "<p>Details of the content filter used in the Guardrail.</p>",
      "refs": {
        "GuardrailContentFilterList$member": null
      }
    },
    "GuardrailContentFilterConfidence": {
      "base": null,
      "refs": {
        "GuardrailContentFilter$confidence": "<p>The confidence level regarding the content detected in the filter by the Guardrail.</p>"
      }
    },
    "GuardrailContentFilterList": {
      "base": null,
      "refs": {
        "GuardrailContentPolicyAssessment$filters": "<p>The filter details of the policy assessment used in the Guardrails filter.</p>"
      }
    },
    "GuardrailContentFilterType": {
      "base": null,
      "refs": {
        "GuardrailContentFilter$type": "<p>The type of content detected in the filter by the Guardrail.</p>"
      }
    },
    "GuardrailContentPolicyAction": {
      "base": null,
      "refs": {
        "GuardrailContentFilter$action": "<p>The action placed on the content by the Guardrail filter.</p>"
      }
    },
    "GuardrailContentPolicyAssessment": {
      "base": "<p>The details of the policy assessment in the Guardrails filter.</p>",
      "refs": {
        "GuardrailAssessment$contentPolicy": "<p>Content policy details of the Guardrail.</p>"
      }
    },
    "GuardrailCustomWord": {
      "base": "<p>The custom word details for the filter in the Guardrail.</p>",
      "refs": {
        "GuardrailCustomWordList$member": null
      }
    },
    "GuardrailCustomWordList": {
      "base": null,
      "refs": {
        "GuardrailWordPolicyAssessment$customWords": "<p>The custom word details for words defined in the Guardrail filter.</p>"
      }
    },
    "GuardrailEvent": {
      "base": "<p>A guardrail event.</p>",
      "refs": {
        "RetrieveAndGenerateStreamResponseOutput$guardrail": "<p>A guardrail event.</p>"
      }
    },
    "GuardrailIdentifierWithArn": {
      "base": null,
      "refs": {
        "GuardrailConfigurationWithArn$guardrailIdentifier": "<p> The unique identifier for the guardrail. </p>"
      }
    },
    "GuardrailManagedWord": {
      "base": "<p>The managed word details for the filter in the Guardrail.</p>",
      "refs": {
        "GuardrailManagedWordList$member": null
      }
    },
    "GuardrailManagedWordList": {
      "base": null,
      "refs": {
        "GuardrailWordPolicyAssessment$managedWordLists": "<p>The managed word lists for words defined in the Guardrail filter.</p>"
      }
    },
    "GuardrailManagedWordType": {
      "base": null,
      "refs": {
        "GuardrailManagedWord$type": "<p>The type details for the managed word filter in the Guardrail.</p>"
      }
    },
    "GuardrailPiiEntityFilter": {
      "base": "<p>The Guardrail filter to identify and remove personally identifiable information (PII).</p>",
      "refs": {
        "GuardrailPiiEntityFilterList$member": null
      }
    },
    "GuardrailPiiEntityFilterList": {
      "base": null,
      "refs": {
        "GuardrailSensitiveInformationPolicyAssessment$piiEntities": "<p>The details of the PII entities used in the sensitive policy assessment for the Guardrail.</p>"
      }
    },
    "GuardrailPiiEntityType": {
      "base": null,
      "refs": {
        "GuardrailPiiEntityFilter$type": "<p>The type of PII the Guardrail filter has identified and removed.</p>"
      }
    },
    "GuardrailRegexFilter": {
      "base": "<p>The details for the regex filter used in the Guardrail.</p>",
      "refs": {
        "GuardrailRegexFilterList$member": null
      }
    },
    "GuardrailRegexFilterList": {
      "base": null,
      "refs": {
        "GuardrailSensitiveInformationPolicyAssessment$regexes": "<p>The details of the regexes used in the sensitive policy assessment for the Guardrail.</p>"
      }
    },
    "GuardrailSensitiveInformationPolicyAction": {
      "base": null,
      "refs": {
        "GuardrailPiiEntityFilter$action": "<p>The action of the Guardrail filter to identify and remove PII.</p>",
        "GuardrailRegexFilter$action": "<p>The action details for the regex filter used in the Guardrail.</p>"
      }
    },
    "GuardrailSensitiveInformationPolicyAssessment": {
      "base": "<p>The details of the sensitive policy assessment used in the Guardrail.</p>",
      "refs": {
        "GuardrailAssessment$sensitiveInformationPolicy": "<p>Sensitive Information policy details of Guardrail.</p>"
      }
    },
    "GuardrailTopic": {
      "base": "<p>The details for a specific topic defined in the Guardrail.</p>",
      "refs": {
        "GuardrailTopicList$member": null
      }
    },
    "GuardrailTopicList": {
      "base": null,
      "refs": {
        "GuardrailTopicPolicyAssessment$topics": "<p>The topic details of the policy assessment used in the Guardrail.</p>"
      }
    },
    "GuardrailTopicPolicyAction": {
      "base": null,
      "refs": {
        "GuardrailTopic$action": "<p>The action details on a specific topic in the Guardrail.</p>"
      }
    },
    "GuardrailTopicPolicyAssessment": {
      "base": "<p>The details of the policy assessment used in the Guardrail.</p>",
      "refs": {
        "GuardrailAssessment$topicPolicy": "<p>Topic policy details of the Guardrail.</p>"
      }
    },
    "GuardrailTopicType": {
      "base": null,
      "refs": {
        "GuardrailTopic$type": "<p>The type details on a specific topic in the Guardrail.</p>"
      }
    },
    "GuardrailTrace": {
      "base": "<p>The trace details used in the Guardrail.</p>",
      "refs": {
        "Trace$guardrailTrace": "<p>The trace details for a trace defined in the Guardrail filter.</p>"
      }
    },
    "GuardrailVersion": {
      "base": null,
      "refs": {
        "GuardrailConfigurationWithArn$guardrailVersion": "<p> The version of the guardrail. </p>"
      }
    },
    "GuardrailWordPolicyAction": {
      "base": null,
      "refs": {
        "GuardrailCustomWord$action": "<p>The action details for the custom word filter in the Guardrail.</p>",
        "GuardrailManagedWord$action": "<p>The action details for the managed word filter in the Guardrail.</p>"
      }
    },
    "GuardrailWordPolicyAssessment": {
      "base": "<p>The assessment details for words defined in the Guardrail filter.</p>",
      "refs": {
        "GuardrailAssessment$wordPolicy": "<p>Word policy details of the Guardrail.</p>"
      }
    },
    "Identifier": {
      "base": null,
      "refs": {
        "ByteContentDoc$identifier": "<p>The file name of the document contained in the wrapper object.</p>"
      }
    },
    "ImageBlock": {
      "base": "<p>Image content for an invocation step.</p>",
      "refs": {
        "BedrockSessionContentBlock$image": "<p>The image in the invocation step.</p>"
      }
    },
    "ImageFormat": {
      "base": null,
      "refs": {
        "ImageBlock$format": "<p>The format of the image.</p>"
      }
    },
    "ImageInput": {
      "base": "<p>Details about an image in the result from a function in the action group invocation. You can specify images only when the function is a computer use action. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>.</p>",
      "refs": {
        "ImageInputs$member": null
      }
    },
    "ImageInputFormat": {
      "base": null,
      "refs": {
        "ImageInput$format": "<p>The type of image in the result.</p>"
      }
    },
    "ImageInputSource": {
      "base": "<p>Details about the source of an input image in the result from a function in the action group invocation.</p>",
      "refs": {
        "ImageInput$source": "<p>The source of the image in the result.</p>"
      }
    },
    "ImageInputSourceBytesBlob": {
      "base": null,
      "refs": {
        "ImageInputSource$bytes": "<p> The raw image bytes for the image. If you use an Amazon Web Services SDK, you don't need to encode the image bytes in base64.</p>"
      }
    },
    "ImageInputs": {
      "base": null,
      "refs": {
        "ContentBody$images": "<p>Lists details, including format and source, for the image in the response from the function call. You can specify only one image and the function in the <code>returnControlInvocationResults</code> must be a computer use action. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p>"
      }
    },
    "ImageSource": {
      "base": "<p>The source for an image.</p>",
      "refs": {
        "ImageBlock$source": "<p>The source for the image.</p>"
      }
    },
    "ImageSourceBytesBlob": {
      "base": null,
      "refs": {
        "ImageSource$bytes": "<p> The raw image bytes for the image. If you use an Amazon Web Services SDK, you don't need to encode the image bytes in base64.</p>"
      }
    },
    "ImplicitFilterConfiguration": {
      "base": "<p>Settings for implicit filtering, where a model generates a metadata filter based on the prompt.</p>",
      "refs": {
        "KnowledgeBaseVectorSearchConfiguration$implicitFilterConfiguration": "<p>Settings for implicit filtering.</p>"
      }
    },
    "InferenceConfig": {
      "base": "<p> The configuration for inference settings when generating responses using RetrieveAndGenerate. </p>",
      "refs": {
        "ExternalSourcesGenerationConfiguration$inferenceConfig": "<p> Configuration settings for inference when using RetrieveAndGenerate to generate responses while using an external source.</p>",
        "GenerationConfiguration$inferenceConfig": "<p> Configuration settings for inference when using RetrieveAndGenerate to generate responses while using a knowledge base as a source. </p>",
        "OrchestrationConfiguration$inferenceConfig": "<p> Configuration settings for inference when using RetrieveAndGenerate to generate responses while using a knowledge base as a source. </p>"
      }
    },
    "InferenceConfiguration": {
      "base": "<p>Specifications about the inference parameters that were provided alongside the prompt. These are specified in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> object that was set when the agent was created or updated. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters for foundation models</a>.</p>",
      "refs": {
        "ModelInvocationInput$inferenceConfiguration": "<p>Specifications about the inference parameters that were provided alongside the prompt. These are specified in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> object that was set when the agent was created or updated. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters for foundation models</a>.</p>",
        "PromptConfiguration$inferenceConfiguration": "<p>Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the <code>promptType</code>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters for foundation models</a>.</p>"
      }
    },
    "InlineAgentFilePart": {
      "base": "<p>Contains intermediate response for code interpreter if any files have been generated.</p>",
      "refs": {
        "InlineAgentResponseStream$files": "<p>Contains intermediate response for code interpreter if any files have been generated.</p>"
      }
    },
    "InlineAgentPayloadPart": {
      "base": "<p>Contains a part of an agent response and citations for it. </p>",
      "refs": {
        "InlineAgentResponseStream$chunk": "<p>Contains a part of an agent response and citations for it.</p>"
      }
    },
    "InlineAgentResponseStream": {
      "base": "<p>The response from invoking the agent and associated citations and trace information.</p>",
      "refs": {
        "InvokeInlineAgentResponse$completion": "<p> <pre><code> &lt;/p&gt; </code></pre>"
      }
    },
    "InlineAgentReturnControlPayload": {
      "base": "<p>Contains information to return from the action group that the agent has predicted to invoke.</p> <p>This data type is used in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> API operation.</p>",
      "refs": {
        "InlineAgentResponseStream$returnControl": "<p>Contains the parameters and information that the agent elicited from the customer to carry out an action. This information is returned to the system and can be used in your own setup for fulfilling the action.</p>"
      }
    },
    "InlineAgentTracePart": {
      "base": "<p>Contains information about the agent and session, alongside the agent's reasoning process and results from calling API actions and querying knowledge bases and metadata about the trace. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement\">Trace enablement</a>.</p>",
      "refs": {
        "InlineAgentResponseStream$trace": "<p>Contains information about the agent and session, alongside the agent's reasoning process and results from calling actions and querying knowledge bases and metadata about the trace. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/trace-events.html\">Trace events</a>. </p>"
      }
    },
    "InlineBedrockModelConfigurations": {
      "base": "<p>Settings for a model called with <a>InvokeInlineAgent</a>.</p>",
      "refs": {
        "InvokeInlineAgentRequest$bedrockModelConfigurations": "<p>Model settings for the request.</p>"
      }
    },
    "InlineSessionState": {
      "base": "<p> Contains parameters that specify various attributes that persist across a session or prompt. You can define session state attributes as key-value pairs when writing a <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-lambda.html\">Lambda function</a> for an action group or pass them when making an <code>InvokeInlineAgent</code> request. Use session state attributes to control and provide conversational context for your inline agent and to help customize your agent's behavior. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html\">Control session context</a> </p>",
      "refs": {
        "InvokeInlineAgentRequest$inlineSessionState": "<p> Parameters that specify the various attributes of a sessions. You can include attributes for the session or prompt or, if you configured an action group to return control, results from invocation of the action group. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html\">Control session context</a>. </p> <note> <p>If you include <code>returnControlInvocationResults</code> in the <code>sessionState</code> field, the <code>inputText</code> field will be ignored.</p> </note>"
      }
    },
    "InputFile": {
      "base": "<p>Contains details of the source files.</p>",
      "refs": {
        "InputFiles$member": null
      }
    },
    "InputFiles": {
      "base": null,
      "refs": {
        "InlineSessionState$files": "<p> Contains information about the files used by code interpreter. </p>",
        "SessionState$files": "<p>Contains information about the files used by code interpreter.</p>"
      }
    },
    "InputPrompt": {
      "base": "<p>Contains information about the prompt to optimize.</p>",
      "refs": {
        "OptimizePromptRequest$input": "<p>Contains the prompt to optimize.</p>"
      }
    },
    "InputQueryType": {
      "base": null,
      "refs": {
        "QueryGenerationInput$type": "<p>The type of the query.</p>"
      }
    },
    "InputText": {
      "base": null,
      "refs": {
        "InvokeAgentRequest$inputText": "<p>The prompt text to send the agent.</p> <note> <p>If you include <code>returnControlInvocationResults</code> in the <code>sessionState</code> field, the <code>inputText</code> field will be ignored.</p> </note>",
        "InvokeInlineAgentRequest$inputText": "<p> The prompt text to send to the agent. </p> <note> <p>If you include <code>returnControlInvocationResults</code> in the <code>sessionState</code> field, the <code>inputText</code> field will be ignored.</p> </note>"
      }
    },
    "Instruction": {
      "base": null,
      "refs": {
        "Collaborator$instruction": "<p> Instruction that tell the inline collaborator agent what it should do and how it should interact with users. </p>",
        "InvokeInlineAgentRequest$instruction": "<p> The instructions that tell the inline agent what it should do and how it should interact with users. </p>"
      }
    },
    "Integer": {
      "base": null,
      "refs": {
        "ApiResult$httpStatusCode": "<p>http status code from API execution response (for example: 200, 400, 500).</p>",
        "Usage$inputTokens": "<p>Contains information about the input tokens from the foundation model usage.</p>",
        "Usage$outputTokens": "<p>Contains information about the output tokens from the foundation model usage.</p>"
      }
    },
    "InternalServerException": {
      "base": "<p>An internal server error occurred. Retry your request.</p>",
      "refs": {
        "FlowResponseStream$internalServerException": "<p>An internal server error occurred. Retry your request.</p>",
        "InlineAgentResponseStream$internalServerException": "<p>An internal server error occurred. Retry your request.</p>",
        "OptimizedPromptStream$internalServerException": "<p>An internal server error occurred. Retry your request.</p>",
        "ResponseStream$internalServerException": "<p>An internal server error occurred. Retry your request.</p>",
        "RetrieveAndGenerateStreamResponseOutput$internalServerException": "<p>An internal server error occurred. Retry your request.</p>"
      }
    },
    "InvocationDescription": {
      "base": null,
      "refs": {
        "CreateInvocationRequest$description": "<p>A description for the interactions in the invocation. For example, \"User asking about weather in Seattle\".</p>"
      }
    },
    "InvocationIdentifier": {
      "base": null,
      "refs": {
        "GetInvocationStepRequest$invocationIdentifier": "<p>The unique identifier for the invocation in UUID format.</p>",
        "ListInvocationStepsRequest$invocationIdentifier": "<p>The unique identifier (in UUID format) for the invocation to list invocation steps for.</p>",
        "PutInvocationStepRequest$invocationIdentifier": "<p>The unique identifier (in UUID format) of the invocation to add the invocation step to.</p>"
      }
    },
    "InvocationInput": {
      "base": "<p>Contains information pertaining to the action group or knowledge base that is being invoked.</p>",
      "refs": {
        "OrchestrationTrace$invocationInput": "<p>Contains information pertaining to the action group or knowledge base that is being invoked.</p>",
        "RoutingClassifierTrace$invocationInput": "<p>The classifier's invocation input.</p>"
      }
    },
    "InvocationInputMember": {
      "base": "<p>Contains details about the API operation or function that the agent predicts should be called. </p> <p>This data type is used in the following API operations:</p> <ul> <li> <p>In the <code>returnControl</code> field of the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> </p> </li> </ul>",
      "refs": {
        "InvocationInputs$member": null
      }
    },
    "InvocationInputs": {
      "base": null,
      "refs": {
        "InlineAgentReturnControlPayload$invocationInputs": "<p>A list of objects that contain information about the parameters and inputs that need to be sent into the API operation or function, based on what the agent determines from its session with the user.</p>",
        "ReturnControlPayload$invocationInputs": "<p>A list of objects that contain information about the parameters and inputs that need to be sent into the API operation or function, based on what the agent determines from its session with the user.</p>"
      }
    },
    "InvocationResultMember": {
      "base": "<p>A result from the invocation of an action. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html\">Return control to the agent developer</a> and <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html\">Control session context</a>.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax\">InvokeAgent request</a> </p> </li> </ul>",
      "refs": {
        "ReturnControlInvocationResults$member": null
      }
    },
    "InvocationStep": {
      "base": "<p>Stores fine-grained state checkpoints, including text and images, for each interaction in an invocation in a session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>. </p>",
      "refs": {
        "GetInvocationStepResponse$invocationStep": "<p>The complete details of the requested invocation step.</p>"
      }
    },
    "InvocationStepPayload": {
      "base": "<p>Payload content, such as text and images, for the invocation step.</p>",
      "refs": {
        "InvocationStep$payload": "<p>Payload content, such as text and images, for the invocation step.</p>",
        "PutInvocationStepRequest$payload": "<p>The payload for the invocation step, including text and images for the interaction.</p>"
      }
    },
    "InvocationStepSummaries": {
      "base": null,
      "refs": {
        "ListInvocationStepsResponse$invocationStepSummaries": "<p>A list of summaries for each invocation step associated with a session and if you specified it, an invocation within the session.</p>"
      }
    },
    "InvocationStepSummary": {
      "base": "<p>Contains details about an invocation step within an invocation in a session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
      "refs": {
        "InvocationStepSummaries$member": null
      }
    },
    "InvocationSummaries": {
      "base": null,
      "refs": {
        "ListInvocationsResponse$invocationSummaries": "<p>A list of invocation summaries associated with the session.</p>"
      }
    },
    "InvocationSummary": {
      "base": "<p>Contains details about an invocation in a session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
      "refs": {
        "InvocationSummaries$member": null
      }
    },
    "InvocationType": {
      "base": null,
      "refs": {
        "InvocationInput$invocationType": "<p>Specifies whether the agent is invoking an action group or a knowledge base.</p>"
      }
    },
    "InvokeAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "InvokeAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "InvokeFlowRequest": {
      "base": null,
      "refs": {
      }
    },
    "InvokeFlowResponse": {
      "base": null,
      "refs": {
      }
    },
    "InvokeInlineAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "InvokeInlineAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "KmsKeyArn": {
      "base": null,
      "refs": {
        "Collaborator$customerEncryptionKeyArn": "<p> The Amazon Resource Name (ARN) of the AWS KMS key that encrypts the inline collaborator. </p>",
        "CreateSessionRequest$encryptionKeyArn": "<p>The Amazon Resource Name (ARN) of the KMS key to use to encrypt the session data. The user or role creating the session must have permission to use the key. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/session-encryption.html\">Amazon Bedrock session encryption</a>. </p>",
        "GetSessionResponse$encryptionKeyArn": "<p>The Amazon Resource Name (ARN) of the Key Management Service key used to encrypt the session data. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/session-encryption.html\">Amazon Bedrock session encryption</a>.</p>",
        "InvokeInlineAgentRequest$customerEncryptionKeyArn": "<p> The Amazon Resource Name (ARN) of the Amazon Web Services KMS key to use to encrypt your inline agent. </p>",
        "RetrieveAndGenerateSessionConfiguration$kmsKeyArn": "<p>The ARN of the KMS key encrypting the session.</p>"
      }
    },
    "KnowledgeBase": {
      "base": "<p> Details of the knowledge base associated withe inline agent. </p>",
      "refs": {
        "KnowledgeBases$member": null
      }
    },
    "KnowledgeBaseArn": {
      "base": null,
      "refs": {
        "TextToSqlKnowledgeBaseConfiguration$knowledgeBaseArn": "<p>The ARN of the knowledge base</p>"
      }
    },
    "KnowledgeBaseConfiguration": {
      "base": "<p>Configurations to apply to a knowledge base attached to the agent during query. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html#session-state-kb\">Knowledge base retrieval configurations</a>.</p>",
      "refs": {
        "KnowledgeBaseConfigurations$member": null
      }
    },
    "KnowledgeBaseConfigurations": {
      "base": null,
      "refs": {
        "SessionState$knowledgeBaseConfigurations": "<p>An array of configurations, each of which applies to a knowledge base attached to the agent.</p>"
      }
    },
    "KnowledgeBaseId": {
      "base": null,
      "refs": {
        "KnowledgeBase$knowledgeBaseId": "<p> The unique identifier for a knowledge base associated with the inline agent. </p>",
        "KnowledgeBaseConfiguration$knowledgeBaseId": "<p>The unique identifier for a knowledge base attached to the agent.</p>",
        "KnowledgeBaseRetrieveAndGenerateConfiguration$knowledgeBaseId": "<p>The unique identifier of the knowledge base that is queried.</p>",
        "RetrieveRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to query.</p>"
      }
    },
    "KnowledgeBaseLookupInput": {
      "base": "<p>Contains details about the knowledge base to look up and the query to be made.</p>",
      "refs": {
        "InvocationInput$knowledgeBaseLookupInput": "<p>Contains details about the knowledge base to look up and the query to be made.</p>"
      }
    },
    "KnowledgeBaseLookupInputString": {
      "base": null,
      "refs": {
        "KnowledgeBaseLookupInput$text": "<p>The query made to the knowledge base.</p>"
      }
    },
    "KnowledgeBaseLookupOutput": {
      "base": "<p>Contains details about the results from looking up the knowledge base.</p>",
      "refs": {
        "Observation$knowledgeBaseLookupOutput": "<p>Contains details about the results from looking up the knowledge base.</p>"
      }
    },
    "KnowledgeBaseQuery": {
      "base": "<p>Contains the query made to the knowledge base.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax\">Retrieve request</a> – in the <code>retrievalQuery</code> field</p> </li> </ul>",
      "refs": {
        "RetrieveRequest$retrievalQuery": "<p>Contains the query to send the knowledge base.</p>"
      }
    },
    "KnowledgeBaseQueryTextString": {
      "base": null,
      "refs": {
        "KnowledgeBaseQuery$text": "<p>The text of the query made to the knowledge base.</p>"
      }
    },
    "KnowledgeBaseRetrievalConfiguration": {
      "base": "<p>Contains configurations for knowledge base query. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax\">Retrieve request</a> – in the <code>retrievalConfiguration</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>retrievalConfiguration</code> field</p> </li> </ul>",
      "refs": {
        "KnowledgeBase$retrievalConfiguration": "<p> The configurations to apply to the knowledge base during query. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>. </p>",
        "KnowledgeBaseConfiguration$retrievalConfiguration": "<p>The configurations to apply to the knowledge base during query. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p>",
        "KnowledgeBaseRetrieveAndGenerateConfiguration$retrievalConfiguration": "<p>Contains configurations for how to retrieve and return the knowledge base query.</p>",
        "RetrieveRequest$retrievalConfiguration": "<p>Contains configurations for the knowledge base query and retrieval process. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p>"
      }
    },
    "KnowledgeBaseRetrievalResult": {
      "base": "<p>Details about a result from querying the knowledge base.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax\">Retrieve response</a> – in the <code>retrievalResults</code> field</p> </li> </ul>",
      "refs": {
        "KnowledgeBaseRetrievalResults$member": null
      }
    },
    "KnowledgeBaseRetrievalResults": {
      "base": null,
      "refs": {
        "RetrieveResponse$retrievalResults": "<p>A list of results from querying the knowledge base.</p>"
      }
    },
    "KnowledgeBaseRetrieveAndGenerateConfiguration": {
      "base": "<p>Contains details about the resource being queried.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax\">Retrieve request</a> – in the <code>knowledgeBaseConfiguration</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>knowledgeBaseConfiguration</code> field</p> </li> </ul>",
      "refs": {
        "RetrieveAndGenerateConfiguration$knowledgeBaseConfiguration": "<p>Contains details about the knowledge base for retrieving information and generating responses.</p>"
      }
    },
    "KnowledgeBaseVectorSearchConfiguration": {
      "base": "<p>Configurations for how to perform the search query and return results. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax\">Retrieve request</a> – in the <code>vectorSearchConfiguration</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>vectorSearchConfiguration</code> field</p> </li> </ul>",
      "refs": {
        "KnowledgeBaseRetrievalConfiguration$vectorSearchConfiguration": "<p>Contains details about how the results from the vector search should be returned. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p>"
      }
    },
    "KnowledgeBaseVectorSearchConfigurationNumberOfResultsInteger": {
      "base": null,
      "refs": {
        "KnowledgeBaseVectorSearchConfiguration$numberOfResults": "<p>The number of source chunks to retrieve.</p>"
      }
    },
    "KnowledgeBases": {
      "base": null,
      "refs": {
        "Collaborator$knowledgeBases": "<p> Knowledge base associated with the inline collaborator agent. </p>",
        "InvokeInlineAgentRequest$knowledgeBases": "<p> Contains information of the knowledge bases to associate with. </p>"
      }
    },
    "LambdaArn": {
      "base": null,
      "refs": {
        "ModelInvocationInput$overrideLambda": "<p>The ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence.</p>"
      }
    },
    "LambdaResourceArn": {
      "base": null,
      "refs": {
        "ActionGroupExecutor$lambda": "<p> The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action. </p>",
        "PromptOverrideConfiguration$overrideLambda": "<p>The ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the <code>promptConfigurations</code> must contain a <code>parserMode</code> value that is set to <code>OVERRIDDEN</code>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/lambda-parser.html\">Parser Lambda function in Amazon Bedrock Agents</a>. </p>"
      }
    },
    "ListInvocationStepsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListInvocationStepsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListInvocationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListInvocationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListSessionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListSessionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "MaxResults": {
      "base": "<p>Max Results.</p>",
      "refs": {
        "GetAgentMemoryRequest$maxItems": "<p>The maximum number of items to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListInvocationStepsRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListInvocationsRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListSessionsRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>"
      }
    },
    "MaxTokens": {
      "base": null,
      "refs": {
        "TextInferenceConfig$maxTokens": "<p>The maximum number of tokens to generate in the output text. Do not use the minimum of 0 or the maximum of 65536. The limit values described here are arbitary values, for actual values consult the limits defined by your specific model.</p>"
      }
    },
    "MaximumLength": {
      "base": null,
      "refs": {
        "InferenceConfiguration$maximumLength": "<p>The maximum number of tokens allowed in the generated response.</p>"
      }
    },
    "Memories": {
      "base": null,
      "refs": {
        "GetAgentMemoryResponse$memoryContents": "<p>Contains details of the sessions stored in the memory</p>"
      }
    },
    "Memory": {
      "base": "<p>Contains sessions summaries.</p>",
      "refs": {
        "Memories$member": null
      }
    },
    "MemoryId": {
      "base": null,
      "refs": {
        "DeleteAgentMemoryRequest$memoryId": "<p>The unique identifier of the memory.</p>",
        "GetAgentMemoryRequest$memoryId": "<p>The unique identifier of the memory. </p>",
        "InvokeAgentRequest$memoryId": "<p>The unique identifier of the agent memory.</p>",
        "InvokeAgentResponse$memoryId": "<p>The unique identifier of the agent memory.</p>",
        "MemorySessionSummary$memoryId": "<p>The unique identifier of the memory where the session summary is stored.</p>"
      }
    },
    "MemorySessionSummary": {
      "base": "<p>Contains details of a session summary.</p>",
      "refs": {
        "Memory$sessionSummary": "<p>Contains summary of a session.</p>"
      }
    },
    "MemoryType": {
      "base": null,
      "refs": {
        "GetAgentMemoryRequest$memoryType": "<p>The type of memory.</p>"
      }
    },
    "Message": {
      "base": "<p>Details about a message.</p>",
      "refs": {
        "Messages$member": null
      }
    },
    "Messages": {
      "base": null,
      "refs": {
        "ConversationHistory$messages": "<p>The conversation's messages.</p>"
      }
    },
    "Metadata": {
      "base": "<p>Provides details of the foundation model.</p>",
      "refs": {
        "OrchestrationModelInvocationOutput$metadata": "<p>Contains information about the foundation model output from the orchestration step.</p>",
        "PostProcessingModelInvocationOutput$metadata": "<p> Contains information about the foundation model output from the post-processing step. </p>",
        "PreProcessingModelInvocationOutput$metadata": "<p> Contains information about the foundation model output from the pre-processing step. </p>",
        "RoutingClassifierModelInvocationOutput$metadata": "<p>The invocation's metadata.</p>"
      }
    },
    "MetadataAttributeSchema": {
      "base": "<p>Details about a metadata attribute.</p>",
      "refs": {
        "MetadataAttributeSchemaList$member": null
      }
    },
    "MetadataAttributeSchemaDescriptionString": {
      "base": null,
      "refs": {
        "MetadataAttributeSchema$description": "<p>The attribute's description.</p>"
      }
    },
    "MetadataAttributeSchemaKeyString": {
      "base": null,
      "refs": {
        "MetadataAttributeSchema$key": "<p>The attribute's key.</p>"
      }
    },
    "MetadataAttributeSchemaList": {
      "base": null,
      "refs": {
        "ImplicitFilterConfiguration$metadataAttributes": "<p>Metadata that can be used in a filter.</p>"
      }
    },
    "MetadataConfigurationForReranking": {
      "base": "<p>Contains configurations for the metadata to use in reranking.</p>",
      "refs": {
        "VectorSearchBedrockRerankingConfiguration$metadataConfiguration": "<p>Contains configurations for the metadata to use in reranking.</p>"
      }
    },
    "MimeType": {
      "base": null,
      "refs": {
        "ByteContentFile$mediaType": "<p>The MIME type of data contained in the file used for chat.</p>",
        "InvokeAgentResponse$contentType": "<p>The MIME type of the input data in the request. The default value is <code>application/json</code>.</p>",
        "InvokeInlineAgentResponse$contentType": "<p> The MIME type of the input data in the request. The default value is application/json. </p>",
        "OutputFile$type": "<p>The type of file that contains response from the code interpreter.</p>"
      }
    },
    "ModelIdentifier": {
      "base": null,
      "refs": {
        "Collaborator$foundationModel": "<p> The foundation model used by the inline collaborator agent. </p>",
        "InvokeInlineAgentRequest$foundationModel": "<p> The <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns\">model identifier (ID)</a> of the model to use for orchestration by the inline agent. For example, <code>meta.llama3-1-70b-instruct-v1:0</code>. </p>",
        "ModelInvocationInput$foundationModel": "<p>The identifier of a foundation model.</p>",
        "PromptConfiguration$foundationModel": "<p> The foundation model to use. </p>"
      }
    },
    "ModelInvocationInput": {
      "base": "<p>The input for the pre-processing step.</p> <ul> <li> <p>The <code>type</code> matches the agent step.</p> </li> <li> <p>The <code>text</code> contains the prompt.</p> </li> <li> <p>The <code>inferenceConfiguration</code>, <code>parserMode</code>, and <code>overrideLambda</code> values are set in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> object that was set when the agent was created or updated.</p> </li> </ul>",
      "refs": {
        "OrchestrationTrace$modelInvocationInput": "<p>The input for the orchestration step.</p> <ul> <li> <p>The <code>type</code> is <code>ORCHESTRATION</code>.</p> </li> <li> <p>The <code>text</code> contains the prompt.</p> </li> <li> <p>The <code>inferenceConfiguration</code>, <code>parserMode</code>, and <code>overrideLambda</code> values are set in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> object that was set when the agent was created or updated.</p> </li> </ul>",
        "PostProcessingTrace$modelInvocationInput": "<p>The input for the post-processing step.</p> <ul> <li> <p>The <code>type</code> is <code>POST_PROCESSING</code>.</p> </li> <li> <p>The <code>text</code> contains the prompt.</p> </li> <li> <p>The <code>inferenceConfiguration</code>, <code>parserMode</code>, and <code>overrideLambda</code> values are set in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> object that was set when the agent was created or updated.</p> </li> </ul>",
        "PreProcessingTrace$modelInvocationInput": "<p>The input for the pre-processing step.</p> <ul> <li> <p>The <code>type</code> is <code>PRE_PROCESSING</code>.</p> </li> <li> <p>The <code>text</code> contains the prompt.</p> </li> <li> <p>The <code>inferenceConfiguration</code>, <code>parserMode</code>, and <code>overrideLambda</code> values are set in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> object that was set when the agent was created or updated.</p> </li> </ul>",
        "RoutingClassifierTrace$modelInvocationInput": "<p>The classifier's model invocation input.</p>"
      }
    },
    "ModelNotReadyException": {
      "base": "<p> The model specified in the request is not ready to serve inference requests. The AWS SDK will automatically retry the operation up to 5 times. For information about configuring automatic retries, see <a href=\"https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html\">Retry behavior</a> in the <i>AWS SDKs and Tools</i> reference guide. </p>",
      "refs": {
        "ResponseStream$modelNotReadyException": "<p> The model specified in the request is not ready to serve Inference requests. The AWS SDK will automatically retry the operation up to 5 times. For information about configuring automatic retries, see <a href=\"https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html\">Retry behavior</a> in the <i>AWS SDKs and Tools</i> reference guide. </p>"
      }
    },
    "ModelPerformanceConfiguration": {
      "base": "<p>The performance configuration for a model called with <a>InvokeFlow</a>.</p>",
      "refs": {
        "InvokeFlowRequest$modelPerformanceConfiguration": "<p>Model performance settings for the request.</p>"
      }
    },
    "Name": {
      "base": null,
      "refs": {
        "ApiInvocationInput$collaboratorName": "<p>The agent collaborator's name.</p>",
        "Collaborator$agentName": "<p> Name of the inline collaborator agent which must be the same name as specified for <code>collaboratorName</code>. </p>",
        "CollaboratorConfiguration$collaboratorName": "<p> Name of the inline collaborator agent which must be the same name as specified for <code>agentName</code>. </p>",
        "FunctionInvocationInput$collaboratorName": "<p>The collaborator's name.</p>",
        "TracePart$collaboratorName": "<p>The part's collaborator name.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "GetAgentMemoryRequest$nextToken": "<p>If the total number of results is greater than the maxItems value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "GetAgentMemoryResponse$nextToken": "<p>If the total number of results is greater than the maxItems value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListInvocationStepsRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results. </p>",
        "ListInvocationStepsResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListInvocationsRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results. </p>",
        "ListInvocationsResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListSessionsRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results. </p>",
        "ListSessionsResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "RerankRequest$nextToken": "<p>If the total number of results was greater than could fit in a response, a token is returned in the <code>nextToken</code> field. You can enter that token in this field to return the next batch of results.</p>",
        "RerankResponse$nextToken": "<p>If the total number of results is greater than can fit in the response, use this token in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "RetrieveRequest$nextToken": "<p>If there are more results than can fit in the response, the response returns a <code>nextToken</code>. Use this token in the <code>nextToken</code> field of another request to retrieve the next batch of results.</p>",
        "RetrieveResponse$nextToken": "<p>If there are more results than can fit in the response, the response returns a <code>nextToken</code>. Use this token in the <code>nextToken</code> field of another request to retrieve the next batch of results.</p>"
      }
    },
    "NodeInputName": {
      "base": null,
      "refs": {
        "FlowInput$nodeInputName": "<p>The name of the input from the flow input node.</p>",
        "FlowTraceNodeInputField$nodeInputName": "<p>The name of the node input.</p>"
      }
    },
    "NodeName": {
      "base": null,
      "refs": {
        "FlowInput$nodeName": "<p>The name of the flow input node that begins the prompt flow.</p>",
        "FlowMultiTurnInputRequestEvent$nodeName": "<p>The name of the node in the flow that is requesting the input.</p>",
        "FlowOutputEvent$nodeName": "<p>The name of the flow output node that the output is from.</p>",
        "FlowTraceConditionNodeResultEvent$nodeName": "<p>The name of the condition node.</p>",
        "FlowTraceNodeInputEvent$nodeName": "<p>The name of the node that received the input.</p>",
        "FlowTraceNodeOutputEvent$nodeName": "<p>The name of the node that yielded the output.</p>"
      }
    },
    "NodeOutputName": {
      "base": null,
      "refs": {
        "FlowInput$nodeOutputName": "<p>The name of the output from the flow input node that begins the prompt flow.</p>",
        "FlowTraceNodeOutputField$nodeOutputName": "<p>The name of the node output.</p>"
      }
    },
    "NodeType": {
      "base": null,
      "refs": {
        "FlowMultiTurnInputRequestEvent$nodeType": "<p>The type of the node in the flow that is requesting the input.</p>",
        "FlowOutputEvent$nodeType": "<p>The type of the node that the output is from.</p>"
      }
    },
    "NonBlankString": {
      "base": null,
      "refs": {
        "AccessDeniedException$message": null,
        "BadGatewayException$message": null,
        "BadGatewayException$resourceName": "<p>The name of the dependency that caused the issue, such as Amazon Bedrock, Lambda, or STS.</p>",
        "ConflictException$message": null,
        "DependencyFailedException$message": null,
        "DependencyFailedException$resourceName": "<p>The name of the dependency that caused the issue, such as Amazon Bedrock, Lambda, or STS.</p>",
        "InternalServerException$message": null,
        "ModelNotReadyException$message": null,
        "ResourceNotFoundException$message": null,
        "ServiceQuotaExceededException$message": null,
        "ThrottlingException$message": null,
        "ValidationException$message": null
      }
    },
    "Observation": {
      "base": "<p>Contains the result or output of an action group or knowledge base, or the response to the user.</p>",
      "refs": {
        "OrchestrationTrace$observation": "<p>Details about the observation (the output of the action group Lambda or knowledge base) made by the agent.</p>",
        "RoutingClassifierTrace$observation": "<p>The classifier's observation.</p>"
      }
    },
    "OptimizePromptRequest": {
      "base": null,
      "refs": {
      }
    },
    "OptimizePromptRequestTargetModelIdString": {
      "base": null,
      "refs": {
        "OptimizePromptRequest$targetModelId": "<p>The unique identifier of the model that you want to optimize the prompt for.</p>"
      }
    },
    "OptimizePromptResponse": {
      "base": null,
      "refs": {
      }
    },
    "OptimizedPrompt": {
      "base": "<p>Contains information about the optimized prompt.</p>",
      "refs": {
        "OptimizedPromptEvent$optimizedPrompt": "<p>Contains information about the optimized prompt.</p>"
      }
    },
    "OptimizedPromptEvent": {
      "base": "<p>An event in which the prompt was optimized.</p>",
      "refs": {
        "OptimizedPromptStream$optimizedPromptEvent": "<p>An event in which the prompt was optimized.</p>"
      }
    },
    "OptimizedPromptStream": {
      "base": "<p>The stream containing events in the prompt optimization process.</p>",
      "refs": {
        "OptimizePromptResponse$optimizedPrompt": "<p>The prompt after being optimized for the task.</p>"
      }
    },
    "OrchestrationConfiguration": {
      "base": "<p>Settings for how the model processes the prompt prior to retrieval and generation.</p>",
      "refs": {
        "KnowledgeBaseRetrieveAndGenerateConfiguration$orchestrationConfiguration": "<p>Settings for how the model processes the prompt prior to retrieval and generation.</p>"
      }
    },
    "OrchestrationModelInvocationOutput": {
      "base": "<p>The foundation model output from the orchestration step.</p>",
      "refs": {
        "OrchestrationTrace$modelInvocationOutput": "<p>Contains information pertaining to the output from the foundation model that is being invoked.</p>"
      }
    },
    "OrchestrationTrace": {
      "base": "<p>Details about the orchestration step, in which the agent determines the order in which actions are executed and which knowledge bases are retrieved.</p>",
      "refs": {
        "Trace$orchestrationTrace": "<p>Details about the orchestration step, in which the agent determines the order in which actions are executed and which knowledge bases are retrieved.</p>"
      }
    },
    "OutputFile": {
      "base": "<p>Contains details of the response from code interpreter.</p>",
      "refs": {
        "OutputFiles$member": null
      }
    },
    "OutputFiles": {
      "base": null,
      "refs": {
        "FilePart$files": "<p>Files containing intermediate response for the user.</p>",
        "InlineAgentFilePart$files": "<p>Files containing intermediate response for the user.</p>"
      }
    },
    "OutputString": {
      "base": null,
      "refs": {
        "PostProcessingParsedResponse$text": "<p>The text returned by the parser.</p>"
      }
    },
    "Parameter": {
      "base": "<p>A parameter for the API request or function.</p>",
      "refs": {
        "ParameterList$member": null,
        "Parameters$member": null
      }
    },
    "ParameterDescription": {
      "base": null,
      "refs": {
        "ParameterDetail$description": "<p> A description of the parameter. Helps the foundation model determine how to elicit the parameters from the user. </p>"
      }
    },
    "ParameterDetail": {
      "base": "<p> Contains details about a parameter in a function for an action group. </p>",
      "refs": {
        "ParameterMap$value": null
      }
    },
    "ParameterList": {
      "base": null,
      "refs": {
        "PropertyParameters$properties": "<p>A list of parameters in the request body.</p>"
      }
    },
    "ParameterMap": {
      "base": null,
      "refs": {
        "FunctionDefinition$parameters": "<p> The parameters that the agent elicits from the user to fulfill the function. </p>"
      }
    },
    "ParameterName": {
      "base": null,
      "refs": {
        "ParameterMap$key": null
      }
    },
    "ParameterType": {
      "base": null,
      "refs": {
        "ParameterDetail$type": "<p> The data type of the parameter. </p>"
      }
    },
    "Parameters": {
      "base": null,
      "refs": {
        "ActionGroupInvocationInput$parameters": "<p>The parameters in the Lambda input event.</p>",
        "ContentMap$value": null
      }
    },
    "PartBody": {
      "base": null,
      "refs": {
        "InlineAgentPayloadPart$bytes": "<p>A part of the agent response in bytes.</p>",
        "PayloadPart$bytes": "<p>A part of the agent response in bytes.</p>"
      }
    },
    "Payload": {
      "base": null,
      "refs": {
        "APISchema$payload": "<p> The JSON or YAML-formatted payload defining the OpenAPI schema for the action group. </p>"
      }
    },
    "PayloadPart": {
      "base": "<p>Contains a part of an agent response and citations for it.</p>",
      "refs": {
        "ResponseStream$chunk": "<p>Contains a part of an agent response and citations for it.</p>"
      }
    },
    "PayloadType": {
      "base": null,
      "refs": {
        "AgentCollaboratorInputPayload$type": "<p>The input type.</p>",
        "AgentCollaboratorOutputPayload$type": "<p>The type of output.</p>"
      }
    },
    "PerformanceConfigLatency": {
      "base": null,
      "refs": {
        "PerformanceConfiguration$latency": "<p>To use a latency-optimized version of the model, set to <code>optimized</code>.</p>"
      }
    },
    "PerformanceConfiguration": {
      "base": "<p>Performance settings for a model.</p>",
      "refs": {
        "BedrockModelConfigurations$performanceConfig": "<p>The performance configuration for the model.</p>",
        "ExternalSourcesGenerationConfiguration$performanceConfig": "<p>The latency configuration for the model.</p>",
        "GenerationConfiguration$performanceConfig": "<p>The latency configuration for the model.</p>",
        "InlineBedrockModelConfigurations$performanceConfig": "<p>The latency configuration for the model.</p>",
        "ModelPerformanceConfiguration$performanceConfig": "<p>The latency configuration for the model.</p>",
        "OrchestrationConfiguration$performanceConfig": "<p>The latency configuration for the model.</p>"
      }
    },
    "PostProcessingModelInvocationOutput": {
      "base": "<p>The foundation model output from the post-processing step.</p>",
      "refs": {
        "PostProcessingTrace$modelInvocationOutput": "<p>The foundation model output from the post-processing step.</p>"
      }
    },
    "PostProcessingParsedResponse": {
      "base": "<p>Details about the response from the Lambda parsing of the output from the post-processing step.</p>",
      "refs": {
        "PostProcessingModelInvocationOutput$parsedResponse": "<p>Details about the response from the Lambda parsing of the output of the post-processing step.</p>"
      }
    },
    "PostProcessingTrace": {
      "base": "<p>Details about the post-processing step, in which the agent shapes the response.</p>",
      "refs": {
        "Trace$postProcessingTrace": "<p>Details about the post-processing step, in which the agent shapes the response..</p>"
      }
    },
    "PreProcessingModelInvocationOutput": {
      "base": "<p>The foundation model output from the pre-processing step.</p>",
      "refs": {
        "PreProcessingTrace$modelInvocationOutput": "<p>The foundation model output from the pre-processing step.</p>"
      }
    },
    "PreProcessingParsedResponse": {
      "base": "<p>Details about the response from the Lambda parsing of the output from the pre-processing step.</p>",
      "refs": {
        "PreProcessingModelInvocationOutput$parsedResponse": "<p>Details about the response from the Lambda parsing of the output of the pre-processing step.</p>"
      }
    },
    "PreProcessingTrace": {
      "base": "<p>Details about the pre-processing step, in which the agent contextualizes and categorizes user inputs.</p>",
      "refs": {
        "Trace$preProcessingTrace": "<p>Details about the pre-processing step, in which the agent contextualizes and categorizes user inputs.</p>"
      }
    },
    "PromptConfiguration": {
      "base": "<p> Contains configurations to override a prompt template in one part of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>. </p>",
      "refs": {
        "PromptConfigurations$member": null
      }
    },
    "PromptConfigurations": {
      "base": null,
      "refs": {
        "PromptOverrideConfiguration$promptConfigurations": "<p>Contains configurations to override a prompt template in one part of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>. </p>"
      }
    },
    "PromptOverrideConfiguration": {
      "base": "<p>Contains configurations to override prompts in different parts of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>. </p>",
      "refs": {
        "Collaborator$promptOverrideConfiguration": "<p> Contains configurations to override prompt templates in different parts of an inline collaborator sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>. </p>",
        "InvokeInlineAgentRequest$promptOverrideConfiguration": "<p> Configurations for advanced prompts used to override the default prompts to enhance the accuracy of the inline agent. </p>"
      }
    },
    "PromptSessionAttributesMap": {
      "base": null,
      "refs": {
        "InlineSessionState$promptSessionAttributes": "<p> Contains attributes that persist across a session and the values of those attributes. </p>",
        "SessionState$promptSessionAttributes": "<p>Contains attributes that persist across a prompt and the values of those attributes. </p> <ul> <li> <p>In orchestration prompt template, these attributes replace the $prompt_session_attributes$ placeholder variable. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html\">Prompt template placeholder variables</a>.</p> </li> <li> <p>In <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-multi-agent-collaboration.html\">multi-agent collaboration</a>, the <code>promptSessionAttributes</code> will only be used by supervisor agent when $prompt_session_attributes$ is present in prompt template. </p> </li> </ul>"
      }
    },
    "PromptState": {
      "base": null,
      "refs": {
        "PromptConfiguration$promptState": "<p>Specifies whether to allow the inline agent to carry out the step specified in the <code>promptType</code>. If you set this value to <code>DISABLED</code>, the agent skips that step. The default state for each <code>promptType</code> is as follows.</p> <ul> <li> <p> <code>PRE_PROCESSING</code> – <code>ENABLED</code> </p> </li> <li> <p> <code>ORCHESTRATION</code> – <code>ENABLED</code> </p> </li> <li> <p> <code>KNOWLEDGE_BASE_RESPONSE_GENERATION</code> – <code>ENABLED</code> </p> </li> <li> <p> <code>POST_PROCESSING</code> – <code>DISABLED</code> </p> </li> </ul>"
      }
    },
    "PromptTemplate": {
      "base": "<p>Contains the template for the prompt that's sent to the model for response generation. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html#kb-test-config-sysprompt\">Knowledge base prompt templates</a>.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>filter</code> field</p> </li> </ul>",
      "refs": {
        "ExternalSourcesGenerationConfiguration$promptTemplate": "<p>Contain the textPromptTemplate string for the external source wrapper object.</p>",
        "GenerationConfiguration$promptTemplate": "<p>Contains the template for the prompt that's sent to the model for response generation. Generation prompts must include the <code>$search_results$</code> variable. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html\">Use placeholder variables</a> in the user guide.</p>",
        "OrchestrationConfiguration$promptTemplate": "<p>Contains the template for the prompt that's sent to the model. Orchestration prompts must include the <code>$conversation_history$</code> and <code>$output_format_instructions$</code> variables. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html\">Use placeholder variables</a> in the user guide.</p>"
      }
    },
    "PromptText": {
      "base": null,
      "refs": {
        "ModelInvocationInput$text": "<p>The text that prompted the agent at this step.</p>"
      }
    },
    "PromptType": {
      "base": null,
      "refs": {
        "ModelInvocationInput$type": "<p>The step in the agent sequence.</p>",
        "PromptConfiguration$promptType": "<p> The step in the agent sequence that this prompt configuration applies to. </p>"
      }
    },
    "PropertyParameters": {
      "base": "<p>Contains the parameters in the request body.</p>",
      "refs": {
        "ApiContentMap$value": null
      }
    },
    "PutInvocationStepRequest": {
      "base": null,
      "refs": {
      }
    },
    "PutInvocationStepResponse": {
      "base": null,
      "refs": {
      }
    },
    "QueryGenerationInput": {
      "base": "<p>Contains information about a natural language query to transform into SQL.</p>",
      "refs": {
        "GenerateQueryRequest$queryGenerationInput": "<p>Specifies information about a natural language query to transform into SQL.</p>"
      }
    },
    "QueryGenerationInputTextString": {
      "base": null,
      "refs": {
        "QueryGenerationInput$text": "<p>The text of the query.</p>"
      }
    },
    "QueryTransformationConfiguration": {
      "base": "<p>To split up the prompt and retrieve multiple sources, set the transformation type to <code>QUERY_DECOMPOSITION</code>.</p>",
      "refs": {
        "OrchestrationConfiguration$queryTransformationConfiguration": "<p>To split up the prompt and retrieve multiple sources, set the transformation type to <code>QUERY_DECOMPOSITION</code>.</p>"
      }
    },
    "QueryTransformationMode": {
      "base": null,
      "refs": {
        "TransformationConfiguration$mode": "<p>The mode of the transformation.</p>"
      }
    },
    "QueryTransformationType": {
      "base": null,
      "refs": {
        "QueryTransformationConfiguration$type": "<p>The type of transformation to apply to the prompt.</p>"
      }
    },
    "RAGStopSequences": {
      "base": null,
      "refs": {
        "TextInferenceConfig$stopSequences": "<p>A list of sequences of characters that, if generated, will cause the model to stop generating further tokens. Do not use a minimum length of 1 or a maximum length of 1000. The limit values described here are arbitary values, for actual values consult the limits defined by your specific model.</p>"
      }
    },
    "RAGStopSequencesMemberString": {
      "base": null,
      "refs": {
        "RAGStopSequences$member": null
      }
    },
    "Rationale": {
      "base": "<p>Contains the reasoning, based on the input, that the agent uses to justify carrying out an action group or getting information from a knowledge base.</p>",
      "refs": {
        "OrchestrationTrace$rationale": "<p>Details about the reasoning, based on the input, that the agent uses to justify carrying out an action group or getting information from a knowledge base.</p>"
      }
    },
    "RationaleString": {
      "base": null,
      "refs": {
        "PreProcessingParsedResponse$rationale": "<p>The text returned by the parsing of the pre-processing step, explaining the steps that the agent plans to take in orchestration, if the user input is valid.</p>",
        "Rationale$text": "<p>The reasoning or thought process of the agent, based on the input.</p>"
      }
    },
    "RawResponse": {
      "base": "<p>Contains the raw output from the foundation model.</p>",
      "refs": {
        "OrchestrationModelInvocationOutput$rawResponse": "<p>Contains details of the raw response from the foundation model output.</p>",
        "PostProcessingModelInvocationOutput$rawResponse": "<p> Details of the raw response from the foundation model output. </p>",
        "PreProcessingModelInvocationOutput$rawResponse": "<p> Details of the raw response from the foundation model output. </p>",
        "RoutingClassifierModelInvocationOutput$rawResponse": "<p>The invocation's raw response.</p>"
      }
    },
    "ReasoningContentBlock": {
      "base": "<p>Contains content regarding the reasoning that the foundation model made with respect to the content in the content block. Reasoning refers to a Chain of Thought (CoT) that the model generates to enhance the accuracy of its final response.</p>",
      "refs": {
        "OrchestrationModelInvocationOutput$reasoningContent": "<p>Contains content about the reasoning that the model made during the orchestration step. </p>",
        "PostProcessingModelInvocationOutput$reasoningContent": "<p>Contains content about the reasoning that the model made during the post-processing step.</p>",
        "PreProcessingModelInvocationOutput$reasoningContent": "<p>Contains content about the reasoning that the model made during the pre-processing step. </p>"
      }
    },
    "ReasoningTextBlock": {
      "base": "<p>Contains information about the reasoning that the model used to return the content in the content block.</p>",
      "refs": {
        "ReasoningContentBlock$reasoningText": "<p>Contains information about the reasoning that the model used to return the content in the content block.</p>"
      }
    },
    "RelayConversationHistory": {
      "base": null,
      "refs": {
        "CollaboratorConfiguration$relayConversationHistory": "<p> A relay conversation history for the inline collaborator agent. </p>"
      }
    },
    "RepromptResponse": {
      "base": "<p>Contains details about the agent's response to reprompt the input.</p>",
      "refs": {
        "Observation$repromptResponse": "<p>Contains details about the response to reprompt the input.</p>"
      }
    },
    "RequestBody": {
      "base": "<p>The parameters in the API request body.</p>",
      "refs": {
        "ActionGroupInvocationInput$requestBody": "<p>The parameters in the request body for the Lambda input event.</p>"
      }
    },
    "RequireConfirmation": {
      "base": null,
      "refs": {
        "FunctionDefinition$requireConfirmation": "<p> Contains information if user confirmation is required to invoke the function. </p>"
      }
    },
    "RerankDocument": {
      "base": "<p>Contains information about a document to rerank. Choose the <code>type</code> to define and include the field that corresponds to the type.</p>",
      "refs": {
        "RerankResult$document": "<p>Contains information about the document.</p>",
        "RerankSource$inlineDocumentSource": "<p>Contains an inline definition of a source for reranking.</p>"
      }
    },
    "RerankDocumentType": {
      "base": null,
      "refs": {
        "RerankDocument$type": "<p>The type of document to rerank.</p>"
      }
    },
    "RerankQueriesList": {
      "base": null,
      "refs": {
        "RerankRequest$queries": "<p>An array of objects, each of which contains information about a query to submit to the reranker model.</p>"
      }
    },
    "RerankQuery": {
      "base": "<p>Contains information about a query to submit to the reranker model.</p>",
      "refs": {
        "RerankQueriesList$member": null
      }
    },
    "RerankQueryContentType": {
      "base": null,
      "refs": {
        "RerankQuery$type": "<p>The type of the query.</p>"
      }
    },
    "RerankRequest": {
      "base": null,
      "refs": {
      }
    },
    "RerankResponse": {
      "base": null,
      "refs": {
      }
    },
    "RerankResult": {
      "base": "<p>Contains information about a document that was reranked.</p>",
      "refs": {
        "RerankResultsList$member": null
      }
    },
    "RerankResultIndexInteger": {
      "base": null,
      "refs": {
        "RerankResult$index": "<p>The ranking of the document. The lower a number, the higher the document is ranked.</p>"
      }
    },
    "RerankResultsList": {
      "base": null,
      "refs": {
        "RerankResponse$results": "<p>An array of objects, each of which contains information about the results of reranking.</p>"
      }
    },
    "RerankSource": {
      "base": "<p>Contains information about a source for reranking.</p>",
      "refs": {
        "RerankSourcesList$member": null
      }
    },
    "RerankSourceType": {
      "base": null,
      "refs": {
        "RerankSource$type": "<p>The type of the source.</p>"
      }
    },
    "RerankSourcesList": {
      "base": null,
      "refs": {
        "RerankRequest$sources": "<p>An array of objects, each of which contains information about the sources to rerank.</p>"
      }
    },
    "RerankTextDocument": {
      "base": "<p>Contains information about a text document to rerank.</p>",
      "refs": {
        "RerankDocument$textDocument": "<p>Contains information about a text document to rerank.</p>",
        "RerankQuery$textQuery": "<p>Contains information about a text query.</p>"
      }
    },
    "RerankTextDocumentTextString": {
      "base": null,
      "refs": {
        "RerankTextDocument$text": "<p>The text of the document.</p>"
      }
    },
    "RerankingConfiguration": {
      "base": "<p>Contains configurations for reranking.</p>",
      "refs": {
        "RerankRequest$rerankingConfiguration": "<p>Contains configurations for reranking.</p>"
      }
    },
    "RerankingConfigurationType": {
      "base": null,
      "refs": {
        "RerankingConfiguration$type": "<p>The type of reranker that the configurations apply to.</p>"
      }
    },
    "RerankingMetadataSelectionMode": {
      "base": null,
      "refs": {
        "MetadataConfigurationForReranking$selectionMode": "<p>Specifies whether to consider all metadata when reranking, or only the metadata that you select. If you specify <code>SELECTIVE</code>, include the <code>selectiveModeConfiguration</code> field.</p>"
      }
    },
    "RerankingMetadataSelectiveModeConfiguration": {
      "base": "<p>Contains configurations for the metadata fields to include or exclude when considering reranking. If you include the <code>fieldsToExclude</code> field, the reranker ignores all the metadata fields that you specify. If you include the <code>fieldsToInclude</code> field, the reranker uses only the metadata fields that you specify and ignores all others. You can include only one of these fields.</p>",
      "refs": {
        "MetadataConfigurationForReranking$selectiveModeConfiguration": "<p>Contains configurations for the metadata fields to include or exclude when considering reranking.</p>"
      }
    },
    "ResourceDescription": {
      "base": "<p>/ @documentation(&quot;Description of the using the resource.&quot;)</p>",
      "refs": {
        "AgentActionGroup$description": "<p> A description of the action group. </p>",
        "KnowledgeBase$description": "<p> The description of the knowledge base associated with the inline agent. </p>"
      }
    },
    "ResourceName": {
      "base": null,
      "refs": {
        "AgentActionGroup$actionGroupName": "<p> The name of the action group. </p>",
        "FunctionDefinition$name": "<p> A name for the function. </p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.</p>",
      "refs": {
        "FlowResponseStream$resourceNotFoundException": "<p>The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.</p>",
        "InlineAgentResponseStream$resourceNotFoundException": "<p>The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again. </p>",
        "ResponseStream$resourceNotFoundException": "<p>The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.</p>",
        "RetrieveAndGenerateStreamResponseOutput$resourceNotFoundException": "<p>The specified resource ARN was not found. For troubleshooting this error, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found\">ResourceNotFound</a> in the Amazon Bedrock User Guide.</p>"
      }
    },
    "ResponseBody": {
      "base": null,
      "refs": {
        "ApiResult$responseBody": "<p>The response body from the API operation. The key of the object is the content type (currently, only <code>TEXT</code> is supported). The response may be returned directly or from the Lambda function.</p>",
        "FunctionResult$responseBody": "<p>The response from the function call using the parameters. The response might be returned directly or from the Lambda function. Specify <code>TEXT</code> or <code>IMAGES</code>. The key of the object is the content type. You can only specify one type. If you specify <code>IMAGES</code>, you can specify only one image. You can specify images only when the function in the <code>returnControlInvocationResults</code> is a computer use action. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>.</p>"
      }
    },
    "ResponseState": {
      "base": null,
      "refs": {
        "ApiResult$responseState": "<p>Controls the final response state returned to end user when API/Function execution failed. When this state is FAILURE, the request would fail with dependency failure exception. When this state is REPROMPT, the API/function response will be sent to model for re-prompt</p>",
        "FunctionResult$responseState": "<p>Controls the final response state returned to end user when API/Function execution failed. When this state is FAILURE, the request would fail with dependency failure exception. When this state is REPROMPT, the API/function response will be sent to model for re-prompt</p>"
      }
    },
    "ResponseStream": {
      "base": "<p>The response from invoking the agent and associated citations and trace information.</p>",
      "refs": {
        "InvokeAgentResponse$completion": "<p>The agent's response to the user prompt.</p>"
      }
    },
    "RetrievalFilter": {
      "base": "<p>Specifies the filters to use on the metadata attributes in the knowledge base data sources before returning results. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>. See the examples below to see how to use these filters.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax\">Retrieve request</a> – in the <code>filter</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>filter</code> field</p> </li> </ul>",
      "refs": {
        "KnowledgeBaseVectorSearchConfiguration$filter": "<p>Specifies the filters to use on the metadata in the knowledge base data sources before returning results. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p>",
        "RetrievalFilterList$member": null
      }
    },
    "RetrievalFilterList": {
      "base": null,
      "refs": {
        "RetrievalFilter$andAll": "<p>Knowledge base data sources are returned if their metadata attributes fulfill all the filter conditions inside this list.</p>",
        "RetrievalFilter$orAll": "<p>Knowledge base data sources are returned if their metadata attributes fulfill at least one of the filter conditions inside this list.</p>"
      }
    },
    "RetrievalResultConfluenceLocation": {
      "base": "<p>The Confluence data source location.</p>",
      "refs": {
        "RetrievalResultLocation$confluenceLocation": "<p>The Confluence data source location.</p>"
      }
    },
    "RetrievalResultContent": {
      "base": "<p>Contains information about a chunk of text from a data source in the knowledge base. If the result is from a structured data source, the cell in the database and the type of the value is also identified.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax\">Retrieve response</a> – in the <code>content</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>content</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>content</code> field</p> </li> </ul>",
      "refs": {
        "KnowledgeBaseRetrievalResult$content": "<p>Contains information about the content of the chunk.</p>",
        "RetrievedReference$content": "<p>Contains the cited text from the data source.</p>"
      }
    },
    "RetrievalResultContentColumn": {
      "base": "<p>Contains information about a column with a cell to return in retrieval.</p>",
      "refs": {
        "RetrievalResultContentRow$member": null
      }
    },
    "RetrievalResultContentColumnType": {
      "base": null,
      "refs": {
        "RetrievalResultContentColumn$type": "<p>The data type of the value.</p>"
      }
    },
    "RetrievalResultContentRow": {
      "base": null,
      "refs": {
        "RetrievalResultContent$row": "<p>Specifies information about the rows with the cells to return in retrieval.</p>"
      }
    },
    "RetrievalResultContentType": {
      "base": null,
      "refs": {
        "RetrievalResultContent$type": "<p>The type of content in the retrieval result.</p>"
      }
    },
    "RetrievalResultCustomDocumentLocation": {
      "base": "<p>Contains information about the location of a document in a custom data source.</p>",
      "refs": {
        "RetrievalResultLocation$customDocumentLocation": "<p>Specifies the location of a document in a custom data source.</p>"
      }
    },
    "RetrievalResultKendraDocumentLocation": {
      "base": "<p>The location of a result in Amazon Kendra.</p>",
      "refs": {
        "RetrievalResultLocation$kendraDocumentLocation": "<p>The location of a document in Amazon Kendra.</p>"
      }
    },
    "RetrievalResultLocation": {
      "base": "<p>Contains information about the data source location.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax\">Retrieve response</a> – in the <code>location</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>location</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>location</code> field</p> </li> </ul>",
      "refs": {
        "KnowledgeBaseRetrievalResult$location": "<p>Contains information about the location of the data source.</p>",
        "RetrievedReference$location": "<p>Contains information about the location of the data source.</p>"
      }
    },
    "RetrievalResultLocationType": {
      "base": null,
      "refs": {
        "RetrievalResultLocation$type": "<p>The type of data source location.</p>"
      }
    },
    "RetrievalResultMetadata": {
      "base": null,
      "refs": {
        "KnowledgeBaseRetrievalResult$metadata": "<p>Contains metadata attributes and their values for the file in the data source. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-ds.html#kb-ds-metadata\">Metadata and filtering</a>.</p>",
        "RetrievedReference$metadata": "<p>Contains metadata attributes and their values for the file in the data source. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-ds.html#kb-ds-metadata\">Metadata and filtering</a>.</p>"
      }
    },
    "RetrievalResultMetadataKey": {
      "base": null,
      "refs": {
        "RetrievalResultMetadata$key": null
      }
    },
    "RetrievalResultMetadataValue": {
      "base": null,
      "refs": {
        "RetrievalResultMetadata$value": null
      }
    },
    "RetrievalResultS3Location": {
      "base": "<p>The S3 data source location.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax\">Retrieve response</a> – in the <code>s3Location</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>s3Location</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>s3Location</code> field</p> </li> </ul>",
      "refs": {
        "RetrievalResultLocation$s3Location": "<p>The S3 data source location.</p>"
      }
    },
    "RetrievalResultSalesforceLocation": {
      "base": "<p>The Salesforce data source location.</p>",
      "refs": {
        "RetrievalResultLocation$salesforceLocation": "<p>The Salesforce data source location.</p>"
      }
    },
    "RetrievalResultSharePointLocation": {
      "base": "<p>The SharePoint data source location.</p>",
      "refs": {
        "RetrievalResultLocation$sharePointLocation": "<p>The SharePoint data source location.</p>"
      }
    },
    "RetrievalResultSqlLocation": {
      "base": "<p>Contains information about the SQL query used to retrieve the result.</p>",
      "refs": {
        "RetrievalResultLocation$sqlLocation": "<p>Specifies information about the SQL query used to retrieve the result.</p>"
      }
    },
    "RetrievalResultWebLocation": {
      "base": "<p>The web URL/URLs data source location.</p>",
      "refs": {
        "RetrievalResultLocation$webLocation": "<p>The web URL/URLs data source location.</p>"
      }
    },
    "RetrieveAndGenerateConfiguration": {
      "base": "<p>Contains details about the resource being queried.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>retrieveAndGenerateConfiguration</code> field</p> </li> </ul>",
      "refs": {
        "RetrieveAndGenerateRequest$retrieveAndGenerateConfiguration": "<p>Contains configurations for the knowledge base query and retrieval process. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p>",
        "RetrieveAndGenerateStreamRequest$retrieveAndGenerateConfiguration": "<p>Contains configurations for the knowledge base query and retrieval process. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Query configurations</a>.</p>"
      }
    },
    "RetrieveAndGenerateInput": {
      "base": "<p>Contains the query made to the knowledge base.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>input</code> field</p> </li> </ul>",
      "refs": {
        "RetrieveAndGenerateRequest$input": "<p>Contains the query to be made to the knowledge base.</p>",
        "RetrieveAndGenerateStreamRequest$input": "<p>Contains the query to be made to the knowledge base.</p>"
      }
    },
    "RetrieveAndGenerateInputTextString": {
      "base": null,
      "refs": {
        "RetrieveAndGenerateInput$text": "<p>The query made to the knowledge base.</p>"
      }
    },
    "RetrieveAndGenerateOutput": {
      "base": "<p>Contains the response generated from querying the knowledge base.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>output</code> field</p> </li> </ul>",
      "refs": {
        "RetrieveAndGenerateResponse$output": "<p>Contains the response generated from querying the knowledge base.</p>"
      }
    },
    "RetrieveAndGenerateOutputEvent": {
      "base": "<p>A retrieve and generate output event.</p>",
      "refs": {
        "RetrieveAndGenerateStreamResponseOutput$output": "<p>An output event.</p>"
      }
    },
    "RetrieveAndGenerateRequest": {
      "base": null,
      "refs": {
      }
    },
    "RetrieveAndGenerateResponse": {
      "base": null,
      "refs": {
      }
    },
    "RetrieveAndGenerateSessionConfiguration": {
      "base": "<p>Contains configuration about the session with the knowledge base.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax\">RetrieveAndGenerate request</a> – in the <code>sessionConfiguration</code> field</p> </li> </ul>",
      "refs": {
        "RetrieveAndGenerateRequest$sessionConfiguration": "<p>Contains details about the session with the knowledge base.</p>",
        "RetrieveAndGenerateStreamRequest$sessionConfiguration": "<p>Contains details about the session with the knowledge base.</p>"
      }
    },
    "RetrieveAndGenerateStreamRequest": {
      "base": null,
      "refs": {
      }
    },
    "RetrieveAndGenerateStreamResponse": {
      "base": null,
      "refs": {
      }
    },
    "RetrieveAndGenerateStreamResponseOutput": {
      "base": "<p>A retrieve and generate stream response output.</p>",
      "refs": {
        "RetrieveAndGenerateStreamResponse$stream": "<p>A stream of events from the model.</p>"
      }
    },
    "RetrieveAndGenerateType": {
      "base": null,
      "refs": {
        "RetrieveAndGenerateConfiguration$type": "<p>The type of resource that contains your data for retrieving information and generating responses.</p> <note> <p>If you choose to use <code>EXTERNAL_SOURCES</code>, then currently only Anthropic Claude 3 Sonnet models for knowledge bases are supported.</p> </note>"
      }
    },
    "RetrieveRequest": {
      "base": null,
      "refs": {
      }
    },
    "RetrieveResponse": {
      "base": null,
      "refs": {
      }
    },
    "RetrievedReference": {
      "base": "<p>Contains metadata about a source cited for the generated response.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>retrievedReferences</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>retrievedReferences</code> field</p> </li> </ul>",
      "refs": {
        "RetrievedReferences$member": null
      }
    },
    "RetrievedReferences": {
      "base": null,
      "refs": {
        "Citation$retrievedReferences": "<p>Contains metadata about the sources cited for the generated response.</p>",
        "CitationEvent$retrievedReferences": "<p>The retrieved references of the citation event.</p>",
        "KnowledgeBaseLookupOutput$retrievedReferences": "<p>Contains metadata about the sources cited for the generated response.</p>"
      }
    },
    "ReturnControlInvocationResults": {
      "base": null,
      "refs": {
        "InlineSessionState$returnControlInvocationResults": "<p> Contains information about the results from the action group invocation. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html\">Return control to the agent developer</a>. </p> <note> <p>If you include this field in the <code>sessionState</code> field, the <code>inputText</code> field will be ignored.</p> </note>",
        "ReturnControlResults$returnControlInvocationResults": "<p>The action invocation result.</p>",
        "SessionState$returnControlInvocationResults": "<p>Contains information about the results from the action group invocation. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html\">Return control to the agent developer</a> and <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html\">Control session context</a>.</p> <note> <p>If you include this field, the <code>inputText</code> field will be ignored.</p> </note>"
      }
    },
    "ReturnControlPayload": {
      "base": "<p>Contains information to return from the action group that the agent has predicted to invoke.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> </p> </li> </ul>",
      "refs": {
        "AgentCollaboratorOutputPayload$returnControlPayload": "<p>An action invocation result.</p>",
        "ResponseStream$returnControl": "<p>Contains the parameters and information that the agent elicited from the customer to carry out an action. This information is returned to the system and can be used in your own setup for fulfilling the action.</p>"
      }
    },
    "ReturnControlResults": {
      "base": "<p>An action invocation result.</p>",
      "refs": {
        "AgentCollaboratorInputPayload$returnControlResults": "<p>An action invocation result.</p>"
      }
    },
    "RoutingClassifierModelInvocationOutput": {
      "base": "<p>Invocation output from a routing classifier model.</p>",
      "refs": {
        "RoutingClassifierTrace$modelInvocationOutput": "<p>The classifier's model invocation output.</p>"
      }
    },
    "RoutingClassifierTrace": {
      "base": "<p>A trace for a routing classifier.</p>",
      "refs": {
        "Trace$routingClassifierTrace": "<p>A routing classifier's trace.</p>"
      }
    },
    "S3BucketName": {
      "base": null,
      "refs": {
        "S3Identifier$s3BucketName": "<p> The name of the S3 bucket. </p>"
      }
    },
    "S3Identifier": {
      "base": "<p> The identifier information for an Amazon S3 bucket. </p>",
      "refs": {
        "APISchema$s3": "<p> Contains details about the S3 object containing the OpenAPI schema for the action group. </p>"
      }
    },
    "S3Location": {
      "base": "<p>Information about the Amazon S3 bucket where the image is stored.</p>",
      "refs": {
        "ImageSource$s3Location": "<p>The path to the Amazon S3 bucket where the image is stored.</p>"
      }
    },
    "S3ObjectDoc": {
      "base": "<p>The unique wrapper object of the document from the S3 location.</p>",
      "refs": {
        "ExternalSource$s3Location": "<p>The S3 location of the external source wrapper object.</p>"
      }
    },
    "S3ObjectFile": {
      "base": "<p>Contains details of the s3 object where the source file is located.</p>",
      "refs": {
        "FileSource$s3Location": "<p>The s3 location of the files to attach.</p>"
      }
    },
    "S3ObjectKey": {
      "base": null,
      "refs": {
        "S3Identifier$s3ObjectKey": "<p> The S3 object key for the S3 resource. </p>"
      }
    },
    "S3Uri": {
      "base": null,
      "refs": {
        "S3Location$uri": "<p>The path to the Amazon S3 bucket where the image is stored.</p>",
        "S3ObjectDoc$uri": "<p>The file location of the S3 wrapper object.</p>",
        "S3ObjectFile$uri": "<p>The uri of the s3 object.</p>"
      }
    },
    "SearchType": {
      "base": null,
      "refs": {
        "KnowledgeBaseVectorSearchConfiguration$overrideSearchType": "<p>By default, Amazon Bedrock decides a search strategy for you. If you're using an Amazon OpenSearch Serverless vector store that contains a filterable text field, you can specify whether to query the knowledge base with a <code>HYBRID</code> search using both vector embeddings and raw text, or <code>SEMANTIC</code> search using only vector embeddings. For other vector store configurations, only <code>SEMANTIC</code> search is available. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-test.html\">Test a knowledge base</a>.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>The number of requests exceeds the service quota. Resubmit your request later.</p>",
      "refs": {
        "FlowResponseStream$serviceQuotaExceededException": "<p>The number of requests exceeds the service quota. Resubmit your request later.</p>",
        "InlineAgentResponseStream$serviceQuotaExceededException": "<p>The number of requests exceeds the service quota. Resubmit your request later.</p>",
        "ResponseStream$serviceQuotaExceededException": "<p>The number of requests exceeds the service quota. Resubmit your request later.</p>",
        "RetrieveAndGenerateStreamResponseOutput$serviceQuotaExceededException": "<p>Your request exceeds the service quota for your account. You can view your quotas at <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/gs-request-quota.html\">Viewing service quotas</a>. You can resubmit your request later.</p>"
      }
    },
    "SessionArn": {
      "base": null,
      "refs": {
        "CreateSessionResponse$sessionArn": "<p>The Amazon Resource Name (ARN) of the created session.</p>",
        "EndSessionResponse$sessionArn": "<p>The Amazon Resource Name (ARN) of the session you ended.</p>",
        "GetSessionResponse$sessionArn": "<p>The Amazon Resource Name (ARN) of the session.</p>",
        "SessionSummary$sessionArn": "<p>The Amazon Resource Name (ARN) of the session.</p>",
        "UpdateSessionResponse$sessionArn": "<p>The Amazon Resource Name (ARN) of the session that was updated.</p>"
      }
    },
    "SessionAttributesMap": {
      "base": null,
      "refs": {
        "InlineSessionState$sessionAttributes": "<p> Contains attributes that persist across a session and the values of those attributes. </p>",
        "SessionState$sessionAttributes": "<p>Contains attributes that persist across a session and the values of those attributes. If <code>sessionAttributes</code> are passed to a supervisor agent in <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-multi-agent-collaboration.html\">multi-agent collaboration</a>, it will be forwarded to all agent collaborators.</p>"
      }
    },
    "SessionId": {
      "base": null,
      "refs": {
        "DeleteAgentMemoryRequest$sessionId": "<p>The unique session identifier of the memory.</p>",
        "InlineAgentTracePart$sessionId": "<p>The unique identifier of the session with the agent.</p>",
        "InvokeAgentRequest$sessionId": "<p>The unique identifier of the session. Use the same value across requests to continue the same conversation.</p>",
        "InvokeAgentResponse$sessionId": "<p>The unique identifier of the session with the agent.</p>",
        "InvokeInlineAgentRequest$sessionId": "<p> The unique identifier of the session. Use the same value across requests to continue the same conversation. </p>",
        "InvokeInlineAgentResponse$sessionId": "<p> The unique identifier of the session with the agent. </p>",
        "MemorySessionSummary$sessionId": "<p>The identifier for this session.</p>",
        "RetrieveAndGenerateRequest$sessionId": "<p>The unique identifier of the session. When you first make a <code>RetrieveAndGenerate</code> request, Amazon Bedrock automatically generates this value. You must reuse this value for all subsequent requests in the same conversational session. This value allows Amazon Bedrock to maintain context and knowledge from previous interactions. You can't explicitly set the <code>sessionId</code> yourself.</p>",
        "RetrieveAndGenerateResponse$sessionId": "<p>The unique identifier of the session. When you first make a <code>RetrieveAndGenerate</code> request, Amazon Bedrock automatically generates this value. You must reuse this value for all subsequent requests in the same conversational session. This value allows Amazon Bedrock to maintain context and knowledge from previous interactions. You can't explicitly set the <code>sessionId</code> yourself.</p>",
        "RetrieveAndGenerateStreamRequest$sessionId": "<p>The unique identifier of the session. When you first make a <code>RetrieveAndGenerate</code> request, Amazon Bedrock automatically generates this value. You must reuse this value for all subsequent requests in the same conversational session. This value allows Amazon Bedrock to maintain context and knowledge from previous interactions. You can't explicitly set the <code>sessionId</code> yourself.</p>",
        "RetrieveAndGenerateStreamResponse$sessionId": "<p>The session ID.</p>",
        "TracePart$sessionId": "<p>The unique identifier of the session with the agent.</p>"
      }
    },
    "SessionIdentifier": {
      "base": null,
      "refs": {
        "CreateInvocationRequest$sessionIdentifier": "<p>The unique identifier for the associated session for the invocation. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN). </p>",
        "DeleteSessionRequest$sessionIdentifier": "<p>The unique identifier for the session to be deleted. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>",
        "EndSessionRequest$sessionIdentifier": "<p>The unique identifier for the session to end. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>",
        "GetInvocationStepRequest$sessionIdentifier": "<p>The unique identifier for the invocation step's associated session. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>",
        "GetSessionRequest$sessionIdentifier": "<p>A unique identifier for the session to retrieve. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>",
        "ListInvocationStepsRequest$sessionIdentifier": "<p>The unique identifier for the session associated with the invocation steps. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>",
        "ListInvocationsRequest$sessionIdentifier": "<p>The unique identifier for the session to list invocations for. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>",
        "PutInvocationStepRequest$sessionIdentifier": "<p>The unique identifier for the session to add the invocation step to. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>",
        "UpdateSessionRequest$sessionIdentifier": "<p>The unique identifier of the session to modify. You can specify either the session's <code>sessionId</code> or its Amazon Resource Name (ARN).</p>"
      }
    },
    "SessionMetadataKey": {
      "base": null,
      "refs": {
        "SessionMetadataMap$key": null
      }
    },
    "SessionMetadataMap": {
      "base": null,
      "refs": {
        "CreateSessionRequest$sessionMetadata": "<p>A map of key-value pairs containing attributes to be persisted across the session. For example, the user's ID, their language preference, and the type of device they are using.</p>",
        "GetSessionResponse$sessionMetadata": "<p>A map of key-value pairs containing attributes persisted across the session.</p>",
        "UpdateSessionRequest$sessionMetadata": "<p>A map of key-value pairs containing attributes to be persisted across the session. For example the user's ID, their language preference, and the type of device they are using.</p>"
      }
    },
    "SessionMetadataValue": {
      "base": null,
      "refs": {
        "SessionMetadataMap$value": null
      }
    },
    "SessionState": {
      "base": "<p>Contains parameters that specify various attributes that persist across a session or prompt. You can define session state attributes as key-value pairs when writing a <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-lambda.html\">Lambda function</a> for an action group or pass them when making an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request. Use session state attributes to control and provide conversational context for your agent and to help customize your agent's behavior. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html\">Control session context</a>.</p>",
      "refs": {
        "InvokeAgentRequest$sessionState": "<p>Contains parameters that specify various attributes of the session. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html\">Control session context</a>.</p> <note> <p>If you include <code>returnControlInvocationResults</code> in the <code>sessionState</code> field, the <code>inputText</code> field will be ignored.</p> </note>"
      }
    },
    "SessionStatus": {
      "base": null,
      "refs": {
        "CreateSessionResponse$sessionStatus": "<p>The current status of the session.</p>",
        "EndSessionResponse$sessionStatus": "<p>The current status of the session you ended.</p>",
        "GetSessionResponse$sessionStatus": "<p>The current status of the session.</p>",
        "SessionSummary$sessionStatus": "<p>The current status of the session.</p>",
        "UpdateSessionResponse$sessionStatus": "<p>The status of the session you updated.</p>"
      }
    },
    "SessionSummaries": {
      "base": null,
      "refs": {
        "ListSessionsResponse$sessionSummaries": "<p>A list of summaries for each session in your Amazon Web Services account.</p>"
      }
    },
    "SessionSummary": {
      "base": "<p>Contains details about a session. For more information about sessions, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html\">Store and retrieve conversation history and context with Amazon Bedrock sessions</a>.</p>",
      "refs": {
        "SessionSummaries$member": null
      }
    },
    "SessionTTL": {
      "base": null,
      "refs": {
        "Collaborator$idleSessionTTLInSeconds": "<p> The number of seconds for which the Amazon Bedrock keeps information about the user's conversation with the inline collaborator agent.</p> <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout. </p>",
        "InvokeInlineAgentRequest$idleSessionTTLInSeconds": "<p> The number of seconds for which the inline agent should maintain session information. After this time expires, the subsequent <code>InvokeInlineAgent</code> request begins a new session. </p> <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and the data provided before the timeout is deleted.</p>"
      }
    },
    "Source": {
      "base": null,
      "refs": {
        "RepromptResponse$source": "<p>Specifies what output is prompting the agent to reprompt the input.</p>"
      }
    },
    "Span": {
      "base": "<p>Contains information about where the text with a citation begins and ends in the generated output.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>span</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>span</code> field</p> </li> </ul>",
      "refs": {
        "TextResponsePart$span": "<p>Contains information about where the text with a citation begins and ends in the generated output.</p>"
      }
    },
    "SpanEndInteger": {
      "base": null,
      "refs": {
        "Span$end": "<p>Where the text with a citation ends in the generated output.</p>"
      }
    },
    "SpanStartInteger": {
      "base": null,
      "refs": {
        "Span$start": "<p>Where the text with a citation starts in the generated output.</p>"
      }
    },
    "StopSequences": {
      "base": null,
      "refs": {
        "InferenceConfiguration$stopSequences": "<p>A list of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.</p>"
      }
    },
    "StreamingConfigurations": {
      "base": "<p> Configurations for streaming.</p>",
      "refs": {
        "InvokeAgentRequest$streamingConfigurations": "<p> Specifies the configurations for streaming. </p> <note> <p>To use agent streaming, you need permissions to perform the <code>bedrock:InvokeModelWithResponseStream</code> action.</p> </note>",
        "InvokeInlineAgentRequest$streamingConfigurations": "<p> Specifies the configurations for streaming. </p> <note> <p>To use agent streaming, you need permissions to perform the <code>bedrock:InvokeModelWithResponseStream</code> action.</p> </note>"
      }
    },
    "StreamingConfigurationsApplyGuardrailIntervalInteger": {
      "base": null,
      "refs": {
        "StreamingConfigurations$applyGuardrailInterval": "<p> The guardrail interval to apply as response is generated. </p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "ActionGroupInvocationInput$invocationId": "<p>The unique identifier of the invocation. Only returned if the <code>executionType</code> is <code>RETURN_CONTROL</code>.</p>",
        "AgentCollaboratorInvocationInput$agentCollaboratorName": "<p>The collaborator's name.</p>",
        "AgentCollaboratorInvocationOutput$agentCollaboratorName": "<p>The output's agent collaborator name.</p>",
        "AnalyzePromptEvent$message": "<p>A message describing the analysis of the prompt.</p>",
        "ApiContentMap$key": null,
        "ApiInvocationInput$actionGroup": "<p>The action group that the API operation belongs to.</p>",
        "ApiInvocationInput$agentId": "<p>The agent's ID.</p>",
        "ApiInvocationInput$httpMethod": "<p>The HTTP method of the API operation.</p>",
        "ApiParameter$name": "<p>The name of the parameter.</p>",
        "ApiParameter$type": "<p>The data type for the parameter.</p>",
        "ApiParameter$value": "<p>The value of the parameter.</p>",
        "ApiResult$actionGroup": "<p>The action group that the API operation belongs to.</p>",
        "ApiResult$agentId": "<p>The agent's ID.</p>",
        "ApiResult$httpMethod": "<p>The HTTP method for the API operation.</p>",
        "CodeInterpreterInvocationInput$code": "<p>The code for the code interpreter to use.</p>",
        "CodeInterpreterInvocationOutput$executionError": "<p>Contains the error returned from code execution.</p>",
        "CodeInterpreterInvocationOutput$executionOutput": "<p>Contains the successful output returned from code execution</p>",
        "ContentBlock$text": "<p>The block's text.</p>",
        "ContentBody$body": "<p>The body of the API response.</p>",
        "ContentMap$key": null,
        "CustomOrchestrationTraceEvent$text": "<p> The text that prompted the event at this step. </p>",
        "Files$member": null,
        "FlowTraceCondition$conditionName": "<p>The name of the condition.</p>",
        "FunctionInvocationInput$actionGroup": "<p>The action group that the function belongs to.</p>",
        "FunctionInvocationInput$agentId": "<p>The agent's ID.</p>",
        "FunctionInvocationInput$function": "<p>The name of the function.</p>",
        "FunctionParameter$name": "<p>The name of the parameter.</p>",
        "FunctionParameter$type": "<p>The data type of the parameter.</p>",
        "FunctionParameter$value": "<p>The value of the parameter.</p>",
        "FunctionResult$actionGroup": "<p>The action group that the function belongs to.</p>",
        "FunctionResult$agentId": "<p>The agent's ID.</p>",
        "FunctionResult$function": "<p>The name of the function that was called.</p>",
        "GeneratedQuery$sql": "<p>An SQL query that corresponds to the natural language query.</p>",
        "GuardrailCustomWord$match": "<p>The match details for the custom word filter in the Guardrail.</p>",
        "GuardrailManagedWord$match": "<p>The match details for the managed word filter in the Guardrail.</p>",
        "GuardrailPiiEntityFilter$match": "<p>The match to settings in the Guardrail filter to identify and remove PII.</p>",
        "GuardrailRegexFilter$match": "<p>The match details for the regex filter used in the Guardrail.</p>",
        "GuardrailRegexFilter$name": "<p>The name details for the regex filter used in the Guardrail.</p>",
        "GuardrailRegexFilter$regex": "<p>The regex details for the regex filter used in the Guardrail.</p>",
        "GuardrailTopic$name": "<p>The name details on a specific topic in the Guardrail.</p>",
        "InlineAgentReturnControlPayload$invocationId": "<p>The identifier of the action group invocation. </p>",
        "InlineSessionState$invocationId": "<p> The identifier of the invocation of an action. This value must match the <code>invocationId</code> returned in the <code>InvokeInlineAgent</code> response for the action whose results are provided in the <code>returnControlInvocationResults</code> field. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html\">Return control to the agent developer</a>. </p>",
        "InputFile$name": "<p>The name of the source file.</p>",
        "InternalServerException$reason": "<p>The reason for the exception. If the reason is <code>BEDROCK_MODEL_INVOCATION_SERVICE_UNAVAILABLE</code>, the model invocation service is unavailable. Retry your request.</p>",
        "OutputFile$name": "<p>The name of the file containing response from code interpreter.</p>",
        "Parameter$name": "<p>The name of the parameter.</p>",
        "Parameter$type": "<p>The type of the parameter.</p>",
        "Parameter$value": "<p>The value of the parameter.</p>",
        "PromptSessionAttributesMap$key": null,
        "PromptSessionAttributesMap$value": null,
        "RawResponse$content": "<p>The foundation model's raw output content.</p>",
        "ReasoningTextBlock$signature": "<p>A hash of all the messages in the conversation to ensure that the content in the reasoning text block isn't tampered with. You must submit the signature in subsequent <code>Converse</code> requests, in addition to the previous messages. If the previous messages are tampered with, the response throws an error.</p>",
        "ReasoningTextBlock$text": "<p>Text describing the reasoning that the model used to return the content in the content block.</p>",
        "RepromptResponse$text": "<p>The text reprompting the input.</p>",
        "ResponseBody$key": null,
        "RetrievalResultConfluenceLocation$url": "<p>The Confluence host URL for the data source location.</p>",
        "RetrievalResultContent$byteContent": "<p>A data URI with base64-encoded content from the data source. The URI is in the following format: returned in the following format: <code>data:image/jpeg;base64,${base64-encoded string}</code>.</p>",
        "RetrievalResultContent$text": "<p>The cited text from the data source.</p>",
        "RetrievalResultContentColumn$columnName": "<p>The name of the column.</p>",
        "RetrievalResultContentColumn$columnValue": "<p>The value in the column.</p>",
        "RetrievalResultCustomDocumentLocation$id": "<p>The ID of the document.</p>",
        "RetrievalResultKendraDocumentLocation$uri": "<p>The document's uri.</p>",
        "RetrievalResultS3Location$uri": "<p>The S3 URI for the data source location.</p>",
        "RetrievalResultSalesforceLocation$url": "<p>The Salesforce host URL for the data source location.</p>",
        "RetrievalResultSharePointLocation$url": "<p>The SharePoint site URL for the data source location.</p>",
        "RetrievalResultSqlLocation$query": "<p>The SQL query used to retrieve the result.</p>",
        "RetrievalResultWebLocation$url": "<p>The web URL/URLs for the data source location.</p>",
        "RetrieveAndGenerateOutput$text": "<p>The response generated from querying the knowledge base.</p>",
        "RetrieveAndGenerateOutputEvent$text": "<p>A text response.</p>",
        "ReturnControlPayload$invocationId": "<p>The identifier of the action group invocation.</p>",
        "ReturnControlResults$invocationId": "<p>The action's invocation ID.</p>",
        "SessionAttributesMap$key": null,
        "SessionAttributesMap$value": null,
        "SessionState$invocationId": "<p>The identifier of the invocation of an action. This value must match the <code>invocationId</code> returned in the <code>InvokeAgent</code> response for the action whose results are provided in the <code>returnControlInvocationResults</code> field. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html\">Return control to the agent developer</a> and <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html\">Control session context</a>.</p>",
        "StopSequences$member": null,
        "TextResponsePart$text": "<p>The part of the generated text that contains a citation.</p>"
      }
    },
    "SummaryText": {
      "base": null,
      "refs": {
        "MemorySessionSummary$summaryText": "<p>The summarized text for this session.</p>"
      }
    },
    "SyntheticTimestamp_date_time": {
      "base": null,
      "refs": {
        "TracePart$eventTime": "<p> The time of the trace. </p>"
      }
    },
    "TagKey": {
      "base": "<p>Key of a tag</p>",
      "refs": {
        "TagKeyList$member": null,
        "TagsMap$key": null
      }
    },
    "TagKeyList": {
      "base": "<p>List of Tag Keys</p>",
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>A list of keys of the tags to remove from the resource.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": "<p>Value of a tag</p>",
      "refs": {
        "TagsMap$value": null
      }
    },
    "TaggableResourcesArn": {
      "base": "<p>ARN of Taggable resources: [session]</p>",
      "refs": {
        "ListTagsForResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource for which to list tags.</p>",
        "TagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource to tag.</p>",
        "UntagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource from which to remove tags.</p>"
      }
    },
    "TagsMap": {
      "base": "<p>A map of tag keys and values</p>",
      "refs": {
        "CreateSessionRequest$tags": "<p>Specify the key-value pairs for the tags that you want to attach to the session.</p>",
        "ListTagsForResourceResponse$tags": "<p>The key-value pairs for the tags associated with the resource.</p>",
        "TagResourceRequest$tags": "<p>An object containing key-value pairs that define the tags to attach to the resource.</p>"
      }
    },
    "Temperature": {
      "base": null,
      "refs": {
        "InferenceConfiguration$temperature": "<p>The likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.</p>",
        "TextInferenceConfig$temperature": "<p> Controls the random-ness of text generated by the language model, influencing how much the model sticks to the most predictable next words versus exploring more surprising options. A lower temperature value (e.g. 0.2 or 0.3) makes model outputs more deterministic or predictable, while a higher temperature (e.g. 0.8 or 0.9) makes the outputs more creative or unpredictable. </p>"
      }
    },
    "TextInferenceConfig": {
      "base": "<p>Configuration settings for text generation using a language model via the RetrieveAndGenerate operation. Includes parameters like temperature, top-p, maximum token count, and stop sequences. </p> <note> <p>The valid range of <code>maxTokens</code> depends on the accepted values for your chosen model's inference parameters. To see the inference parameters for your model, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters for foundation models.</a> </p> </note>",
      "refs": {
        "InferenceConfig$textInferenceConfig": "<p> Configuration settings specific to text generation while generating responses using RetrieveAndGenerate. </p>"
      }
    },
    "TextPrompt": {
      "base": "<p>Contains information about the text prompt to optimize.</p>",
      "refs": {
        "InputPrompt$textPrompt": "<p>Contains information about the text prompt to optimize.</p>",
        "OptimizedPrompt$textPrompt": "<p>Contains information about the text in the prompt that was optimized.</p>"
      }
    },
    "TextPromptTemplate": {
      "base": null,
      "refs": {
        "PromptTemplate$textPromptTemplate": "<p>The template for the prompt that's sent to the model for response generation. You can include prompt placeholders, which become replaced before the prompt is sent to the model to provide instructions and context to the model. In addition, you can include XML tags to delineate meaningful sections of the prompt template.</p> <p>For more information, see the following resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html#kb-test-config-sysprompt\">Knowledge base prompt templates</a> </p> </li> <li> <p> <a href=\"https://docs.anthropic.com/claude/docs/use-xml-tags\">Use XML tags with Anthropic Claude models</a> </p> </li> </ul>"
      }
    },
    "TextPromptTextString": {
      "base": null,
      "refs": {
        "TextPrompt$text": "<p>The text in the text prompt to optimize.</p>"
      }
    },
    "TextResponsePart": {
      "base": "<p>Contains the part of the generated text that contains a citation, alongside where it begins and ends.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax\">RetrieveAndGenerate response</a> – in the <code>textResponsePart</code> field</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax\">InvokeAgent response</a> – in the <code>textResponsePart</code> field</p> </li> </ul>",
      "refs": {
        "GeneratedResponsePart$textResponsePart": "<p>Contains metadata about a textual part of the generated response that is accompanied by a citation.</p>"
      }
    },
    "TextToSqlConfiguration": {
      "base": "<p>Contains configurations for transforming text to SQL.</p>",
      "refs": {
        "TransformationConfiguration$textToSqlConfiguration": "<p>Specifies configurations for transforming text to SQL.</p>"
      }
    },
    "TextToSqlConfigurationType": {
      "base": null,
      "refs": {
        "TextToSqlConfiguration$type": "<p>The type of resource to use in transformation.</p>"
      }
    },
    "TextToSqlKnowledgeBaseConfiguration": {
      "base": "<p>Contains configurations for a knowledge base to use in transformation.</p>",
      "refs": {
        "TextToSqlConfiguration$knowledgeBaseConfiguration": "<p>Specifies configurations for a knowledge base to use in transformation.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>The number of requests exceeds the limit. Resubmit your request later.</p>",
      "refs": {
        "FlowResponseStream$throttlingException": "<p>The number of requests exceeds the limit. Resubmit your request later.</p>",
        "InlineAgentResponseStream$throttlingException": "<p>The number of requests exceeds the limit. Resubmit your request later.</p>",
        "OptimizedPromptStream$throttlingException": "<p>Your request was throttled because of service-wide limitations. Resubmit your request later or in a different region. You can also purchase <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html\">Provisioned Throughput</a> to increase the rate or number of tokens you can process.</p>",
        "ResponseStream$throttlingException": "<p>The number of requests exceeds the limit. Resubmit your request later.</p>",
        "RetrieveAndGenerateStreamResponseOutput$throttlingException": "<p>Your request was denied due to exceeding the account quotas for <i>Amazon Bedrock</i>. For troubleshooting this error, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception\">ThrottlingException</a> in the Amazon Bedrock User Guide.</p>"
      }
    },
    "TopK": {
      "base": null,
      "refs": {
        "InferenceConfiguration$topK": "<p>While generating a response, the model determines the probability of the following token at each point of generation. The value that you set for <code>topK</code> is the number of most-likely candidates from which the model chooses the next token in the sequence. For example, if you set <code>topK</code> to 50, the model selects the next token from among the top 50 most likely choices.</p>"
      }
    },
    "TopP": {
      "base": null,
      "refs": {
        "InferenceConfiguration$topP": "<p>While generating a response, the model determines the probability of the following token at each point of generation. The value that you set for <code>Top P</code> determines the number of most-likely candidates from which the model chooses the next token in the sequence. For example, if you set <code>topP</code> to 0.8, the model only selects the next token from the top 80% of the probability distribution of next tokens.</p>",
        "TextInferenceConfig$topP": "<p> A probability distribution threshold which controls what the model considers for the set of possible next tokens. The model will only consider the top p% of the probability distribution when generating the next token. </p>"
      }
    },
    "Trace": {
      "base": "<p>Contains one part of the agent's reasoning process and results from calling API actions and querying knowledge bases. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement\">Trace enablement</a>.</p>",
      "refs": {
        "InlineAgentTracePart$trace": "<p>Contains one part of the agent's reasoning process and results from calling API actions and querying knowledge bases. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement\">Trace enablement</a>. </p>",
        "TracePart$trace": "<p>Contains one part of the agent's reasoning process and results from calling API actions and querying knowledge bases. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement\">Trace enablement</a>.</p>"
      }
    },
    "TraceId": {
      "base": null,
      "refs": {
        "CustomOrchestrationTrace$traceId": "<p> The unique identifier of the trace. </p>",
        "FailureTrace$traceId": "<p>The unique identifier of the trace.</p>",
        "GuardrailTrace$traceId": "<p>The details of the trace Id used in the Guardrail Trace.</p>",
        "InvocationInput$traceId": "<p>The unique identifier of the trace.</p>",
        "ModelInvocationInput$traceId": "<p>The unique identifier of the trace.</p>",
        "Observation$traceId": "<p>The unique identifier of the trace.</p>",
        "OrchestrationModelInvocationOutput$traceId": "<p>The unique identifier of the trace.</p>",
        "PostProcessingModelInvocationOutput$traceId": "<p>The unique identifier of the trace.</p>",
        "PreProcessingModelInvocationOutput$traceId": "<p>The unique identifier of the trace.</p>",
        "Rationale$traceId": "<p>The unique identifier of the trace step.</p>",
        "RoutingClassifierModelInvocationOutput$traceId": "<p>The invocation's trace ID.</p>"
      }
    },
    "TraceKnowledgeBaseId": {
      "base": null,
      "refs": {
        "KnowledgeBaseLookupInput$knowledgeBaseId": "<p>The unique identifier of the knowledge base to look up.</p>"
      }
    },
    "TracePart": {
      "base": "<p>Contains information about the agent and session, alongside the agent's reasoning process and results from calling API actions and querying knowledge bases and metadata about the trace. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement\">Trace enablement</a>.</p>",
      "refs": {
        "ResponseStream$trace": "<p>Contains information about the agent and session, alongside the agent's reasoning process and results from calling actions and querying knowledge bases and metadata about the trace. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/trace-events.html\">Trace events</a>.</p>"
      }
    },
    "TransformationConfiguration": {
      "base": "<p>Contains configurations for transforming the natural language query into SQL.</p>",
      "refs": {
        "GenerateQueryRequest$transformationConfiguration": "<p>Specifies configurations for transforming the natural language query into SQL.</p>"
      }
    },
    "Type": {
      "base": null,
      "refs": {
        "Observation$type": "<p>Specifies what kind of information the agent returns in the observation. The following values are possible.</p> <ul> <li> <p> <code>ACTION_GROUP</code> – The agent returns the result of an action group.</p> </li> <li> <p> <code>KNOWLEDGE_BASE</code> – The agent returns information from a knowledge base.</p> </li> <li> <p> <code>FINISH</code> – The agent returns a final response to the user with no follow-up.</p> </li> <li> <p> <code>ASK_USER</code> – The agent asks the user a question.</p> </li> <li> <p> <code>REPROMPT</code> – The agent prompts the user again for the same information.</p> </li> </ul>"
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "Usage": {
      "base": "<p>Contains information of the usage of the foundation model.</p>",
      "refs": {
        "Metadata$usage": "<p>Contains details of the foundation model usage.</p>"
      }
    },
    "Uuid": {
      "base": null,
      "refs": {
        "CreateInvocationRequest$invocationId": "<p>A unique identifier for the invocation in UUID format.</p>",
        "CreateInvocationResponse$invocationId": "<p>The unique identifier for the invocation.</p>",
        "CreateInvocationResponse$sessionId": "<p>The unique identifier for the session associated with the invocation.</p>",
        "CreateSessionResponse$sessionId": "<p>The unique identifier for the session.</p>",
        "EndSessionResponse$sessionId": "<p>The unique identifier of the session you ended.</p>",
        "GetInvocationStepRequest$invocationStepId": "<p>The unique identifier (in UUID format) for the specific invocation step to retrieve.</p>",
        "GetSessionResponse$sessionId": "<p>The unique identifier for the session in UUID format.</p>",
        "InvocationStep$invocationId": "<p>The unique identifier (in UUID format) for the invocation that includes the invocation step.</p>",
        "InvocationStep$invocationStepId": "<p>The unique identifier (in UUID format) for the invocation step.</p>",
        "InvocationStep$sessionId": "<p>The unique identifier of the session containing the invocation step.</p>",
        "InvocationStepSummary$invocationId": "<p>A unique identifier for the invocation in UUID format.</p>",
        "InvocationStepSummary$invocationStepId": "<p>The unique identifier (in UUID format) for the invocation step.</p>",
        "InvocationStepSummary$sessionId": "<p>The unique identifier for the session associated with the invocation step.</p>",
        "InvocationSummary$invocationId": "<p>A unique identifier for the invocation in UUID format.</p>",
        "InvocationSummary$sessionId": "<p>The unique identifier for the session associated with the invocation.</p>",
        "PutInvocationStepRequest$invocationStepId": "<p>The unique identifier of the invocation step in UUID format.</p>",
        "PutInvocationStepResponse$invocationStepId": "<p>The unique identifier of the invocation step in UUID format.</p>",
        "SessionSummary$sessionId": "<p>The unique identifier for the session.</p>",
        "UpdateSessionResponse$sessionId": "<p>The unique identifier of the session you updated.</p>"
      }
    },
    "ValidationException": {
      "base": "<p>Input validation failed. Check your request parameters and retry the request.</p>",
      "refs": {
        "FlowResponseStream$validationException": "<p>Input validation failed. Check your request parameters and retry the request.</p>",
        "InlineAgentResponseStream$validationException": "<p>Input validation failed. Check your request parameters and retry the request.</p>",
        "OptimizedPromptStream$validationException": "<p>Input validation failed. Check your request parameters and retry the request.</p>",
        "ResponseStream$validationException": "<p>Input validation failed. Check your request parameters and retry the request.</p>",
        "RetrieveAndGenerateStreamResponseOutput$validationException": "<p>The input fails to satisfy the constraints specified by <i>Amazon Bedrock</i>. For troubleshooting this error, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error\">ValidationError</a> in the Amazon Bedrock User Guide.</p>"
      }
    },
    "VectorSearchBedrockRerankingConfiguration": {
      "base": "<p>Contains configurations for reranking with an Amazon Bedrock reranker model.</p>",
      "refs": {
        "VectorSearchRerankingConfiguration$bedrockRerankingConfiguration": "<p>Contains configurations for an Amazon Bedrock reranker model.</p>"
      }
    },
    "VectorSearchBedrockRerankingConfigurationNumberOfRerankedResultsInteger": {
      "base": null,
      "refs": {
        "VectorSearchBedrockRerankingConfiguration$numberOfRerankedResults": "<p>The number of results to return after reranking.</p>"
      }
    },
    "VectorSearchBedrockRerankingModelConfiguration": {
      "base": "<p>Contains configurations for an Amazon Bedrock reranker model.</p>",
      "refs": {
        "VectorSearchBedrockRerankingConfiguration$modelConfiguration": "<p>Contains configurations for the reranker model.</p>"
      }
    },
    "VectorSearchRerankingConfiguration": {
      "base": "<p>Contains configurations for reranking the retrieved results.</p>",
      "refs": {
        "KnowledgeBaseVectorSearchConfiguration$rerankingConfiguration": "<p>Contains configurations for reranking the retrieved results. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/rerank.html\">Improve the relevance of query responses with a reranker model</a>.</p>"
      }
    },
    "VectorSearchRerankingConfigurationType": {
      "base": null,
      "refs": {
        "VectorSearchRerankingConfiguration$type": "<p>The type of reranker model.</p>"
      }
    },
    "Verb": {
      "base": null,
      "refs": {
        "ActionGroupInvocationInput$verb": "<p>The API method being used, based off the action group.</p>"
      }
    }
  }
}
