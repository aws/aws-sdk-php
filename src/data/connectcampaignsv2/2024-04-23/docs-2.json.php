<?php
// This file was auto-generated from sdk-root/src/data/connectcampaignsv2/2024-04-23/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>Provide APIs to create and manage Amazon Connect Campaigns.</p>', 'operations' => [ 'CreateCampaign' => '<p>Creates a campaign for the specified Amazon Connect account. This API is idempotent.</p>', 'DeleteCampaign' => '<p>Deletes a campaign from the specified Amazon Connect account.</p>', 'DeleteCampaignChannelSubtypeConfig' => '<p>Deletes the channel subtype config of a campaign. This API is idempotent.</p>', 'DeleteCampaignCommunicationLimits' => '<p>Deletes the communication limits config for a campaign. This API is idempotent.</p>', 'DeleteCampaignCommunicationTime' => '<p>Deletes the communication time config for a campaign. This API is idempotent.</p>', 'DeleteConnectInstanceConfig' => '<p>Deletes a connect instance config from the specified AWS account.</p>', 'DeleteConnectInstanceIntegration' => '<p>Delete the integration for the specified Amazon Connect instance.</p>', 'DeleteInstanceOnboardingJob' => '<p>Delete the Connect Campaigns onboarding job for the specified Amazon Connect instance.</p>', 'DescribeCampaign' => '<p>Describes the specific campaign.</p>', 'GetCampaignState' => '<p>Get state of a campaign for the specified Amazon Connect account.</p>', 'GetCampaignStateBatch' => '<p>Get state of campaigns for the specified Amazon Connect account.</p>', 'GetConnectInstanceConfig' => '<p>Get the specific Connect instance config.</p>', 'GetInstanceOnboardingJobStatus' => '<p>Get the specific instance onboarding job status.</p>', 'ListCampaigns' => '<p>Provides summary information about the campaigns under the specified Amazon Connect account.</p>', 'ListConnectInstanceIntegrations' => '<p>Provides summary information about the integration under the specified Connect instance.</p>', 'ListTagsForResource' => '<p>List tags for a resource.</p>', 'PauseCampaign' => '<p>Pauses a campaign for the specified Amazon Connect account.</p>', 'PutConnectInstanceIntegration' => '<p>Put or update the integration for the specified Amazon Connect instance.</p>', 'PutOutboundRequestBatch' => '<p>Creates outbound requests for the specified campaign Amazon Connect account. This API is idempotent.</p>', 'PutProfileOutboundRequestBatch' => '<p>Takes in a list of profile outbound requests to be placed as part of an outbound campaign. This API is idempotent.</p>', 'ResumeCampaign' => '<p>Stops a campaign for the specified Amazon Connect account.</p>', 'StartCampaign' => '<p>Starts a campaign for the specified Amazon Connect account.</p>', 'StartInstanceOnboardingJob' => '<p>Onboard the specific Amazon Connect instance to Connect Campaigns.</p>', 'StopCampaign' => '<p>Stops a campaign for the specified Amazon Connect account.</p>', 'TagResource' => '<p>Tag a resource.</p>', 'UntagResource' => '<p>Untag a resource.</p>', 'UpdateCampaignChannelSubtypeConfig' => '<p>Updates the channel subtype config of a campaign. This API is idempotent.</p>', 'UpdateCampaignCommunicationLimits' => '<p>Updates the communication limits config for a campaign. This API is idempotent.</p>', 'UpdateCampaignCommunicationTime' => '<p>Updates the communication time config for a campaign. This API is idempotent.</p>', 'UpdateCampaignFlowAssociation' => '<p>Updates the campaign flow associated with a campaign. This API is idempotent.</p>', 'UpdateCampaignName' => '<p>Updates the name of a campaign. This API is idempotent.</p>', 'UpdateCampaignSchedule' => '<p>Updates the schedule for a campaign. This API is idempotent.</p>', 'UpdateCampaignSource' => '<p>Updates the campaign source with a campaign. This API is idempotent.</p>', ], 'shapes' => [ 'AccessDeniedException' => [ 'base' => '<p>You do not have sufficient access to perform this action.</p>', 'refs' => [], ], 'AgentlessConfig' => [ 'base' => '<p>Agentless config</p>', 'refs' => [ 'EmailOutboundMode$agentless' => NULL, 'SmsOutboundMode$agentless' => NULL, 'TelephonyOutboundMode$agentless' => NULL, ], ], 'AnswerMachineDetectionConfig' => [ 'base' => '<p>Answering Machine Detection config</p>', 'refs' => [ 'TelephonyChannelSubtypeParameters$answerMachineDetectionConfig' => NULL, 'TelephonyOutboundConfig$answerMachineDetectionConfig' => NULL, ], ], 'Arn' => [ 'base' => '<p>Amazon Resource Names(ARN)</p>', 'refs' => [ 'Campaign$connectCampaignFlowArn' => NULL, 'CampaignSummary$connectCampaignFlowArn' => NULL, 'CreateCampaignRequest$connectCampaignFlowArn' => NULL, 'CustomerProfilesIntegrationConfig$domainArn' => NULL, 'CustomerProfilesIntegrationIdentifier$domainArn' => NULL, 'CustomerProfilesIntegrationSummary$domainArn' => NULL, 'EmailChannelSubtypeParameters$templateArn' => NULL, 'EmailOutboundConfig$wisdomTemplateArn' => NULL, 'EventTrigger$customerProfilesDomainArn' => NULL, 'ListTagsForResourceRequest$arn' => NULL, 'QConnectIntegrationConfig$knowledgeBaseArn' => NULL, 'QConnectIntegrationIdentifier$knowledgeBaseArn' => NULL, 'QConnectIntegrationSummary$knowledgeBaseArn' => NULL, 'SmsChannelSubtypeParameters$connectSourcePhoneNumberArn' => NULL, 'SmsChannelSubtypeParameters$templateArn' => NULL, 'SmsOutboundConfig$connectSourcePhoneNumberArn' => NULL, 'SmsOutboundConfig$wisdomTemplateArn' => NULL, 'Source$customerProfilesSegmentArn' => NULL, 'TagResourceRequest$arn' => NULL, 'UntagResourceRequest$arn' => NULL, 'UpdateCampaignFlowAssociationRequest$connectCampaignFlowArn' => NULL, ], ], 'AttributeName' => [ 'base' => '<p>The key of the attribute. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>', 'refs' => [ 'Attributes$key' => NULL, ], ], 'AttributeValue' => [ 'base' => '<p>The value of the attribute.</p>', 'refs' => [ 'Attributes$value' => NULL, ], ], 'Attributes' => [ 'base' => '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p>', 'refs' => [ 'EmailChannelSubtypeParameters$templateParameters' => NULL, 'SmsChannelSubtypeParameters$templateParameters' => NULL, 'TelephonyChannelSubtypeParameters$attributes' => NULL, ], ], 'BandwidthAllocation' => [ 'base' => '<p>The bandwidth allocation of a queue resource.</p>', 'refs' => [ 'PredictiveConfig$bandwidthAllocation' => NULL, 'ProgressiveConfig$bandwidthAllocation' => NULL, ], ], 'Boolean' => [ 'base' => NULL, 'refs' => [ 'AnswerMachineDetectionConfig$enableAnswerMachineDetection' => '<p>Enable or disable answering machine detection</p>', 'AnswerMachineDetectionConfig$awaitAnswerMachinePrompt' => '<p>Enable or disable await answer machine prompt</p>', ], ], 'Campaign' => [ 'base' => '<p>An Amazon Connect campaign.</p>', 'refs' => [ 'DescribeCampaignResponse$campaign' => NULL, ], ], 'CampaignArn' => [ 'base' => '<p>The resource name of an Amazon Connect campaign.</p>', 'refs' => [ 'Campaign$arn' => NULL, 'CampaignSummary$arn' => NULL, 'CreateCampaignResponse$arn' => NULL, ], ], 'CampaignDeletionPolicy' => [ 'base' => '<p>Enumeration of the policies to enact on existing campaigns during instance config deletion</p>', 'refs' => [ 'DeleteConnectInstanceConfigRequest$campaignDeletionPolicy' => NULL, ], ], 'CampaignFilters' => [ 'base' => '<p>Filter model by type</p>', 'refs' => [ 'ListCampaignsRequest$filters' => NULL, ], ], 'CampaignId' => [ 'base' => '<p>Identifier representing a Campaign</p>', 'refs' => [ 'Campaign$id' => NULL, 'CampaignSummary$id' => NULL, 'CreateCampaignResponse$id' => NULL, 'DeleteCampaignChannelSubtypeConfigRequest$id' => NULL, 'DeleteCampaignCommunicationLimitsRequest$id' => NULL, 'DeleteCampaignCommunicationTimeRequest$id' => NULL, 'DeleteCampaignRequest$id' => NULL, 'DescribeCampaignRequest$id' => NULL, 'FailedCampaignStateResponse$campaignId' => NULL, 'GetCampaignStateBatchRequestCampaignIdsList$member' => NULL, 'GetCampaignStateRequest$id' => NULL, 'PauseCampaignRequest$id' => NULL, 'PutOutboundRequestBatchRequest$id' => NULL, 'PutProfileOutboundRequestBatchRequest$id' => NULL, 'ResumeCampaignRequest$id' => NULL, 'StartCampaignRequest$id' => NULL, 'StopCampaignRequest$id' => NULL, 'SuccessfulCampaignStateResponse$campaignId' => NULL, 'UpdateCampaignChannelSubtypeConfigRequest$id' => NULL, 'UpdateCampaignCommunicationLimitsRequest$id' => NULL, 'UpdateCampaignCommunicationTimeRequest$id' => NULL, 'UpdateCampaignFlowAssociationRequest$id' => NULL, 'UpdateCampaignNameRequest$id' => NULL, 'UpdateCampaignScheduleRequest$id' => NULL, 'UpdateCampaignSourceRequest$id' => NULL, ], ], 'CampaignName' => [ 'base' => '<p>The name of an Amazon Connect Campaign name.</p>', 'refs' => [ 'Campaign$name' => NULL, 'CampaignSummary$name' => NULL, 'CreateCampaignRequest$name' => NULL, 'UpdateCampaignNameRequest$name' => NULL, ], ], 'CampaignState' => [ 'base' => '<p>State of a campaign</p>', 'refs' => [ 'GetCampaignStateResponse$state' => NULL, 'InvalidCampaignStateException$state' => NULL, 'SuccessfulCampaignStateResponse$state' => NULL, ], ], 'CampaignSummary' => [ 'base' => '<p>An Amazon Connect campaign summary.</p>', 'refs' => [ 'CampaignSummaryList$member' => NULL, ], ], 'CampaignSummaryList' => [ 'base' => '<p>A list of Amazon Connect campaigns.</p>', 'refs' => [ 'ListCampaignsResponse$campaignSummaryList' => NULL, ], ], 'Capacity' => [ 'base' => '<p>Allocates outbound capacity for the specific channel subtype of this campaign between multiple active campaigns</p>', 'refs' => [ 'EmailChannelSubtypeConfig$capacity' => NULL, 'SmsChannelSubtypeConfig$capacity' => NULL, 'TelephonyChannelSubtypeConfig$capacity' => NULL, ], ], 'ChannelSubtype' => [ 'base' => '<p>The type of campaign channel subtype.</p>', 'refs' => [ 'ChannelSubtypeList$member' => NULL, 'DeleteCampaignChannelSubtypeConfigRequest$channelSubtype' => NULL, ], ], 'ChannelSubtypeConfig' => [ 'base' => '<p>Campaign Channel Subtype config</p>', 'refs' => [ 'Campaign$channelSubtypeConfig' => NULL, 'CreateCampaignRequest$channelSubtypeConfig' => NULL, 'UpdateCampaignChannelSubtypeConfigRequest$channelSubtypeConfig' => NULL, ], ], 'ChannelSubtypeList' => [ 'base' => '<p>Channel subtype list</p>', 'refs' => [ 'CampaignSummary$channelSubtypes' => NULL, ], ], 'ChannelSubtypeParameters' => [ 'base' => '<p>ChannelSubtypeParameters for an outbound request</p>', 'refs' => [ 'OutboundRequest$channelSubtypeParameters' => NULL, ], ], 'ClientToken' => [ 'base' => '<p>Client provided parameter used for idempotency. Its value must be unique for each request.</p>', 'refs' => [ 'FailedProfileOutboundRequest$clientToken' => NULL, 'FailedRequest$clientToken' => NULL, 'OutboundRequest$clientToken' => NULL, 'ProfileOutboundRequest$clientToken' => NULL, 'SuccessfulProfileOutboundRequest$clientToken' => NULL, 'SuccessfulRequest$clientToken' => NULL, ], ], 'CommunicationLimit' => [ 'base' => '<p>Communication Limit</p>', 'refs' => [ 'CommunicationLimitList$member' => NULL, ], ], 'CommunicationLimitFrequencyInteger' => [ 'base' => NULL, 'refs' => [ 'CommunicationLimit$frequency' => '<p>The number of days to consider with regards to this limit.</p>', ], ], 'CommunicationLimitList' => [ 'base' => '<p>List of communication limit</p>', 'refs' => [ 'CommunicationLimits$communicationLimitsList' => NULL, ], ], 'CommunicationLimitMaxCountPerRecipientInteger' => [ 'base' => NULL, 'refs' => [ 'CommunicationLimit$maxCountPerRecipient' => '<p>Maximum number of contacts allowed for a given target within the given frequency.</p>', ], ], 'CommunicationLimitTimeUnit' => [ 'base' => '<p>The communication limit time unit.</p>', 'refs' => [ 'CommunicationLimit$unit' => NULL, ], ], 'CommunicationLimits' => [ 'base' => '<p>Communication limits</p>', 'refs' => [ 'CommunicationLimitsConfig$allChannelSubtypes' => NULL, ], ], 'CommunicationLimitsConfig' => [ 'base' => '<p>Communication limits config</p>', 'refs' => [ 'Campaign$communicationLimitsOverride' => NULL, 'CreateCampaignRequest$communicationLimitsOverride' => NULL, 'UpdateCampaignCommunicationLimitsRequest$communicationLimitsOverride' => NULL, ], ], 'CommunicationLimitsConfigType' => [ 'base' => '<p>The type of campaign communication limits config.</p>', 'refs' => [ 'DeleteCampaignCommunicationLimitsRequest$config' => NULL, ], ], 'CommunicationTimeConfig' => [ 'base' => '<p>Campaign communication time config</p>', 'refs' => [ 'Campaign$communicationTimeConfig' => NULL, 'CreateCampaignRequest$communicationTimeConfig' => NULL, 'UpdateCampaignCommunicationTimeRequest$communicationTimeConfig' => NULL, ], ], 'CommunicationTimeConfigType' => [ 'base' => '<p>The type of campaign communication time config</p>', 'refs' => [ 'DeleteCampaignCommunicationTimeRequest$config' => NULL, ], ], 'ConflictException' => [ 'base' => '<p>The request could not be processed because of conflict in the current state of the resource.</p>', 'refs' => [], ], 'ContactFlowId' => [ 'base' => '<p>The identifier of the contact flow for the outbound call.</p>', 'refs' => [ 'TelephonyOutboundConfig$connectContactFlowId' => NULL, ], ], 'CreateCampaignRequest' => [ 'base' => '<p>The request for CreateCampaign API.</p>', 'refs' => [], ], 'CreateCampaignResponse' => [ 'base' => '<p>The response for Create Campaign API</p>', 'refs' => [], ], 'CustomerProfilesIntegrationConfig' => [ 'base' => '<p>Customer Profiles integration config</p>', 'refs' => [ 'IntegrationConfig$customerProfiles' => NULL, ], ], 'CustomerProfilesIntegrationIdentifier' => [ 'base' => '<p>Customer Profiles integration identifier</p>', 'refs' => [ 'IntegrationIdentifier$customerProfiles' => NULL, ], ], 'CustomerProfilesIntegrationSummary' => [ 'base' => '<p>Customer Profiles integration summary</p>', 'refs' => [ 'IntegrationSummary$customerProfiles' => NULL, ], ], 'DailyHours' => [ 'base' => '<p>Daily Hours map</p>', 'refs' => [ 'OpenHours$dailyHours' => NULL, ], ], 'DayOfWeek' => [ 'base' => '<p>Day of week enum</p>', 'refs' => [ 'DailyHours$key' => NULL, ], ], 'DeleteCampaignChannelSubtypeConfigRequest' => [ 'base' => '<p>The request for DeleteCampaignChannelSubtypeConfig API.</p>', 'refs' => [], ], 'DeleteCampaignCommunicationLimitsRequest' => [ 'base' => '<p>The request for DeleteCampaignCommunicationLimits API.</p>', 'refs' => [], ], 'DeleteCampaignCommunicationTimeRequest' => [ 'base' => '<p>The request for DeleteCampaignCommunicationTime API.</p>', 'refs' => [], ], 'DeleteCampaignRequest' => [ 'base' => '<p>The request for DeleteCampaign API.</p>', 'refs' => [], ], 'DeleteConnectInstanceConfigRequest' => [ 'base' => '<p>The request for DeleteConnectInstanceConfig API.</p>', 'refs' => [], ], 'DeleteConnectInstanceIntegrationRequest' => [ 'base' => '<p>The request for DeleteConnectInstanceIntegration API.</p>', 'refs' => [], ], 'DeleteInstanceOnboardingJobRequest' => [ 'base' => '<p>The request for DeleteInstanceOnboardingJob API.</p>', 'refs' => [], ], 'DescribeCampaignRequest' => [ 'base' => '<p>The request for DescribeCampaign API.</p>', 'refs' => [], ], 'DescribeCampaignResponse' => [ 'base' => '<p>The response for DescribeCampaign API.</p>', 'refs' => [], ], 'DestinationPhoneNumber' => [ 'base' => '<p>The phone number of the customer, in E.164 format.</p>', 'refs' => [ 'SmsChannelSubtypeParameters$destinationPhoneNumber' => NULL, 'TelephonyChannelSubtypeParameters$destinationPhoneNumber' => NULL, ], ], 'DialRequestId' => [ 'base' => '<p>Identifier representing a Dial request</p>', 'refs' => [ 'FailedRequest$id' => NULL, 'SuccessfulRequest$id' => NULL, ], ], 'EmailAddress' => [ 'base' => '<p>Source/Destination Email address used for Email messages</p>', 'refs' => [ 'EmailChannelSubtypeParameters$destinationEmailAddress' => NULL, 'EmailChannelSubtypeParameters$connectSourceEmailAddress' => NULL, 'EmailOutboundConfig$connectSourceEmailAddress' => NULL, ], ], 'EmailChannelSubtypeConfig' => [ 'base' => '<p>Email Channel Subtype config</p>', 'refs' => [ 'ChannelSubtypeConfig$email' => NULL, ], ], 'EmailChannelSubtypeParameters' => [ 'base' => '<p>Parameters for the Email Channel Subtype</p>', 'refs' => [ 'ChannelSubtypeParameters$email' => NULL, ], ], 'EmailDisplayName' => [ 'base' => '<p>Display name for Email Address</p>', 'refs' => [ 'EmailOutboundConfig$sourceEmailAddressDisplayName' => NULL, ], ], 'EmailOutboundConfig' => [ 'base' => '<p>Default Email Outbound config</p>', 'refs' => [ 'EmailChannelSubtypeConfig$defaultOutboundConfig' => NULL, ], ], 'EmailOutboundMode' => [ 'base' => '<p>Email Outbound Mode</p>', 'refs' => [ 'EmailChannelSubtypeConfig$outboundMode' => NULL, ], ], 'Enabled' => [ 'base' => '<p>Boolean to indicate if custom encryption has been enabled.</p>', 'refs' => [ 'EncryptionConfig$enabled' => NULL, ], ], 'EncryptionConfig' => [ 'base' => '<p>Encryption config for Connect Instance. Note that sensitive data will always be encrypted. If disabled, service will perform encryption with its own key. If enabled, a KMS key id needs to be provided and KMS charges will apply. KMS is only type supported</p>', 'refs' => [ 'InstanceConfig$encryptionConfig' => NULL, 'StartInstanceOnboardingJobRequest$encryptionConfig' => NULL, ], ], 'EncryptionKey' => [ 'base' => '<p>KMS key id/arn for encryption config.</p>', 'refs' => [ 'EncryptionConfig$keyArn' => NULL, ], ], 'EncryptionType' => [ 'base' => '<p>Server-side encryption type.</p>', 'refs' => [ 'EncryptionConfig$encryptionType' => NULL, ], ], 'EventTrigger' => [ 'base' => '<p>Event trigger of the campaign</p>', 'refs' => [ 'Source$eventTrigger' => NULL, ], ], 'EventType' => [ 'base' => '<p>Enumeration of Customer Profiles event type</p>', 'refs' => [ 'ObjectTypeNamesMap$key' => NULL, ], ], 'FailedCampaignStateResponse' => [ 'base' => '<p>Failed response of campaign state</p>', 'refs' => [ 'FailedCampaignStateResponseList$member' => NULL, ], ], 'FailedCampaignStateResponseList' => [ 'base' => '<p>List of failed requests of campaign state</p>', 'refs' => [ 'GetCampaignStateBatchResponse$failedRequests' => NULL, ], ], 'FailedProfileOutboundRequest' => [ 'base' => '<p>Failure details for a profile outbound request</p>', 'refs' => [ 'FailedProfileOutboundRequestList$member' => NULL, ], ], 'FailedProfileOutboundRequestList' => [ 'base' => '<p>List of failed profile outbound requests</p>', 'refs' => [ 'PutProfileOutboundRequestBatchResponse$failedRequests' => NULL, ], ], 'FailedRequest' => [ 'base' => '<p>A failed request identified by the unique client token.</p>', 'refs' => [ 'FailedRequestList$member' => NULL, ], ], 'FailedRequestList' => [ 'base' => '<p>A list of failed requests.</p>', 'refs' => [ 'PutOutboundRequestBatchResponse$failedRequests' => NULL, ], ], 'FailureCode' => [ 'base' => '<p>A predefined code indicating the error that caused the failure.</p>', 'refs' => [ 'FailedRequest$failureCode' => NULL, ], ], 'GetCampaignStateBatchFailureCode' => [ 'base' => '<p>A predefined code indicating the error that caused the failure in getting state of campaigns</p>', 'refs' => [ 'FailedCampaignStateResponse$failureCode' => NULL, ], ], 'GetCampaignStateBatchRequest' => [ 'base' => '<p>The request for GetCampaignStateBatch API.</p>', 'refs' => [], ], 'GetCampaignStateBatchRequestCampaignIdsList' => [ 'base' => '<p>List of CampaignId</p>', 'refs' => [ 'GetCampaignStateBatchRequest$campaignIds' => NULL, ], ], 'GetCampaignStateBatchResponse' => [ 'base' => '<p>The response for GetCampaignStateBatch API.</p>', 'refs' => [], ], 'GetCampaignStateRequest' => [ 'base' => '<p>The request for GetCampaignState API.</p>', 'refs' => [], ], 'GetCampaignStateResponse' => [ 'base' => '<p>The response for GetCampaignState API.</p>', 'refs' => [], ], 'GetConnectInstanceConfigRequest' => [ 'base' => '<p>The request for GetConnectInstanceConfig API.</p>', 'refs' => [], ], 'GetConnectInstanceConfigResponse' => [ 'base' => '<p>The response for GetConnectInstanceConfig API.</p>', 'refs' => [], ], 'GetInstanceOnboardingJobStatusRequest' => [ 'base' => '<p>The request for GetInstanceOnboardingJobStatus API.</p>', 'refs' => [], ], 'GetInstanceOnboardingJobStatusResponse' => [ 'base' => '<p>The response for GetInstanceOnboardingJobStatus API.</p>', 'refs' => [], ], 'InstanceConfig' => [ 'base' => '<p>Instance config object</p>', 'refs' => [ 'GetConnectInstanceConfigResponse$connectInstanceConfig' => NULL, ], ], 'InstanceId' => [ 'base' => '<p>Amazon Connect Instance Id</p>', 'refs' => [ 'Campaign$connectInstanceId' => NULL, 'CampaignSummary$connectInstanceId' => NULL, 'CreateCampaignRequest$connectInstanceId' => NULL, 'DeleteConnectInstanceConfigRequest$connectInstanceId' => NULL, 'DeleteConnectInstanceIntegrationRequest$connectInstanceId' => NULL, 'DeleteInstanceOnboardingJobRequest$connectInstanceId' => NULL, 'GetConnectInstanceConfigRequest$connectInstanceId' => NULL, 'GetInstanceOnboardingJobStatusRequest$connectInstanceId' => NULL, 'InstanceConfig$connectInstanceId' => NULL, 'InstanceIdFilter$value' => NULL, 'InstanceOnboardingJobStatus$connectInstanceId' => NULL, 'ListConnectInstanceIntegrationsRequest$connectInstanceId' => NULL, 'PutConnectInstanceIntegrationRequest$connectInstanceId' => NULL, 'StartInstanceOnboardingJobRequest$connectInstanceId' => NULL, ], ], 'InstanceIdFilter' => [ 'base' => '<p>Connect instance identifier filter</p>', 'refs' => [ 'CampaignFilters$instanceIdFilter' => NULL, ], ], 'InstanceIdFilterOperator' => [ 'base' => '<p>Operators for Connect instance identifier filter</p>', 'refs' => [ 'InstanceIdFilter$operator' => NULL, ], ], 'InstanceOnboardingJobFailureCode' => [ 'base' => '<p>Enumeration of the possible failure codes for instance onboarding job</p>', 'refs' => [ 'InstanceOnboardingJobStatus$failureCode' => NULL, ], ], 'InstanceOnboardingJobStatus' => [ 'base' => '<p>Instance onboarding job status object</p>', 'refs' => [ 'GetInstanceOnboardingJobStatusResponse$connectInstanceOnboardingJobStatus' => NULL, 'StartInstanceOnboardingJobResponse$connectInstanceOnboardingJobStatus' => NULL, ], ], 'InstanceOnboardingJobStatusCode' => [ 'base' => '<p>Enumeration of the possible states for instance onboarding job</p>', 'refs' => [ 'InstanceOnboardingJobStatus$status' => NULL, ], ], 'IntegrationConfig' => [ 'base' => '<p>Integration config for Connect Instance</p>', 'refs' => [ 'PutConnectInstanceIntegrationRequest$integrationConfig' => NULL, ], ], 'IntegrationIdentifier' => [ 'base' => '<p>Integration identifier for Connect instance</p>', 'refs' => [ 'DeleteConnectInstanceIntegrationRequest$integrationIdentifier' => NULL, ], ], 'IntegrationSummary' => [ 'base' => '<p>Integration summary for Connect instance.</p>', 'refs' => [ 'IntegrationSummaryList$member' => NULL, ], ], 'IntegrationSummaryList' => [ 'base' => '<p>A list of Amazon Connect Instance Integrations.</p>', 'refs' => [ 'ListConnectInstanceIntegrationsResponse$integrationSummaryList' => NULL, ], ], 'InternalServerException' => [ 'base' => '<p>Request processing failed because of an error or failure with the service.</p>', 'refs' => [], ], 'InvalidCampaignStateException' => [ 'base' => '<p>The request could not be processed because of conflict in the current state of the campaign.</p>', 'refs' => [], ], 'InvalidStateException' => [ 'base' => '<p>The request could not be processed because of conflict in the current state.</p>', 'refs' => [], ], 'Iso8601Date' => [ 'base' => '<p>Date in ISO 8601 format, e.g. 2024-01-01</p>', 'refs' => [ 'RestrictedPeriod$startDate' => NULL, 'RestrictedPeriod$endDate' => NULL, ], ], 'Iso8601Duration' => [ 'base' => '<p>Time duration in ISO 8601 format</p>', 'refs' => [ 'Schedule$refreshFrequency' => NULL, ], ], 'Iso8601Time' => [ 'base' => '<p>Time in ISO 8601 format, e.g. T23:11</p>', 'refs' => [ 'TimeRange$startTime' => NULL, 'TimeRange$endTime' => NULL, ], ], 'ListCampaignsRequest' => [ 'base' => '<p>The request for ListCampaigns API.</p>', 'refs' => [], ], 'ListCampaignsResponse' => [ 'base' => '<p>The response for ListCampaigns API.</p>', 'refs' => [], ], 'ListConnectInstanceIntegrationsRequest' => [ 'base' => '<p>The request for ListConnectInstanceIntegrations API.</p>', 'refs' => [], ], 'ListConnectInstanceIntegrationsResponse' => [ 'base' => '<p>The response for ListConnectInstanceIntegrations API.</p>', 'refs' => [], ], 'ListTagsForResourceRequest' => [ 'base' => '<p>The request for ListTagsForResource API.</p>', 'refs' => [], ], 'ListTagsForResourceResponse' => [ 'base' => '<p>The request for ListTagsForResource API.</p>', 'refs' => [], ], 'LocalTimeZoneConfig' => [ 'base' => '<p>Local time zone config</p>', 'refs' => [ 'CommunicationTimeConfig$localTimeZoneConfig' => NULL, ], ], 'LocalTimeZoneDetection' => [ 'base' => '<p>Local TimeZone Detection method list</p>', 'refs' => [ 'LocalTimeZoneConfig$localTimeZoneDetection' => NULL, ], ], 'LocalTimeZoneDetectionType' => [ 'base' => '<p>Local TimeZone Detection method.</p>', 'refs' => [ 'LocalTimeZoneDetection$member' => NULL, ], ], 'MaxResults' => [ 'base' => '<p>The maximum number of results to return per page.</p>', 'refs' => [ 'ListCampaignsRequest$maxResults' => NULL, 'ListConnectInstanceIntegrationsRequest$maxResults' => NULL, ], ], 'NextToken' => [ 'base' => '<p>The token for the next set of results.</p>', 'refs' => [ 'ListCampaignsRequest$nextToken' => NULL, 'ListCampaignsResponse$nextToken' => NULL, 'ListConnectInstanceIntegrationsRequest$nextToken' => NULL, 'ListConnectInstanceIntegrationsResponse$nextToken' => NULL, ], ], 'ObjectTypeName' => [ 'base' => '<p>Object type name</p>', 'refs' => [ 'ObjectTypeNamesMap$value' => NULL, ], ], 'ObjectTypeNamesMap' => [ 'base' => '<p>Object type names map.</p>', 'refs' => [ 'CustomerProfilesIntegrationConfig$objectTypeNames' => NULL, 'CustomerProfilesIntegrationSummary$objectTypeNames' => NULL, ], ], 'OpenHours' => [ 'base' => '<p>Open Hours config</p>', 'refs' => [ 'TimeWindow$openHours' => NULL, ], ], 'OutboundRequest' => [ 'base' => '<p>An outbound request for a campaign.</p>', 'refs' => [ 'OutboundRequestList$member' => NULL, ], ], 'OutboundRequestList' => [ 'base' => '<p>A list of outbound requests.</p>', 'refs' => [ 'PutOutboundRequestBatchRequest$outboundRequests' => NULL, ], ], 'PauseCampaignRequest' => [ 'base' => '<p>The request for PauseCampaign API.</p>', 'refs' => [], ], 'PredictiveConfig' => [ 'base' => '<p>Predictive config</p>', 'refs' => [ 'TelephonyOutboundMode$predictive' => NULL, ], ], 'ProfileId' => [ 'base' => '<p>Identifier of the customer profile</p>', 'refs' => [ 'ProfileOutboundRequest$profileId' => NULL, ], ], 'ProfileOutboundRequest' => [ 'base' => '<p>Information about a profile outbound request</p>', 'refs' => [ 'ProfileOutboundRequestList$member' => NULL, ], ], 'ProfileOutboundRequestFailureCode' => [ 'base' => '<p>Predefined code indicating the error that caused the failure</p>', 'refs' => [ 'FailedProfileOutboundRequest$failureCode' => NULL, ], ], 'ProfileOutboundRequestId' => [ 'base' => '<p>Identifier of the profile outbound request</p>', 'refs' => [ 'FailedProfileOutboundRequest$id' => NULL, 'SuccessfulProfileOutboundRequest$id' => NULL, ], ], 'ProfileOutboundRequestList' => [ 'base' => '<p>List of profile outbound requests</p>', 'refs' => [ 'PutProfileOutboundRequestBatchRequest$profileOutboundRequests' => NULL, ], ], 'ProgressiveConfig' => [ 'base' => '<p>Progressive config</p>', 'refs' => [ 'TelephonyOutboundMode$progressive' => NULL, ], ], 'PutConnectInstanceIntegrationRequest' => [ 'base' => '<p>The request for PutConnectInstanceIntegration API.</p>', 'refs' => [], ], 'PutOutboundRequestBatchRequest' => [ 'base' => '<p>The request for PutOutboundRequestBatch API.</p>', 'refs' => [], ], 'PutOutboundRequestBatchResponse' => [ 'base' => '<p>The response for PutOutboundRequestBatch API.</p>', 'refs' => [], ], 'PutProfileOutboundRequestBatchRequest' => [ 'base' => '<p>The request for PutProfileOutboundRequestBatch API</p>', 'refs' => [], ], 'PutProfileOutboundRequestBatchResponse' => [ 'base' => '<p>The response for PutProfileOutboundRequestBatch API</p>', 'refs' => [], ], 'QConnectIntegrationConfig' => [ 'base' => '<p>Q Connect integration config</p>', 'refs' => [ 'IntegrationConfig$qConnect' => NULL, ], ], 'QConnectIntegrationIdentifier' => [ 'base' => '<p>Q Connect integration identifier</p>', 'refs' => [ 'IntegrationIdentifier$qConnect' => NULL, ], ], 'QConnectIntegrationSummary' => [ 'base' => '<p>Q Connect integration summary</p>', 'refs' => [ 'IntegrationSummary$qConnect' => NULL, ], ], 'QueueId' => [ 'base' => '<p>The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.</p>', 'refs' => [ 'TelephonyChannelSubtypeConfig$connectQueueId' => NULL, ], ], 'ResourceNotFoundException' => [ 'base' => '<p>The specified resource was not found.</p>', 'refs' => [], ], 'RestrictedPeriod' => [ 'base' => '<p>Restricted period</p>', 'refs' => [ 'RestrictedPeriodList$member' => NULL, ], ], 'RestrictedPeriodList' => [ 'base' => '<p>List of restricted period</p>', 'refs' => [ 'RestrictedPeriods$restrictedPeriodList' => NULL, ], ], 'RestrictedPeriodName' => [ 'base' => '<p>The name of a restricted period.</p>', 'refs' => [ 'RestrictedPeriod$name' => NULL, ], ], 'RestrictedPeriods' => [ 'base' => '<p>Restricted period config</p>', 'refs' => [ 'TimeWindow$restrictedPeriods' => NULL, ], ], 'ResumeCampaignRequest' => [ 'base' => '<p>The request for ResumeCampaign API.</p>', 'refs' => [], ], 'Schedule' => [ 'base' => '<p>Campaign schedule</p>', 'refs' => [ 'Campaign$schedule' => NULL, 'CampaignSummary$schedule' => NULL, 'CreateCampaignRequest$schedule' => NULL, 'UpdateCampaignScheduleRequest$schedule' => NULL, ], ], 'ServiceLinkedRoleArn' => [ 'base' => '<p>Service linked role arn</p>', 'refs' => [ 'InstanceConfig$serviceLinkedRoleArn' => NULL, ], ], 'ServiceQuotaExceededException' => [ 'base' => '<p>Request would cause a service quota to be exceeded.</p>', 'refs' => [], ], 'SmsChannelSubtypeConfig' => [ 'base' => '<p>SMS Channel Subtype config</p>', 'refs' => [ 'ChannelSubtypeConfig$sms' => NULL, ], ], 'SmsChannelSubtypeParameters' => [ 'base' => '<p>Parameters for the SMS Channel Subtype</p>', 'refs' => [ 'ChannelSubtypeParameters$sms' => NULL, ], ], 'SmsOutboundConfig' => [ 'base' => '<p>Default SMS Outbound config</p>', 'refs' => [ 'SmsChannelSubtypeConfig$defaultOutboundConfig' => NULL, ], ], 'SmsOutboundMode' => [ 'base' => '<p>SMS Outbound Mode</p>', 'refs' => [ 'SmsChannelSubtypeConfig$outboundMode' => NULL, ], ], 'Source' => [ 'base' => '<p>Source of the campaign</p>', 'refs' => [ 'Campaign$source' => NULL, 'CreateCampaignRequest$source' => NULL, 'UpdateCampaignSourceRequest$source' => NULL, ], ], 'SourcePhoneNumber' => [ 'base' => '<p>The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.</p>', 'refs' => [ 'TelephonyChannelSubtypeParameters$connectSourcePhoneNumber' => NULL, 'TelephonyOutboundConfig$connectSourcePhoneNumber' => NULL, ], ], 'StartCampaignRequest' => [ 'base' => '<p>The request for StartCampaign API.</p>', 'refs' => [], ], 'StartInstanceOnboardingJobRequest' => [ 'base' => '<p>The request for StartInstanceOnboardingJob API.</p>', 'refs' => [], ], 'StartInstanceOnboardingJobResponse' => [ 'base' => '<p>The response for StartInstanceOnboardingJob API.</p>', 'refs' => [], ], 'StopCampaignRequest' => [ 'base' => '<p>The request for StopCampaign API.</p>', 'refs' => [], ], 'String' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$message' => NULL, 'ConflictException$message' => NULL, 'InternalServerException$message' => NULL, 'InvalidCampaignStateException$message' => NULL, 'InvalidStateException$message' => NULL, 'ResourceNotFoundException$message' => NULL, 'ServiceQuotaExceededException$message' => NULL, 'ThrottlingException$message' => NULL, 'ValidationException$message' => NULL, ], ], 'SuccessfulCampaignStateResponse' => [ 'base' => '<p>Successful response of campaign state</p>', 'refs' => [ 'SuccessfulCampaignStateResponseList$member' => NULL, ], ], 'SuccessfulCampaignStateResponseList' => [ 'base' => '<p>List of successful response of campaign state</p>', 'refs' => [ 'GetCampaignStateBatchResponse$successfulRequests' => NULL, ], ], 'SuccessfulProfileOutboundRequest' => [ 'base' => '<p>Success details for a profile outbound request</p>', 'refs' => [ 'SuccessfulProfileOutboundRequestList$member' => NULL, ], ], 'SuccessfulProfileOutboundRequestList' => [ 'base' => '<p>List of successful profile outbound requests</p>', 'refs' => [ 'PutProfileOutboundRequestBatchResponse$successfulRequests' => NULL, ], ], 'SuccessfulRequest' => [ 'base' => '<p>A successful request identified by the unique client token.</p>', 'refs' => [ 'SuccessfulRequestList$member' => NULL, ], ], 'SuccessfulRequestList' => [ 'base' => '<p>A list of successful requests identified by the unique client token.</p>', 'refs' => [ 'PutOutboundRequestBatchResponse$successfulRequests' => NULL, ], ], 'TagKey' => [ 'base' => '<p>The key of tag.</p>', 'refs' => [ 'TagKeyList$member' => NULL, 'TagMap$key' => NULL, ], ], 'TagKeyList' => [ 'base' => '<p>List of tag keys.</p>', 'refs' => [ 'UntagResourceRequest$tagKeys' => NULL, ], ], 'TagMap' => [ 'base' => '<p>Tag map with key and value.</p>', 'refs' => [ 'Campaign$tags' => NULL, 'CreateCampaignRequest$tags' => NULL, 'CreateCampaignResponse$tags' => NULL, 'ListTagsForResourceResponse$tags' => NULL, 'TagResourceRequest$tags' => NULL, ], ], 'TagResourceRequest' => [ 'base' => '<p>The request for TagResource API.</p>', 'refs' => [], ], 'TagValue' => [ 'base' => '<p>The value of tag.</p>', 'refs' => [ 'TagMap$value' => NULL, ], ], 'TelephonyChannelSubtypeConfig' => [ 'base' => '<p>Telephony Channel Subtype config</p>', 'refs' => [ 'ChannelSubtypeConfig$telephony' => NULL, ], ], 'TelephonyChannelSubtypeParameters' => [ 'base' => '<p>Parameters for the Telephony Channel Subtype</p>', 'refs' => [ 'ChannelSubtypeParameters$telephony' => NULL, ], ], 'TelephonyOutboundConfig' => [ 'base' => '<p>Default Telephony Outbound config</p>', 'refs' => [ 'TelephonyChannelSubtypeConfig$defaultOutboundConfig' => NULL, ], ], 'TelephonyOutboundMode' => [ 'base' => '<p>Telephony Outbound Mode</p>', 'refs' => [ 'TelephonyChannelSubtypeConfig$outboundMode' => NULL, ], ], 'ThrottlingException' => [ 'base' => '<p>The request was denied due to request throttling.</p>', 'refs' => [], ], 'TimeRange' => [ 'base' => '<p>Time range in 24 hour format</p>', 'refs' => [ 'TimeRangeList$member' => NULL, ], ], 'TimeRangeList' => [ 'base' => '<p>List of time range</p>', 'refs' => [ 'DailyHours$value' => NULL, ], ], 'TimeStamp' => [ 'base' => '<p>Timestamp with no UTC offset or timezone</p>', 'refs' => [ 'OutboundRequest$expirationTime' => NULL, 'ProfileOutboundRequest$expirationTime' => NULL, 'Schedule$startTime' => NULL, 'Schedule$endTime' => NULL, ], ], 'TimeWindow' => [ 'base' => '<p>Time window config</p>', 'refs' => [ 'CommunicationTimeConfig$telephony' => NULL, 'CommunicationTimeConfig$sms' => NULL, 'CommunicationTimeConfig$email' => NULL, ], ], 'TimeZone' => [ 'base' => '<p>Time Zone Id in the IANA format</p>', 'refs' => [ 'LocalTimeZoneConfig$defaultTimeZone' => NULL, ], ], 'UntagResourceRequest' => [ 'base' => '<p>The request for UntagResource API.</p>', 'refs' => [], ], 'UpdateCampaignChannelSubtypeConfigRequest' => [ 'base' => '<p>The request for UpdateCampaignChannelSubtypeConfig API.</p>', 'refs' => [], ], 'UpdateCampaignCommunicationLimitsRequest' => [ 'base' => '<p>The request for UpdateCampaignCommunicationLimits API.</p>', 'refs' => [], ], 'UpdateCampaignCommunicationTimeRequest' => [ 'base' => '<p>The request for UpdateCampaignCommunicationTime API.</p>', 'refs' => [], ], 'UpdateCampaignFlowAssociationRequest' => [ 'base' => '<p>The request for UpdateCampaignFlowAssociation API.</p>', 'refs' => [], ], 'UpdateCampaignNameRequest' => [ 'base' => '<p>The request for UpdateCampaignName API.</p>', 'refs' => [], ], 'UpdateCampaignScheduleRequest' => [ 'base' => '<p>The request for UpdateCampaignSchedule API.</p>', 'refs' => [], ], 'UpdateCampaignSourceRequest' => [ 'base' => '<p>The request for UpdateCampaignSource API.</p>', 'refs' => [], ], 'ValidationException' => [ 'base' => '<p>The input fails to satisfy the constraints specified by an AWS service.</p>', 'refs' => [], ], 'XAmazonErrorType' => [ 'base' => '<p>A header that defines the error encountered while processing the request.</p>', 'refs' => [ 'AccessDeniedException$xAmzErrorType' => NULL, 'ConflictException$xAmzErrorType' => NULL, 'InternalServerException$xAmzErrorType' => NULL, 'InvalidCampaignStateException$xAmzErrorType' => NULL, 'InvalidStateException$xAmzErrorType' => NULL, 'ResourceNotFoundException$xAmzErrorType' => NULL, 'ServiceQuotaExceededException$xAmzErrorType' => NULL, 'ThrottlingException$xAmzErrorType' => NULL, 'ValidationException$xAmzErrorType' => NULL, ], ], ],];
