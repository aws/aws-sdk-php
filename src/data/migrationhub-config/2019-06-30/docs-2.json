{
  "version": "2.0",
  "service": "<p>The AWS Migration Hub home region APIs are available specifically for working with your Migration Hub home region. You can use these APIs to determine a home region, as well as to create and work with controls that describe the home region.</p> <p>You can use these APIs within your home region only. If you call these APIs from outside your home region, your calls are rejected, except for the ability to register your agents and connectors. </p> <p> You must call <code>GetHomeRegion</code> at least once before you call any other AWS Application Discovery Service and AWS Migration Hub APIs, to obtain the account's Migration Hub home region.</p> <p>The <code>StartDataCollection</code> API call in AWS Application Discovery Service allows your agents and connectors to begin collecting data that flows directly into the home region, and it will prevent you from enabling data collection information to be sent outside the home region. </p> <p>For specific API usage, see the sections that follow in this AWS Migration Hub Home Region API reference. </p> <note> <p>The Migration Hub Home Region APIs do not support AWS Organizations.</p> </note>",
  "operations": {
    "CreateHomeRegionControl": "<p>This API sets up the home region for the calling account only.</p>",
    "DescribeHomeRegionControls": "<p>This API permits filtering on the <code>ControlId</code>, <code>HomeRegion</code>, and <code>RegionControlScope</code> fields.</p>",
    "GetHomeRegion": "<p>Returns the calling accountâ€™s home region, if configured. This API is used by other AWS services to determine the regional endpoint for calling AWS Application Discovery Service and Migration Hub. You must call <code>GetHomeRegion</code> at least once before you call any other AWS Application Discovery Service and AWS Migration Hub APIs, to obtain the account's Migration Hub home region.</p>"
  },
  "shapes": {
    "AccessDeniedException": {
      "base": "<p>You do not have sufficient access to perform this action.</p>",
      "refs": {
      }
    },
    "ControlId": {
      "base": null,
      "refs": {
        "DescribeHomeRegionControlsRequest$ControlId": "<p>The <code>ControlID</code> is a unique identifier string of your <code>HomeRegionControl</code> object.</p>",
        "HomeRegionControl$ControlId": "<p>A unique identifier that's generated for each home region control. It's always a string that begins with \"hrc-\" followed by 12 lowercase letters and numbers.</p>"
      }
    },
    "CreateHomeRegionControlRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateHomeRegionControlResult": {
      "base": null,
      "refs": {
      }
    },
    "DescribeHomeRegionControlsMaxResults": {
      "base": null,
      "refs": {
        "DescribeHomeRegionControlsRequest$MaxResults": "<p>The maximum number of filtering results to display per page. </p>"
      }
    },
    "DescribeHomeRegionControlsRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeHomeRegionControlsResult": {
      "base": null,
      "refs": {
      }
    },
    "DryRun": {
      "base": null,
      "refs": {
        "CreateHomeRegionControlRequest$DryRun": "<p>Optional Boolean flag to indicate whether any effect should take place. It tests whether the caller has permission to make the call.</p>"
      }
    },
    "DryRunOperation": {
      "base": "<p>Exception raised to indicate that authorization of an action was successful, when the <code>DryRun</code> flag is set to true.</p>",
      "refs": {
      }
    },
    "ErrorMessage": {
      "base": null,
      "refs": {
        "AccessDeniedException$Message": null,
        "DryRunOperation$Message": null,
        "InternalServerError$Message": null,
        "InvalidInputException$Message": null,
        "ServiceUnavailableException$Message": null
      }
    },
    "GetHomeRegionRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetHomeRegionResult": {
      "base": null,
      "refs": {
      }
    },
    "HomeRegion": {
      "base": null,
      "refs": {
        "CreateHomeRegionControlRequest$HomeRegion": "<p>The name of the home region of the calling account.</p>",
        "DescribeHomeRegionControlsRequest$HomeRegion": "<p>The name of the home region you'd like to view.</p>",
        "GetHomeRegionResult$HomeRegion": "<p>The name of the home region of the calling account.</p>",
        "HomeRegionControl$HomeRegion": "<p>The AWS Region that's been set as home region. For example, \"us-west-2\" or \"eu-central-1\" are valid home regions.</p>"
      }
    },
    "HomeRegionControl": {
      "base": "<p>A home region control is an object that specifies the home region for an account, with some additional information. It contains a target (always of type <code>ACCOUNT</code>), an ID, and a time at which the home region was set.</p>",
      "refs": {
        "CreateHomeRegionControlResult$HomeRegionControl": "<p>This object is the <code>HomeRegionControl</code> object that's returned by a successful call to <code>CreateHomeRegionControl</code>.</p>",
        "HomeRegionControls$member": null
      }
    },
    "HomeRegionControls": {
      "base": null,
      "refs": {
        "DescribeHomeRegionControlsResult$HomeRegionControls": "<p>An array that contains your <code>HomeRegionControl</code> objects.</p>"
      }
    },
    "InternalServerError": {
      "base": "<p>Exception raised when an internal, configuration, or dependency error is encountered.</p>",
      "refs": {
      }
    },
    "InvalidInputException": {
      "base": "<p>Exception raised when the provided input violates a policy constraint or is entered in the wrong format or data type.</p>",
      "refs": {
      }
    },
    "RequestedTime": {
      "base": null,
      "refs": {
        "HomeRegionControl$RequestedTime": "<p>A timestamp representing the time when the customer called <code>CreateHomeregionControl</code> and set the home region for the account.</p>"
      }
    },
    "ServiceUnavailableException": {
      "base": "<p>Exception raised when a request fails due to temporary unavailability of the service.</p>",
      "refs": {
      }
    },
    "Target": {
      "base": "<p>The target parameter specifies the identifier to which the home region is applied, which is always an <code>ACCOUNT</code>. It applies the home region to the current <code>ACCOUNT</code>.</p>",
      "refs": {
        "CreateHomeRegionControlRequest$Target": "<p>The account for which this command sets up a home region control. The <code>Target</code> is always of type <code>ACCOUNT</code>.</p>",
        "DescribeHomeRegionControlsRequest$Target": "<p>The target parameter specifies the identifier to which the home region is applied, which is always of type <code>ACCOUNT</code>. It applies the home region to the current <code>ACCOUNT</code>.</p>",
        "HomeRegionControl$Target": "<p>The target parameter specifies the identifier to which the home region is applied, which is always an <code>ACCOUNT</code>. It applies the home region to the current <code>ACCOUNT</code>.</p>"
      }
    },
    "TargetId": {
      "base": null,
      "refs": {
        "Target$Id": "<p>The <code>TargetID</code> is a 12-character identifier of the <code>ACCOUNT</code> for which the control was created. (This must be the current account.) </p>"
      }
    },
    "TargetType": {
      "base": null,
      "refs": {
        "Target$Type": "<p>The target type is always an <code>ACCOUNT</code>.</p>"
      }
    },
    "Token": {
      "base": null,
      "refs": {
        "DescribeHomeRegionControlsRequest$NextToken": "<p>If a <code>NextToken</code> was returned by a previous call, more results are available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>.</p>",
        "DescribeHomeRegionControlsResult$NextToken": "<p>If a <code>NextToken</code> was returned by a previous call, more results are available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>.</p>"
      }
    }
  }
}
