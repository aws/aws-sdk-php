{
  "version": "2.0",
  "service": "<ul> <li> <p> <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_Operations_Amazon_Q_Connect.html\">Amazon Q actions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_Types_Amazon_Q_Connect.html\">Amazon Q data types</a> </p> </li> </ul> <note> <p> <b>Powered by Amazon Bedrock</b>: Amazon Web Services implements <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/abuse-detection.html\">automated abuse detection</a>. Because Amazon Q in Connect is built on Amazon Bedrock, users can take full advantage of the controls implemented in Amazon Bedrock to enforce safety, security, and the responsible use of artificial intelligence (AI).</p> </note> <p>Amazon Q in Connect is a generative AI customer service assistant. It is an LLM-enhanced evolution of Amazon Connect Wisdom that delivers real-time recommendations to help contact center agents resolve customer issues quickly and accurately.</p> <p>Amazon Q in Connect automatically detects customer intent during calls and chats using conversational analytics and natural language understanding (NLU). It then provides agents with immediate, real-time generative responses and suggested actions, and links to relevant documents and articles. Agents can also query Amazon Q in Connect directly using natural language or keywords to answer customer requests.</p> <p>Use the Amazon Q in Connect APIs to create an assistant and a knowledge base, for example, or manage content by uploading custom files.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-q-connect.html\">Use Amazon Q in Connect for generative AI powered agent assistance in real-time</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
  "operations": {
    "CreateAIAgent": "<p>Creates an Amazon Q in Connect AI Agent.</p>",
    "CreateAIAgentVersion": "<p>Creates and Amazon Q in Connect AI Agent version.</p>",
    "CreateAIPrompt": "<p>Creates an Amazon Q in Connect AI Prompt.</p>",
    "CreateAIPromptVersion": "<p>Creates an Amazon Q in Connect AI Prompt version.</p>",
    "CreateAssistant": "<p>Creates an Amazon Q in Connect assistant.</p>",
    "CreateAssistantAssociation": "<p>Creates an association between an Amazon Q in Connect assistant and another resource. Currently, the only supported association is with a knowledge base. An assistant can have only a single association.</p>",
    "CreateContent": "<p>Creates Amazon Q in Connect content. Before to calling this API, use <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a> to upload an asset.</p>",
    "CreateContentAssociation": "<p>Creates an association between a content resource in a knowledge base and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/step-by-step-guided-experiences.html\">step-by-step guides</a>. Step-by-step guides offer instructions to agents for resolving common customer issues. You create a content association to integrate Amazon Q in Connect and step-by-step guides. </p> <p>After you integrate Amazon Q and step-by-step guides, when Amazon Q provides a recommendation to an agent based on the intent that it's detected, it also provides them with the option to start the step-by-step guide that you have associated with the content.</p> <p>Note the following limitations:</p> <ul> <li> <p>You can create only one content association for each content resource in a knowledge base.</p> </li> <li> <p>You can associate a step-by-step guide with multiple content resources.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html\">Integrate Amazon Q in Connect with step-by-step guides</a> in the <i>Amazon Connect Administrator Guide</i>. </p>",
    "CreateKnowledgeBase": "<p>Creates a knowledge base.</p> <note> <p>When using this API, you cannot reuse <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/Welcome.html\">Amazon AppIntegrations</a> DataIntegrations with external knowledge bases such as Salesforce and ServiceNow. If you do, you'll get an <code>InvalidRequestException</code> error. </p> <p>For example, you're programmatically managing your external knowledge base, and you want to add or remove one of the fields that is being ingested from Salesforce. Do the following:</p> <ol> <li> <p>Call <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_DeleteKnowledgeBase.html\">DeleteKnowledgeBase</a>.</p> </li> <li> <p>Call <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_DeleteDataIntegration.html\">DeleteDataIntegration</a>.</p> </li> <li> <p>Call <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\">CreateDataIntegration</a> to recreate the DataIntegration or a create different one.</p> </li> <li> <p>Call CreateKnowledgeBase.</p> </li> </ol> </note>",
    "CreateQuickResponse": "<p>Creates an Amazon Q in Connect quick response.</p>",
    "CreateSession": "<p>Creates a session. A session is a contextual container used for generating recommendations. Amazon Connect creates a new Amazon Q in Connect session for each contact on which Amazon Q in Connect is enabled.</p>",
    "DeleteAIAgent": "<p>Deletes an Amazon Q in Connect AI Agent.</p>",
    "DeleteAIAgentVersion": "<p>Deletes an Amazon Q in Connect AI Agent Version.</p>",
    "DeleteAIPrompt": "<p>Deletes an Amazon Q in Connect AI Prompt.</p>",
    "DeleteAIPromptVersion": "<p>Delete and Amazon Q in Connect AI Prompt version.</p>",
    "DeleteAssistant": "<p>Deletes an assistant.</p>",
    "DeleteAssistantAssociation": "<p>Deletes an assistant association.</p>",
    "DeleteContent": "<p>Deletes the content.</p>",
    "DeleteContentAssociation": "<p>Deletes the content association. </p> <p>For more information about content associations--what they are and when they are used--see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html\">Integrate Amazon Q in Connect with step-by-step guides</a> in the <i>Amazon Connect Administrator Guide</i>. </p>",
    "DeleteImportJob": "<p>Deletes the quick response import job.</p>",
    "DeleteKnowledgeBase": "<p>Deletes the knowledge base.</p> <note> <p>When you use this API to delete an external knowledge base such as Salesforce or ServiceNow, you must also delete the <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/Welcome.html\">Amazon AppIntegrations</a> DataIntegration. This is because you can't reuse the DataIntegration after it's been associated with an external knowledge base. However, you can delete and recreate it. See <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_DeleteDataIntegration.html\">DeleteDataIntegration</a> and <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\">CreateDataIntegration</a> in the <i>Amazon AppIntegrations API Reference</i>.</p> </note>",
    "DeleteQuickResponse": "<p>Deletes a quick response.</p>",
    "GetAIAgent": "<p>Gets an Amazon Q in Connect AI Agent.</p>",
    "GetAIPrompt": "<p>Gets and Amazon Q in Connect AI Prompt.</p>",
    "GetAssistant": "<p>Retrieves information about an assistant.</p>",
    "GetAssistantAssociation": "<p>Retrieves information about an assistant association.</p>",
    "GetContent": "<p>Retrieves content, including a pre-signed URL to download the content.</p>",
    "GetContentAssociation": "<p>Returns the content association.</p> <p>For more information about content associations--what they are and when they are used--see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html\">Integrate Amazon Q in Connect with step-by-step guides</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
    "GetContentSummary": "<p>Retrieves summary information about the content.</p>",
    "GetImportJob": "<p>Retrieves the started import job.</p>",
    "GetKnowledgeBase": "<p>Retrieves information about the knowledge base.</p>",
    "GetQuickResponse": "<p>Retrieves the quick response.</p>",
    "GetRecommendations": "<important> <p>This API will be discontinued starting June 1, 2024. To receive generative responses after March 1, 2024, you will need to create a new Assistant in the Amazon Connect console and integrate the Amazon Q in Connect JavaScript library (amazon-q-connectjs) into your applications.</p> </important> <p>Retrieves recommendations for the specified session. To avoid retrieving the same recommendations in subsequent calls, use <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_NotifyRecommendationsReceived.html\">NotifyRecommendationsReceived</a>. This API supports long-polling behavior with the <code>waitTimeSeconds</code> parameter. Short poll is the default behavior and only returns recommendations already available. To perform a manual query against an assistant, use <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_QueryAssistant.html\">QueryAssistant</a>.</p>",
    "GetSession": "<p>Retrieves information for a specified session.</p>",
    "ListAIAgentVersions": "<p>List AI Agent versions.</p>",
    "ListAIAgents": "<p>Lists AI Agents.</p>",
    "ListAIPromptVersions": "<p>Lists AI Prompt versions.</p>",
    "ListAIPrompts": "<p>Lists the AI Prompts available on the Amazon Q in Connect assistant.</p>",
    "ListAssistantAssociations": "<p>Lists information about assistant associations.</p>",
    "ListAssistants": "<p>Lists information about assistants.</p>",
    "ListContentAssociations": "<p>Lists the content associations.</p> <p>For more information about content associations--what they are and when they are used--see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html\">Integrate Amazon Q in Connect with step-by-step guides</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
    "ListContents": "<p>Lists the content.</p>",
    "ListImportJobs": "<p>Lists information about import jobs.</p>",
    "ListKnowledgeBases": "<p>Lists the knowledge bases.</p>",
    "ListQuickResponses": "<p>Lists information about quick response.</p>",
    "ListTagsForResource": "<p>Lists the tags for the specified resource.</p>",
    "NotifyRecommendationsReceived": "<p>Removes the specified recommendations from the specified assistant's queue of newly available recommendations. You can use this API in conjunction with <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_GetRecommendations.html\">GetRecommendations</a> and a <code>waitTimeSeconds</code> input for long-polling behavior and avoiding duplicate recommendations.</p>",
    "PutFeedback": "<p>Provides feedback against the specified assistant for the specified target. This API only supports generative targets.</p>",
    "QueryAssistant": "<important> <p>This API will be discontinued starting June 1, 2024. To receive generative responses after March 1, 2024, you will need to create a new Assistant in the Amazon Connect console and integrate the Amazon Q in Connect JavaScript library (amazon-q-connectjs) into your applications.</p> </important> <p>Performs a manual search against the specified assistant. To retrieve recommendations for an assistant, use <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_GetRecommendations.html\">GetRecommendations</a>. </p>",
    "RemoveAssistantAIAgent": "<p>Removes the AI Agent that is set for use by defafult on an Amazon Q in Connect Assistant.</p>",
    "RemoveKnowledgeBaseTemplateUri": "<p>Removes a URI template from a knowledge base.</p>",
    "SearchContent": "<p>Searches for content in a specified knowledge base. Can be used to get a specific content resource by its name.</p>",
    "SearchQuickResponses": "<p>Searches existing Amazon Q in Connect quick responses in an Amazon Q in Connect knowledge base.</p>",
    "SearchSessions": "<p>Searches for sessions.</p>",
    "StartContentUpload": "<p>Get a URL to upload content to a knowledge base. To upload content, first make a PUT request to the returned URL with your file, making sure to include the required headers. Then use <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_CreateContent.html\">CreateContent</a> to finalize the content creation process or <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_UpdateContent.html\">UpdateContent</a> to modify an existing resource. You can only upload content to a knowledge base of type CUSTOM.</p>",
    "StartImportJob": "<p>Start an asynchronous job to import Amazon Q in Connect resources from an uploaded source file. Before calling this API, use <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a> to upload an asset that contains the resource data.</p> <ul> <li> <p>For importing Amazon Q in Connect quick responses, you need to upload a csv file including the quick responses. For information about how to format the csv file for importing quick responses, see <a href=\"https://docs.aws.amazon.com/console/connect/quick-responses/add-data\">Import quick responses</a>.</p> </li> </ul>",
    "TagResource": "<p>Adds the specified tags to the specified resource.</p>",
    "UntagResource": "<p>Removes the specified tags from the specified resource.</p>",
    "UpdateAIAgent": "<p>Updates an AI Agent.</p>",
    "UpdateAIPrompt": "<p>Updates an AI Prompt.</p>",
    "UpdateAssistantAIAgent": "<p>Updates the AI Agent that is set for use by defafult on an Amazon Q in Connect Assistant.</p>",
    "UpdateContent": "<p>Updates information about the content.</p>",
    "UpdateKnowledgeBaseTemplateUri": "<p>Updates the template URI of a knowledge base. This is only supported for knowledge bases of type EXTERNAL. Include a single variable in <code>${variable}</code> format; this interpolated by Amazon Q in Connect using ingested content. For example, if you ingest a Salesforce article, it has an <code>Id</code> value, and you can set the template URI to <code>https://myInstanceName.lightning.force.com/lightning/r/Knowledge__kav/*${Id}*/view</code>. </p>",
    "UpdateQuickResponse": "<p>Updates an existing Amazon Q in Connect quick response.</p>",
    "UpdateSession": "<p>Updates a session. A session is a contextual container used for generating recommendations. Amazon Connect updates the existing Amazon Q in Connect session for each contact on which Amazon Q in Connect is enabled.</p>",
    "UpdateSessionData": "<p>Updates the data stored on an Amazon Q in Connect Session.</p>"
  },
  "shapes": {
    "AIAgentAssociationConfigurationType": {
      "base": null,
      "refs": {
        "AssociationConfiguration$associationType": "<p>The type of the association for this Association Configuration.</p>"
      }
    },
    "AIAgentConfiguration": {
      "base": "<p>A typed union that specifies the configuration based on the type of AI Agent.</p>",
      "refs": {
        "AIAgentData$configuration": "<p>Configuration for the AI Agent.</p>",
        "AIAgentSummary$configuration": "<p>The configuration for the AI Agent.</p>",
        "CreateAIAgentRequest$configuration": "<p>The configuration of the AI Agent.</p>",
        "UpdateAIAgentRequest$configuration": "<p>The configuration of the Amazon Q in Connect AI Agent.</p>"
      }
    },
    "AIAgentConfigurationData": {
      "base": "<p>A type that specifies the AI Agent ID configuration data when mapping an AI Agents to be used for an AI Agent type on a session or assistant.</p>",
      "refs": {
        "AIAgentConfigurationMap$value": null,
        "UpdateAssistantAIAgentRequest$configuration": "<p>The configuration of the AI Agent being updated for use by default on the Amazon Q in Connect Assistant.</p>"
      }
    },
    "AIAgentConfigurationMap": {
      "base": null,
      "refs": {
        "AssistantData$aiAgentConfiguration": "<p>The configuration of the AI Agents (mapped by AI Agent Type to AI Agent version) that is set on the Amazon Q in Connect Assistant.</p>",
        "AssistantSummary$aiAgentConfiguration": "<p>The configuration of the AI Agents (mapped by AI Agent Type to AI Agent version) that is set on the Amazon Q in Connect Assistant.</p>",
        "CreateSessionRequest$aiAgentConfiguration": "<p>The configuration of the AI Agents (mapped by AI Agent Type to AI Agent version) that should be used by Amazon Q in Connect for this Session.</p>",
        "SessionData$aiAgentConfiguration": "<p>The configuration of the AI Agents (mapped by AI Agent Type to AI Agent version) that should be used by Amazon Q in Connect for this Session.</p>",
        "UpdateSessionRequest$aiAgentConfiguration": "<p>The configuration of the AI Agents (mapped by AI Agent Type to AI Agent version) that should be used by Amazon Q in Connect for this Session.</p>"
      }
    },
    "AIAgentData": {
      "base": "<p>The data for the AI Agent.</p>",
      "refs": {
        "CreateAIAgentResponse$aiAgent": "<p>The data of the created AI Agent.</p>",
        "CreateAIAgentVersionResponse$aiAgent": "<p>The data of the AI Agent version.</p>",
        "GetAIAgentResponse$aiAgent": "<p>The data of the AI Agent.</p>",
        "UpdateAIAgentResponse$aiAgent": "<p>The data of the updated Amazon Q in Connect AI Agent.</p>"
      }
    },
    "AIAgentSummary": {
      "base": "<p>The summary of the AI Agent.</p>",
      "refs": {
        "AIAgentSummaryList$member": null,
        "AIAgentVersionSummary$aiAgentSummary": "<p>The data for the summary of the AI Agent version.</p>"
      }
    },
    "AIAgentSummaryList": {
      "base": null,
      "refs": {
        "ListAIAgentsResponse$aiAgentSummaries": "<p>The summaries of AI Agents.</p>"
      }
    },
    "AIAgentType": {
      "base": null,
      "refs": {
        "AIAgentConfigurationMap$key": null,
        "AIAgentData$type": "<p>The type of the AI Agent.</p>",
        "AIAgentSummary$type": "<p>The type of the AI Agent.</p>",
        "CreateAIAgentRequest$type": "<p>The type of the AI Agent.</p>",
        "RemoveAssistantAIAgentRequest$aiAgentType": "<p>The type of the AI Agent being removed for use by default from the Amazon Q in Connect Assistant.</p>",
        "UpdateAssistantAIAgentRequest$aiAgentType": "<p>The type of the AI Agent being updated for use by default on the Amazon Q in Connect Assistant.</p>"
      }
    },
    "AIAgentVersionSummariesList": {
      "base": null,
      "refs": {
        "ListAIAgentVersionsResponse$aiAgentVersionSummaries": "<p>The summaries of AI Agent versions.</p>"
      }
    },
    "AIAgentVersionSummary": {
      "base": "<p>The summary of the AI Agent version.</p>",
      "refs": {
        "AIAgentVersionSummariesList$member": null
      }
    },
    "AIPromptAPIFormat": {
      "base": null,
      "refs": {
        "AIPromptData$apiFormat": "<p>The API format used for this AI Prompt.</p>",
        "AIPromptSummary$apiFormat": "<p>The API format used for this AI Prompt.</p>",
        "CreateAIPromptRequest$apiFormat": "<p>The API Format of the AI Prompt.</p>"
      }
    },
    "AIPromptData": {
      "base": "<p>The data for the AI Prompt</p>",
      "refs": {
        "CreateAIPromptResponse$aiPrompt": "<p>The data of the AI Prompt.</p>",
        "CreateAIPromptVersionResponse$aiPrompt": "<p>The data of the AI Prompt version.</p>",
        "GetAIPromptResponse$aiPrompt": "<p>The data of the AI Prompt.</p>",
        "UpdateAIPromptResponse$aiPrompt": "<p>The data of the updated Amazon Q in Connect AI Prompt.</p>"
      }
    },
    "AIPromptModelIdentifier": {
      "base": null,
      "refs": {
        "AIPromptData$modelId": "<p>The identifier of the model used for this AI Prompt. Model Ids supported are: <code>CLAUDE_3_HAIKU_20240307_V1</code>.</p>",
        "AIPromptSummary$modelId": "<p>The identifier of the model used for this AI Prompt. Model Ids supported are: <code>CLAUDE_3_HAIKU_20240307_V1</code>.</p>",
        "CreateAIPromptRequest$modelId": "<p>The identifier of the model used for this AI Prompt. Model Ids supported are: <code>CLAUDE_3_HAIKU_20240307_V1</code> </p>"
      }
    },
    "AIPromptSummary": {
      "base": "<p>The summary of the AI Prompt.</p>",
      "refs": {
        "AIPromptSummaryList$member": null,
        "AIPromptVersionSummary$aiPromptSummary": "<p>The date for the summary of the AI Prompt version.</p>"
      }
    },
    "AIPromptSummaryList": {
      "base": null,
      "refs": {
        "ListAIPromptsResponse$aiPromptSummaries": "<p>The summaries of the AI Prompts.</p>"
      }
    },
    "AIPromptTemplateConfiguration": {
      "base": "<p>A typed union that specifies the configuration for a prompt template based on its type.</p>",
      "refs": {
        "AIPromptData$templateConfiguration": "<p>The configuration of the prompt template for this AI Prompt.</p>",
        "CreateAIPromptRequest$templateConfiguration": "<p>The configuration of the prompt template for this AI Prompt.</p>",
        "UpdateAIPromptRequest$templateConfiguration": "<p>The configuration of the prompt template for this AI Prompt.</p>"
      }
    },
    "AIPromptTemplateType": {
      "base": null,
      "refs": {
        "AIPromptData$templateType": "<p>The type of the prompt template for this AI Prompt.</p>",
        "AIPromptSummary$templateType": "<p>The type of the prompt template for this AI Prompt.</p>",
        "CreateAIPromptRequest$templateType": "<p>The type of the prompt template for this AI Prompt.</p>"
      }
    },
    "AIPromptType": {
      "base": null,
      "refs": {
        "AIPromptData$type": "<p>The type of this AI Prompt.</p>",
        "AIPromptSummary$type": "<p>The type of this AI Prompt.</p>",
        "CreateAIPromptRequest$type": "<p>The type of this AI Prompt.</p>"
      }
    },
    "AIPromptVersionSummariesList": {
      "base": null,
      "refs": {
        "ListAIPromptVersionsResponse$aiPromptVersionSummaries": "<p>The summaries of the AI Prompt versions.</p>"
      }
    },
    "AIPromptVersionSummary": {
      "base": "<p>The summary of the AI Prompt version.</p>",
      "refs": {
        "AIPromptVersionSummariesList$member": null
      }
    },
    "AccessDeniedException": {
      "base": "<p>You do not have sufficient access to perform this action.</p>",
      "refs": {
      }
    },
    "AmazonConnectGuideAssociationData": {
      "base": "<p>Content association data for a <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/step-by-step-guided-experiences.html\">step-by-step guide</a>.</p>",
      "refs": {
        "ContentAssociationContents$amazonConnectGuideAssociation": "<p>The data of the step-by-step guide association.</p>"
      }
    },
    "AndConditions": {
      "base": null,
      "refs": {
        "OrCondition$andConditions": "<p>A list of conditions which would be applied together with an <code>AND</code> condition.</p>",
        "TagFilter$andConditions": "<p>A list of conditions which would be applied together with an <code>AND</code> condition.</p>"
      }
    },
    "AnswerRecommendationAIAgentConfiguration": {
      "base": "<p>The configuration for the <code>ANSWER_RECOMMENDATION</code> AI Agent type.</p>",
      "refs": {
        "AIAgentConfiguration$answerRecommendationAIAgentConfiguration": "<p>The configuration for AI Agents of type <code>ANSWER_RECOMMENDATION</code>.</p>"
      }
    },
    "AppIntegrationsConfiguration": {
      "base": "<p>Configuration information for Amazon AppIntegrations to automatically ingest content.</p>",
      "refs": {
        "SourceConfiguration$appIntegrations": "<p>Configuration information for Amazon AppIntegrations to automatically ingest content.</p>"
      }
    },
    "Arn": {
      "base": null,
      "refs": {
        "AIAgentData$aiAgentArn": "<p>The Amazon Resource Name (ARN) of the AI agent.</p>",
        "AIAgentData$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "AIAgentSummary$aiAgentArn": "<p>The Amazon Resource Name (ARN) of the AI agent.</p>",
        "AIAgentSummary$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "AIPromptData$aiPromptArn": "<p>The Amazon Resource Name (ARN) of the AI Prompt.</p>",
        "AIPromptData$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "AIPromptSummary$aiPromptArn": "<p>The Amazon Resource Name (ARN) of the AI Prompt.</p>",
        "AIPromptSummary$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "AssistantAssociationData$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "AssistantAssociationData$assistantAssociationArn": "<p>The Amazon Resource Name (ARN) of the assistant association.</p>",
        "AssistantAssociationSummary$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "AssistantAssociationSummary$assistantAssociationArn": "<p>The Amazon Resource Name (ARN) of the assistant association.</p>",
        "AssistantData$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "AssistantSummary$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "ContentAssociationData$contentArn": "<p>The Amazon Resource Name (ARN) of the content.</p>",
        "ContentAssociationData$contentAssociationArn": "<p>The Amazon Resource Name (ARN) of the content association.</p>",
        "ContentAssociationData$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "ContentAssociationSummary$contentArn": "<p>The Amazon Resource Name (ARN) of the content.</p>",
        "ContentAssociationSummary$contentAssociationArn": "<p>The Amazon Resource Name (ARN) of the content association.</p>",
        "ContentAssociationSummary$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "ContentData$contentArn": "<p>The Amazon Resource Name (ARN) of the content.</p>",
        "ContentData$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "ContentReference$contentArn": "<p>The Amazon Resource Name (ARN) of the content.</p>",
        "ContentReference$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "ContentSummary$contentArn": "<p>The Amazon Resource Name (ARN) of the content.</p>",
        "ContentSummary$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "ImportJobData$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "ImportJobSummary$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "KnowledgeBaseAssociationData$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "KnowledgeBaseData$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "KnowledgeBaseSummary$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "ListTagsForResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "QuickResponseData$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "QuickResponseData$quickResponseArn": "<p>The Amazon Resource Name (ARN) of the quick response.</p>",
        "QuickResponseSearchResultData$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "QuickResponseSearchResultData$quickResponseArn": "<p>The Amazon Resource Name (ARN) of the quick response.</p>",
        "QuickResponseSummary$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>",
        "QuickResponseSummary$quickResponseArn": "<p>The Amazon Resource Name (ARN) of the quick response.</p>",
        "SessionData$sessionArn": "<p>The Amazon Resource Name (ARN) of the session.</p>",
        "SessionSummary$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "SessionSummary$sessionArn": "<p>The Amazon Resource Name (ARN) of the session.</p>",
        "TagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "UntagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "UpdateSessionDataResponse$sessionArn": "<p>The Amazon Resource Name (ARN) of the session.</p>"
      }
    },
    "AssistantAssociationData": {
      "base": "<p>Information about the assistant association.</p>",
      "refs": {
        "CreateAssistantAssociationResponse$assistantAssociation": "<p>The assistant association.</p>",
        "GetAssistantAssociationResponse$assistantAssociation": "<p>The assistant association.</p>"
      }
    },
    "AssistantAssociationInputData": {
      "base": "<p>The data that is input into Amazon Q in Connect as a result of the assistant association.</p>",
      "refs": {
        "CreateAssistantAssociationRequest$association": "<p>The identifier of the associated resource.</p>"
      }
    },
    "AssistantAssociationOutputData": {
      "base": "<p>The data that is output as a result of the assistant association.</p>",
      "refs": {
        "AssistantAssociationData$associationData": "<p>A union type that currently has a single argument, the knowledge base ID.</p>",
        "AssistantAssociationSummary$associationData": "<p>The association data.</p>"
      }
    },
    "AssistantAssociationSummary": {
      "base": "<p>Summary information about the assistant association.</p>",
      "refs": {
        "AssistantAssociationSummaryList$member": null
      }
    },
    "AssistantAssociationSummaryList": {
      "base": null,
      "refs": {
        "ListAssistantAssociationsResponse$assistantAssociationSummaries": "<p>Summary information about assistant associations.</p>"
      }
    },
    "AssistantCapabilityConfiguration": {
      "base": "<p>The capability configuration for an Amazon Q in Connect assistant. </p>",
      "refs": {
        "AssistantData$capabilityConfiguration": "<p>The configuration information for the Amazon Q in Connect assistant capability. </p>",
        "AssistantSummary$capabilityConfiguration": "<p>The configuration information for the Amazon Q in Connect assistant capability. </p>"
      }
    },
    "AssistantCapabilityType": {
      "base": null,
      "refs": {
        "AssistantCapabilityConfiguration$type": "<p>The type of Amazon Q in Connect assistant capability. </p>"
      }
    },
    "AssistantData": {
      "base": "<p>The assistant data.</p>",
      "refs": {
        "CreateAssistantResponse$assistant": "<p>Information about the assistant.</p>",
        "GetAssistantResponse$assistant": "<p>Information about the assistant.</p>",
        "UpdateAssistantAIAgentResponse$assistant": null
      }
    },
    "AssistantIntegrationConfiguration": {
      "base": "<p>The configuration information for the Amazon Q in Connect assistant integration.</p>",
      "refs": {
        "AssistantData$integrationConfiguration": "<p>The configuration information for the Amazon Q in Connect assistant integration.</p>",
        "AssistantSummary$integrationConfiguration": "<p>The configuration information for the Amazon Q in Connect assistant integration.</p>"
      }
    },
    "AssistantList": {
      "base": null,
      "refs": {
        "ListAssistantsResponse$assistantSummaries": "<p>Information about the assistants.</p>"
      }
    },
    "AssistantStatus": {
      "base": null,
      "refs": {
        "AssistantData$status": "<p>The status of the assistant.</p>",
        "AssistantSummary$status": "<p>The status of the assistant.</p>"
      }
    },
    "AssistantSummary": {
      "base": "<p>Summary information about the assistant.</p>",
      "refs": {
        "AssistantList$member": null
      }
    },
    "AssistantType": {
      "base": null,
      "refs": {
        "AssistantData$type": "<p>The type of assistant.</p>",
        "AssistantSummary$type": "<p>The type of the assistant.</p>",
        "CreateAssistantRequest$type": "<p>The type of assistant.</p>"
      }
    },
    "AssociationConfiguration": {
      "base": "<p>The configuration for an Amazon Q in Connect Assistant Association.</p>",
      "refs": {
        "AssociationConfigurationList$member": null
      }
    },
    "AssociationConfigurationData": {
      "base": "<p>A typed union of the data of the configuration for an Amazon Q in Connect Assistant Association.</p>",
      "refs": {
        "AssociationConfiguration$associationConfigurationData": "<p>The data of the configuration for an Amazon Q in Connect Assistant Association.</p>"
      }
    },
    "AssociationConfigurationList": {
      "base": null,
      "refs": {
        "AnswerRecommendationAIAgentConfiguration$associationConfigurations": "<p>The association configurations for overriding behavior on this AI Agent.</p>",
        "ManualSearchAIAgentConfiguration$associationConfigurations": "<p>The association configurations for overriding behavior on this AI Agent.</p>"
      }
    },
    "AssociationType": {
      "base": null,
      "refs": {
        "AssistantAssociationData$associationType": "<p>The type of association.</p>",
        "AssistantAssociationSummary$associationType": "<p>The type of association.</p>",
        "CreateAssistantAssociationRequest$associationType": "<p>The type of association.</p>"
      }
    },
    "BedrockFoundationModelConfigurationForParsing": {
      "base": "<p>Settings for a foundation model used to parse documents for a data source.</p>",
      "refs": {
        "ParsingConfiguration$bedrockFoundationModelConfiguration": "<p>Settings for a foundation model used to parse documents for a data source.</p>"
      }
    },
    "BedrockModelArnForParsing": {
      "base": null,
      "refs": {
        "BedrockFoundationModelConfigurationForParsing$modelArn": "<p>The ARN of the foundation model.</p>"
      }
    },
    "Boolean": {
      "base": null,
      "refs": {
        "CreateQuickResponseRequest$isActive": "<p>Whether the quick response is active.</p>",
        "QuickResponseData$isActive": "<p>Whether the quick response is active.</p>",
        "QuickResponseFilterField$includeNoExistence": "<p>Whether to treat null value as a match for the attribute field.</p>",
        "QuickResponseQueryField$allowFuzziness": "<p>Whether the query expects only exact matches on the attribute field values. The results of the query will only include exact matches if this parameter is set to false.</p>",
        "QuickResponseSearchResultData$isActive": "<p>Whether the quick response is active.</p>",
        "QuickResponseSummary$isActive": "<p>Whether the quick response is active.</p>",
        "UpdateContentRequest$removeOverrideLinkOutUri": "<p>Unset the existing <code>overrideLinkOutUri</code> if it exists.</p>",
        "UpdateQuickResponseRequest$isActive": "<p>Whether the quick response is active. </p>",
        "UpdateQuickResponseRequest$removeDescription": "<p>Whether to remove the description from the quick response.</p>",
        "UpdateQuickResponseRequest$removeGroupingConfiguration": "<p>Whether to remove the grouping configuration of the quick response.</p>",
        "UpdateQuickResponseRequest$removeShortcutKey": "<p>Whether to remove the shortcut key of the quick response.</p>"
      }
    },
    "Channel": {
      "base": null,
      "refs": {
        "Channels$member": null
      }
    },
    "Channels": {
      "base": null,
      "refs": {
        "CreateQuickResponseRequest$channels": "<p>The Amazon Connect channels this quick response applies to.</p>",
        "QuickResponseData$channels": "<p>The Amazon Connect contact channels this quick response applies to. The supported contact channel types include <code>Chat</code>.</p>",
        "QuickResponseSearchResultData$channels": "<p>The Amazon Connect contact channels this quick response applies to. The supported contact channel types include <code>Chat</code>.</p>",
        "QuickResponseSummary$channels": "<p>The Amazon Connect contact channels this quick response applies to. The supported contact channel types include <code>Chat</code>.</p>",
        "UpdateQuickResponseRequest$channels": "<p>The Amazon Connect contact channels this quick response applies to. The supported contact channel types include <code>Chat</code>.</p>"
      }
    },
    "ChunkingConfiguration": {
      "base": "<p>Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.</p>",
      "refs": {
        "VectorIngestionConfiguration$chunkingConfiguration": "<p>Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.</p>"
      }
    },
    "ChunkingStrategy": {
      "base": null,
      "refs": {
        "ChunkingConfiguration$chunkingStrategy": "<p>Knowledge base can split your source data into chunks. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for <code>NONE</code>, then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.</p>"
      }
    },
    "CitationSpan": {
      "base": "<p>Contains information about where the text with a citation begins and ends in the generated output.</p>",
      "refs": {
        "SourceContentDataDetails$citationSpan": "<p>Contains information about where the text with a citation begins and ends in the generated output.</p>"
      }
    },
    "CitationSpanOffset": {
      "base": null,
      "refs": {
        "CitationSpan$beginOffsetInclusive": "<p>Where the text with a citation starts in the generated output.</p>",
        "CitationSpan$endOffsetExclusive": "<p>Where the text with a citation ends in the generated output.</p>"
      }
    },
    "ClientToken": {
      "base": null,
      "refs": {
        "CreateAIAgentRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the AWS SDK populates this field. For more information about idempotency, see <a href=\"http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateAIAgentVersionRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the AWS SDK populates this field. For more information about idempotency, see <a href=\"http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateAIPromptRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the AWS SDK populates this field. For more information about idempotency, see <a href=\"http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateAIPromptVersionRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the AWS SDK populates this field. For more information about idempotency, see <a href=\"http://aws.amazon.com/https:/aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateAssistantAssociationRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateAssistantRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateContentAssociationRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateSessionRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "UpdateAIAgentRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the AWS SDK populates this field. For more information about idempotency, see <a href=\"http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "UpdateAIPromptRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the AWS SDK populates this field. For more information about idempotency, see <a href=\"http://aws.amazon.com/https:/aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>"
      }
    },
    "Configuration": {
      "base": "<p>The configuration information of the external data source.</p>",
      "refs": {
        "ExternalSourceConfiguration$configuration": "<p>The configuration information of the external data source.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>The request could not be processed because of conflict in the current state of the resource. For example, if you're using a <code>Create</code> API (such as <code>CreateAssistant</code>) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.</p>",
      "refs": {
      }
    },
    "ConnectConfiguration": {
      "base": "<p>The configuration information of the Amazon Connect data source.</p>",
      "refs": {
        "Configuration$connectConfiguration": "<p>The configuration information of the Amazon Connect data source.</p>"
      }
    },
    "ContactAttributeKey": {
      "base": null,
      "refs": {
        "ContactAttributeKeys$member": null,
        "ContactAttributes$key": null
      }
    },
    "ContactAttributeKeys": {
      "base": null,
      "refs": {
        "QuickResponseSearchResultData$attributesInterpolated": "<p>The user defined contact attributes that are resolved when the search result is returned.</p>",
        "QuickResponseSearchResultData$attributesNotInterpolated": "<p>The user defined contact attributes that are not resolved when the search result is returned.</p>"
      }
    },
    "ContactAttributeValue": {
      "base": null,
      "refs": {
        "ContactAttributes$value": null
      }
    },
    "ContactAttributes": {
      "base": null,
      "refs": {
        "SearchQuickResponsesRequest$attributes": "<p>The <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/connect-attrib-list.html#user-defined-attributes\">user-defined Amazon Connect contact attributes</a> to be resolved when search results are returned.</p>"
      }
    },
    "ContentAssociationContents": {
      "base": "<p>The contents of a content association.</p>",
      "refs": {
        "ContentAssociationData$associationData": "<p>The content association.</p>",
        "ContentAssociationSummary$associationData": "<p>The content association.</p>",
        "CreateContentAssociationRequest$association": "<p>The identifier of the associated resource.</p>"
      }
    },
    "ContentAssociationData": {
      "base": "<p>Information about the content association.</p>",
      "refs": {
        "CreateContentAssociationResponse$contentAssociation": "<p>The association between Amazon Q in Connect content and another resource.</p>",
        "GetContentAssociationResponse$contentAssociation": "<p>The association between Amazon Q in Connect content and another resource.</p>"
      }
    },
    "ContentAssociationSummary": {
      "base": "<p>Summary information about a content association.</p>",
      "refs": {
        "ContentAssociationSummaryList$member": null
      }
    },
    "ContentAssociationSummaryList": {
      "base": null,
      "refs": {
        "ListContentAssociationsResponse$contentAssociationSummaries": "<p>Summary information about content associations.</p>"
      }
    },
    "ContentAssociationType": {
      "base": null,
      "refs": {
        "ContentAssociationData$associationType": "<p>The type of association.</p>",
        "ContentAssociationSummary$associationType": "<p>The type of association.</p>",
        "CreateContentAssociationRequest$associationType": "<p>The type of association.</p>"
      }
    },
    "ContentData": {
      "base": "<p>Information about the content.</p>",
      "refs": {
        "CreateContentResponse$content": "<p>The content.</p>",
        "GetContentResponse$content": "<p>The content.</p>",
        "UpdateContentResponse$content": "<p>The content.</p>"
      }
    },
    "ContentDataDetails": {
      "base": "<p>Details about the content data.</p>",
      "refs": {
        "DataDetails$contentData": "<p>Details about the content data.</p>"
      }
    },
    "ContentFeedbackData": {
      "base": "<p>Information about the feedback.</p>",
      "refs": {
        "PutFeedbackRequest$contentFeedback": "<p>Information about the feedback provided.</p>",
        "PutFeedbackResponse$contentFeedback": "<p>Information about the feedback provided.</p>"
      }
    },
    "ContentMetadata": {
      "base": null,
      "refs": {
        "ContentData$metadata": "<p>A key/value map to store attributes without affecting tagging or recommendations. For example, when synchronizing data between an external system and Amazon Q in Connect, you can store an external version identifier as metadata to utilize for determining drift.</p>",
        "ContentSummary$metadata": "<p>A key/value map to store attributes without affecting tagging or recommendations. For example, when synchronizing data between an external system and Amazon Q in Connect, you can store an external version identifier as metadata to utilize for determining drift.</p>",
        "CreateContentRequest$metadata": "<p>A key/value map to store attributes without affecting tagging or recommendations. For example, when synchronizing data between an external system and Amazon Q in Connect, you can store an external version identifier as metadata to utilize for determining drift.</p>",
        "ImportJobData$metadata": "<p>The metadata fields of the imported Amazon Q in Connect resources.</p>",
        "ImportJobSummary$metadata": "<p>The metadata fields of the imported Amazon Q in Connect resources.</p>",
        "StartImportJobRequest$metadata": "<p>The metadata fields of the imported Amazon Q in Connect resources.</p>",
        "UpdateContentRequest$metadata": "<p>A key/value map to store attributes without affecting tagging or recommendations. For example, when synchronizing data between an external system and Amazon Q in Connect, you can store an external version identifier as metadata to utilize for determining drift.</p>"
      }
    },
    "ContentReference": {
      "base": "<p>Reference information about the content.</p>",
      "refs": {
        "DataReference$contentReference": null,
        "Document$contentReference": "<p>A reference to the content resource.</p>"
      }
    },
    "ContentStatus": {
      "base": null,
      "refs": {
        "ContentData$status": "<p>The status of the content.</p>",
        "ContentSummary$status": "<p>The status of the content.</p>"
      }
    },
    "ContentSummary": {
      "base": "<p>Summary information about the content.</p>",
      "refs": {
        "ContentSummaryList$member": null,
        "GetContentSummaryResponse$contentSummary": "<p>The content summary.</p>"
      }
    },
    "ContentSummaryList": {
      "base": null,
      "refs": {
        "ListContentsResponse$contentSummaries": "<p>Information about the content.</p>",
        "SearchContentResponse$contentSummaries": "<p>Summary information about the content.</p>"
      }
    },
    "ContentTitle": {
      "base": null,
      "refs": {
        "ContentData$title": "<p>The title of the content.</p>",
        "ContentSummary$title": "<p>The title of the content.</p>",
        "CreateContentRequest$title": "<p>The title of the content. If not set, the title is equal to the name.</p>",
        "UpdateContentRequest$title": "<p>The title of the content.</p>"
      }
    },
    "ContentType": {
      "base": null,
      "refs": {
        "ContentData$contentType": "<p>The media type of the content.</p>",
        "ContentSummary$contentType": "<p>The media type of the content.</p>",
        "StartContentUploadRequest$contentType": "<p>The type of content to upload.</p>"
      }
    },
    "CreateAIAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAIAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAIAgentVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAIAgentVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAIPromptRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAIPromptResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAIPromptVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAIPromptVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAssistantAssociationRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAssistantAssociationResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAssistantRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAssistantResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateContentAssociationRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateContentAssociationResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateContentRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateContentResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateQuickResponseRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateQuickResponseResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "DataDetails": {
      "base": "<p>Details about the data.</p>",
      "refs": {
        "DataSummary$details": "<p>Details about the data.</p>"
      }
    },
    "DataReference": {
      "base": "<p>Reference data.</p>",
      "refs": {
        "DataSummary$reference": "<p>Reference information about the content.</p>"
      }
    },
    "DataSummary": {
      "base": "<p>Summary of the data.</p>",
      "refs": {
        "DataSummaryList$member": null,
        "RecommendationData$data": "<p> Summary of the recommended content.</p>",
        "ResultData$data": "<p> Summary of the recommended content.</p>"
      }
    },
    "DataSummaryList": {
      "base": null,
      "refs": {
        "GenerativeDataDetails$references": "<p>The references used to generative the LLM response.</p>"
      }
    },
    "DeleteAIAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAIAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAIAgentVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAIAgentVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAIPromptRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAIPromptResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAIPromptVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAIPromptVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAssistantAssociationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAssistantAssociationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAssistantRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAssistantResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteContentAssociationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteContentAssociationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteContentRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteContentResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteImportJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteImportJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteQuickResponseRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteQuickResponseResponse": {
      "base": null,
      "refs": {
      }
    },
    "Description": {
      "base": null,
      "refs": {
        "AIAgentData$description": "<p>The description of the AI Agent.</p>",
        "AIAgentSummary$description": "<p>The description of the AI Agent.</p>",
        "AIPromptData$description": "<p>The description of the AI Prompt.</p>",
        "AIPromptSummary$description": "<p>The description of the AI Prompt.</p>",
        "AssistantData$description": "<p>The description.</p>",
        "AssistantSummary$description": "<p>The description of the assistant.</p>",
        "CreateAIAgentRequest$description": "<p>The description of the AI Agent.</p>",
        "CreateAIPromptRequest$description": "<p>The description of the AI Prompt.</p>",
        "CreateAssistantRequest$description": "<p>The description of the assistant.</p>",
        "CreateKnowledgeBaseRequest$description": "<p>The description.</p>",
        "CreateSessionRequest$description": "<p>The description.</p>",
        "KnowledgeBaseData$description": "<p>The description.</p>",
        "KnowledgeBaseSummary$description": "<p>The description of the knowledge base.</p>",
        "SessionData$description": "<p>The description of the session.</p>",
        "UpdateAIAgentRequest$description": "<p>The description of the Amazon Q in Connect AI Agent.</p>",
        "UpdateAIPromptRequest$description": "<p>The description of the Amazon Q in Connect AI Prompt.</p>",
        "UpdateSessionRequest$description": "<p>The description.</p>"
      }
    },
    "Document": {
      "base": "<p>The document.</p>",
      "refs": {
        "RecommendationData$document": "<p>The recommended document.</p>",
        "ResultData$document": "<p>The document.</p>"
      }
    },
    "DocumentText": {
      "base": "<p>The text of the document.</p>",
      "refs": {
        "Document$excerpt": "<p>The excerpt from the document.</p>",
        "Document$title": "<p>The title of the document.</p>",
        "TextData$excerpt": null,
        "TextData$title": null
      }
    },
    "ExternalSource": {
      "base": null,
      "refs": {
        "ExternalSourceConfiguration$source": "<p>The type of the external data source.</p>"
      }
    },
    "ExternalSourceConfiguration": {
      "base": "<p>The configuration information of the external data source.</p>",
      "refs": {
        "ImportJobData$externalSourceConfiguration": null,
        "ImportJobSummary$externalSourceConfiguration": "<p>The configuration information of the external source that the resource data are imported from.</p>",
        "StartImportJobRequest$externalSourceConfiguration": "<p>The configuration information of the external source that the resource data are imported from.</p>"
      }
    },
    "FailureReason": {
      "base": null,
      "refs": {
        "KnowledgeBaseData$ingestionFailureReasons": "<p>List of failure reasons on ingestion per file.</p>"
      }
    },
    "Filter": {
      "base": "<p>A search filter.</p>",
      "refs": {
        "FilterList$member": null
      }
    },
    "FilterField": {
      "base": null,
      "refs": {
        "Filter$field": "<p>The field on which to filter.</p>"
      }
    },
    "FilterList": {
      "base": null,
      "refs": {
        "SearchExpression$filters": "<p>The search expression filters.</p>"
      }
    },
    "FilterOperator": {
      "base": null,
      "refs": {
        "Filter$operator": "<p>The operator to use for comparing the field’s value with the provided value.</p>"
      }
    },
    "FixedSizeChunkingConfiguration": {
      "base": "<p>Configurations for when you choose fixed-size chunking. If you set the <code>chunkingStrategy</code> as <code>NONE</code>, exclude this field.</p>",
      "refs": {
        "ChunkingConfiguration$fixedSizeChunkingConfiguration": "<p>Configurations for when you choose fixed-size chunking. If you set the <code>chunkingStrategy</code> as <code>NONE</code>, exclude this field.</p>"
      }
    },
    "FixedSizeChunkingConfigurationMaxTokensInteger": {
      "base": null,
      "refs": {
        "FixedSizeChunkingConfiguration$maxTokens": "<p>The maximum number of tokens to include in a chunk.</p>"
      }
    },
    "FixedSizeChunkingConfigurationOverlapPercentageInteger": {
      "base": null,
      "refs": {
        "FixedSizeChunkingConfiguration$overlapPercentage": "<p>The percentage of overlap between adjacent chunks of a data source.</p>"
      }
    },
    "GenerativeContentFeedbackData": {
      "base": "<p>The feedback information for a generative target type.</p>",
      "refs": {
        "ContentFeedbackData$generativeContentFeedbackData": "<p>Information about the feedback for a generative target type.</p>"
      }
    },
    "GenerativeDataDetails": {
      "base": "<p>Details about generative data.</p>",
      "refs": {
        "DataDetails$generativeData": "<p> Details about the generative data.</p>"
      }
    },
    "GenerativeReference": {
      "base": "<p>Reference information about generative content.</p>",
      "refs": {
        "DataReference$generativeReference": "<p>Reference information about the generative content.</p>"
      }
    },
    "GenericArn": {
      "base": null,
      "refs": {
        "AmazonConnectGuideAssociationData$flowId": "<p> The Amazon Resource Name (ARN) of an Amazon Connect flow. Step-by-step guides are a type of flow.</p>",
        "AppIntegrationsConfiguration$appIntegrationArn": "<p>The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration to use for ingesting content.</p> <ul> <li> <p> For <a href=\"https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"> Salesforce</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if objectFields is not provided, including at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code> as source fields. </p> </li> <li> <p> For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"> ServiceNow</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if objectFields is not provided, including at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code> as source fields. </p> </li> <li> <p> For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"> Zendesk</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if <code>objectFields</code> is not provided, including at least <code>id</code>, <code>title</code>, <code>updated_at</code>, and <code>draft</code> as source fields. </p> </li> <li> <p> For <a href=\"https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/sharepoint-net-server-csom-jsom-and-rest-api-index\">SharePoint</a>, your AppIntegrations DataIntegration must have a FileConfiguration, including only file extensions that are among <code>docx</code>, <code>pdf</code>, <code>html</code>, <code>htm</code>, and <code>txt</code>. </p> </li> <li> <p> For <a href=\"http://aws.amazon.com/s3/\">Amazon S3</a>, the ObjectConfiguration and FileConfiguration of your AppIntegrations DataIntegration must be null. The <code>SourceURI</code> of your DataIntegration must use the following format: <code>s3://your_s3_bucket_name</code>.</p> <important> <p>The bucket policy of the corresponding S3 bucket must allow the Amazon Web Services principal <code>app-integrations.amazonaws.com</code> to perform <code>s3:ListBucket</code>, <code>s3:GetObject</code>, and <code>s3:GetBucketLocation</code> against the bucket.</p> </important> </li> </ul>",
        "AssistantIntegrationConfiguration$topicIntegrationArn": "<p>The Amazon Resource Name (ARN) of the integrated Amazon SNS topic used for streaming chat messages.</p>",
        "QuickResponseData$lastModifiedBy": "<p>The Amazon Resource Name (ARN) of the user who last updated the quick response data.</p>",
        "QuickResponseSearchResultData$lastModifiedBy": "<p>The Amazon Resource Name (ARN) of the user who last updated the quick response search result data.</p>",
        "QuickResponseSummary$lastModifiedBy": "<p>The Amazon Resource Name (ARN) of the user who last updated the quick response data.</p>",
        "SessionIntegrationConfiguration$topicIntegrationArn": "<p>The Amazon Resource Name (ARN) of the integrated Amazon SNS topic used for streaming chat messages.</p>"
      }
    },
    "GetAIAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAIAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAIPromptRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAIPromptResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAssistantAssociationRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAssistantAssociationResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAssistantRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAssistantResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetContentAssociationRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetContentAssociationResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetContentRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetContentResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetContentSummaryRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetContentSummaryResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetImportJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetImportJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetQuickResponseRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetQuickResponseResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetRecommendationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetRecommendationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "GroupingConfiguration": {
      "base": "<p>The configuration information of the grouping of Amazon Q in Connect users.</p>",
      "refs": {
        "CreateQuickResponseRequest$groupingConfiguration": "<p>The configuration information of the user groups that the quick response is accessible to.</p>",
        "QuickResponseData$groupingConfiguration": "<p>The configuration information of the user groups that the quick response is accessible to.</p>",
        "QuickResponseSearchResultData$groupingConfiguration": "<p>The configuration information of the user groups that the quick response is accessible to.</p>",
        "UpdateQuickResponseRequest$groupingConfiguration": "<p>The updated grouping configuration of the quick response.</p>"
      }
    },
    "GroupingCriteria": {
      "base": null,
      "refs": {
        "GroupingConfiguration$criteria": "<p>The criteria used for grouping Amazon Q in Connect users.</p> <p>The following is the list of supported criteria values.</p> <ul> <li> <p> <code>RoutingProfileArn</code>: Grouping the users by their <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_RoutingProfile.html\">Amazon Connect routing profile ARN</a>. User should have <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_SearchRoutingProfiles.html\">SearchRoutingProfile</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribeRoutingProfile.html\">DescribeRoutingProfile</a> permissions when setting criteria to this value.</p> </li> </ul>"
      }
    },
    "GroupingValue": {
      "base": null,
      "refs": {
        "GroupingValues$member": null
      }
    },
    "GroupingValues": {
      "base": null,
      "refs": {
        "GroupingConfiguration$values": "<p>The list of values that define different groups of Amazon Q in Connect users.</p> <ul> <li> <p>When setting <code>criteria</code> to <code>RoutingProfileArn</code>, you need to provide a list of ARNs of <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_RoutingProfile.html\">Amazon Connect routing profiles</a> as values of this parameter.</p> </li> </ul>"
      }
    },
    "Headers": {
      "base": null,
      "refs": {
        "StartContentUploadResponse$headersToInclude": "<p>The headers to include in the upload.</p>"
      }
    },
    "HierarchicalChunkingConfiguration": {
      "base": "<p>Settings for hierarchical document chunking for a data source. Hierarchical chunking splits documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.</p>",
      "refs": {
        "ChunkingConfiguration$hierarchicalChunkingConfiguration": "<p>Settings for hierarchical document chunking for a data source. Hierarchical chunking splits documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.</p>"
      }
    },
    "HierarchicalChunkingConfigurationOverlapTokensInteger": {
      "base": null,
      "refs": {
        "HierarchicalChunkingConfiguration$overlapTokens": "<p>The number of tokens to repeat across chunks in the same layer.</p>"
      }
    },
    "HierarchicalChunkingLevelConfiguration": {
      "base": "<p>Token settings for each layer.</p>",
      "refs": {
        "HierarchicalChunkingLevelConfigurations$member": null
      }
    },
    "HierarchicalChunkingLevelConfigurationMaxTokensInteger": {
      "base": null,
      "refs": {
        "HierarchicalChunkingLevelConfiguration$maxTokens": "<p>The maximum number of tokens that a chunk can contain in this layer.</p>"
      }
    },
    "HierarchicalChunkingLevelConfigurations": {
      "base": null,
      "refs": {
        "HierarchicalChunkingConfiguration$levelConfigurations": "<p>Token settings for each layer.</p>"
      }
    },
    "Highlight": {
      "base": "<p>Offset specification to describe highlighting of document excerpts for rendering search results and recommendations.</p>",
      "refs": {
        "Highlights$member": null
      }
    },
    "HighlightOffset": {
      "base": null,
      "refs": {
        "Highlight$beginOffsetInclusive": "<p>The offset for the start of the highlight.</p>",
        "Highlight$endOffsetExclusive": "<p>The offset for the end of the highlight.</p>"
      }
    },
    "Highlights": {
      "base": null,
      "refs": {
        "DocumentText$highlights": "<p>Highlights in the document text.</p>"
      }
    },
    "ImportJobData": {
      "base": "<p>Summary information about the import job.</p>",
      "refs": {
        "GetImportJobResponse$importJob": "<p>The import job.</p>",
        "StartImportJobResponse$importJob": "<p>The import job.</p>"
      }
    },
    "ImportJobList": {
      "base": null,
      "refs": {
        "ListImportJobsResponse$importJobSummaries": "<p>Summary information about the import jobs.</p>"
      }
    },
    "ImportJobStatus": {
      "base": null,
      "refs": {
        "ImportJobData$status": "<p>The status of the import job.</p>",
        "ImportJobSummary$status": "<p>The status of the import job.</p>"
      }
    },
    "ImportJobSummary": {
      "base": "<p>Summary information about the import job.</p>",
      "refs": {
        "ImportJobList$member": null
      }
    },
    "ImportJobType": {
      "base": null,
      "refs": {
        "ImportJobData$importJobType": "<p>The type of the import job.</p>",
        "ImportJobSummary$importJobType": "<p>The type of import job.</p>",
        "StartImportJobRequest$importJobType": "<p>The type of the import job.</p> <ul> <li> <p>For importing quick response resource, set the value to <code>QUICK_RESPONSES</code>.</p> </li> </ul>"
      }
    },
    "IntentDetectedDataDetails": {
      "base": "<p>Details about the detected intent.</p>",
      "refs": {
        "DataDetails$intentDetectedData": "<p>Details about the intent data.</p>"
      }
    },
    "IntentInputData": {
      "base": "<p>Information about the Amazon Q intent.</p>",
      "refs": {
        "QueryInputData$intentInputData": "<p>Input information for the intent.</p>"
      }
    },
    "KnowledgeBaseAssociationConfigurationData": {
      "base": "<p>The data of the configuration for a <code>KNOWLEDGE_BASE</code> type Amazon Q in Connect Assistant Association.</p>",
      "refs": {
        "AssociationConfigurationData$knowledgeBaseAssociationConfigurationData": "<p>The data of the configuration for a <code>KNOWLEDGE_BASE</code> type Amazon Q in Connect Assistant Association.</p>"
      }
    },
    "KnowledgeBaseAssociationData": {
      "base": "<p>Association information about the knowledge base.</p>",
      "refs": {
        "AssistantAssociationOutputData$knowledgeBaseAssociation": "<p>The knowledge base where output data is sent.</p>"
      }
    },
    "KnowledgeBaseData": {
      "base": "<p>Information about the knowledge base.</p>",
      "refs": {
        "CreateKnowledgeBaseResponse$knowledgeBase": "<p>The knowledge base.</p>",
        "GetKnowledgeBaseResponse$knowledgeBase": "<p>The knowledge base.</p>",
        "UpdateKnowledgeBaseTemplateUriResponse$knowledgeBase": "<p>The knowledge base to update.</p>"
      }
    },
    "KnowledgeBaseList": {
      "base": null,
      "refs": {
        "ListKnowledgeBasesResponse$knowledgeBaseSummaries": "<p>Information about the knowledge bases.</p>"
      }
    },
    "KnowledgeBaseSearchType": {
      "base": null,
      "refs": {
        "KnowledgeBaseAssociationConfigurationData$overrideKnowledgeBaseSearchType": "<p>The search type to be used against the Knowledge Base for this request. The values can be <code>SEMANTIC</code> which uses vector embeddings or <code>HYBRID</code> which use vector embeddings and raw text</p>",
        "QueryAssistantRequest$overrideKnowledgeBaseSearchType": "<p>The search type to be used against the Knowledge Base for this request. The values can be <code>SEMANTIC</code> which uses vector embeddings or <code>HYBRID</code> which use vector embeddings and raw text.</p>"
      }
    },
    "KnowledgeBaseStatus": {
      "base": null,
      "refs": {
        "KnowledgeBaseData$status": "<p>The status of the knowledge base.</p>",
        "KnowledgeBaseSummary$status": "<p>The status of the knowledge base summary.</p>"
      }
    },
    "KnowledgeBaseSummary": {
      "base": "<p>Summary information about the knowledge base.</p>",
      "refs": {
        "KnowledgeBaseList$member": null
      }
    },
    "KnowledgeBaseType": {
      "base": null,
      "refs": {
        "CreateKnowledgeBaseRequest$knowledgeBaseType": "<p>The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically. </p>",
        "KnowledgeBaseData$knowledgeBaseType": "<p>The type of knowledge base.</p>",
        "KnowledgeBaseSummary$knowledgeBaseType": "<p>The type of knowledge base.</p>"
      }
    },
    "LanguageCode": {
      "base": null,
      "refs": {
        "CreateQuickResponseRequest$language": "<p>The language code value for the language in which the quick response is written. The supported language codes include <code>de_DE</code>, <code>en_US</code>, <code>es_ES</code>, <code>fr_FR</code>, <code>id_ID</code>, <code>it_IT</code>, <code>ja_JP</code>, <code>ko_KR</code>, <code>pt_BR</code>, <code>zh_CN</code>, <code>zh_TW</code> </p>",
        "QuickResponseData$language": "<p>The language code value for the language in which the quick response is written.</p>",
        "QuickResponseSearchResultData$language": "<p>The language code value for the language in which the quick response is written.</p>",
        "UpdateQuickResponseRequest$language": "<p>The language code value for the language in which the quick response is written. The supported language codes include <code>de_DE</code>, <code>en_US</code>, <code>es_ES</code>, <code>fr_FR</code>, <code>id_ID</code>, <code>it_IT</code>, <code>ja_JP</code>, <code>ko_KR</code>, <code>pt_BR</code>, <code>zh_CN</code>, <code>zh_TW</code> </p>"
      }
    },
    "ListAIAgentVersionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAIAgentVersionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAIAgentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAIAgentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAIPromptVersionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAIPromptVersionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAIPromptsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAIPromptsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAssistantAssociationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssistantAssociationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAssistantsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssistantsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListContentAssociationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListContentAssociationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListContentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListContentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListImportJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListImportJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListKnowledgeBasesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListKnowledgeBasesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListQuickResponsesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListQuickResponsesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "LlmModelId": {
      "base": null,
      "refs": {
        "GenerativeReference$modelId": "<p>The identifier of the LLM model. </p>"
      }
    },
    "ManagedSourceConfiguration": {
      "base": "<p>Source configuration for managed resources.</p>",
      "refs": {
        "SourceConfiguration$managedSourceConfiguration": "<p>Source configuration for managed resources.</p>"
      }
    },
    "ManualSearchAIAgentConfiguration": {
      "base": "<p>The configuration for the <code>MANUAL_SEARCH</code> AI Agent type.</p>",
      "refs": {
        "AIAgentConfiguration$manualSearchAIAgentConfiguration": "<p>The configuration for AI Agents of type <code>MANUAL_SEARCH</code>.</p>"
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "GetRecommendationsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "KnowledgeBaseAssociationConfigurationData$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListAIAgentVersionsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListAIAgentsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListAIPromptVersionsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListAIPromptsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListAssistantAssociationsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListAssistantsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListContentAssociationsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListContentsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListImportJobsRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListKnowledgeBasesRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "ListQuickResponsesRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "QueryAssistantRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "SearchContentRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "SearchQuickResponsesRequest$maxResults": "<p>The maximum number of results to return per page.</p>",
        "SearchSessionsRequest$maxResults": "<p>The maximum number of results to return per page.</p>"
      }
    },
    "Name": {
      "base": null,
      "refs": {
        "AIAgentData$name": "<p>The name of the AI Agent.</p>",
        "AIAgentSummary$name": "<p>The name of the AI Agent.</p>",
        "AIPromptData$name": "<p>The name of the AI Prompt</p>",
        "AIPromptSummary$name": "<p>The name of the AI Prompt.</p>",
        "AssistantData$name": "<p>The name.</p>",
        "AssistantSummary$name": "<p>The name of the assistant.</p>",
        "ContentData$name": "<p>The name of the content.</p>",
        "ContentSummary$name": "<p>The name of the content.</p>",
        "CreateAIAgentRequest$name": "<p>The name of the AI Agent.</p>",
        "CreateAIPromptRequest$name": "<p>The name of the AI Prompt.</p>",
        "CreateAssistantRequest$name": "<p>The name of the assistant.</p>",
        "CreateContentRequest$name": "<p>The name of the content. Each piece of content in a knowledge base must have a unique name. You can retrieve a piece of content using only its knowledge base and its name with the <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_SearchContent.html\">SearchContent</a> API.</p>",
        "CreateKnowledgeBaseRequest$name": "<p>The name of the knowledge base.</p>",
        "CreateSessionRequest$name": "<p>The name of the session.</p>",
        "KnowledgeBaseData$name": "<p>The name of the knowledge base.</p>",
        "KnowledgeBaseSummary$name": "<p>The name of the knowledge base.</p>",
        "SessionData$name": "<p>The name of the session.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListAIAgentVersionsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAIAgentVersionsResponse$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAIAgentsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAIAgentsResponse$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAIPromptVersionsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAIPromptVersionsResponse$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAIPromptsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAIPromptsResponse$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAssistantAssociationsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAssistantAssociationsResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>",
        "ListAssistantsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListAssistantsResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>",
        "ListContentAssociationsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListContentAssociationsResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>",
        "ListContentsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListContentsResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>",
        "QueryAssistantRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "QueryAssistantResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>",
        "SearchContentRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "SearchContentResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>",
        "SearchSessionsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "SearchSessionsResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>"
      }
    },
    "NonEmptySensitiveString": {
      "base": null,
      "refs": {
        "RuntimeSessionData$key": "<p>The key of the data stored on the session.</p>",
        "RuntimeSessionDataValue$stringValue": "<p>The string value of the data stored on the session.</p>"
      }
    },
    "NonEmptyString": {
      "base": null,
      "refs": {
        "ConnectConfiguration$instanceId": "<p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>",
        "ContentData$revisionId": "<p>The identifier of the content revision.</p>",
        "ContentMetadata$key": null,
        "ContentMetadata$value": null,
        "ContentSummary$revisionId": "<p>The identifier of the revision of the content.</p>",
        "CreateContentRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateKnowledgeBaseRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "CreateQuickResponseRequest$clientToken": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.</p>",
        "FailureReason$member": null,
        "Filter$value": "<p>The desired field value on which to filter.</p>",
        "Headers$key": null,
        "Headers$value": null,
        "ListImportJobsRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListImportJobsResponse$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListKnowledgeBasesRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListKnowledgeBasesResponse$nextToken": "<p>If there are additional results, this is the token for the next set of results.</p>",
        "ListQuickResponsesRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ListQuickResponsesResponse$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ObjectFieldsList$member": null,
        "QueryConditionItem$value": "<p>The value for the query condition to query on.</p>",
        "QuickResponseFilterField$name": "<p>The name of the attribute field to filter the quick responses by.</p>",
        "QuickResponseOrderField$name": "<p>The name of the attribute to order the quick response query results by.</p>",
        "QuickResponseQueryField$name": "<p>The name of the attribute to query the quick responses by.</p>",
        "SearchQuickResponsesRequest$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "SearchQuickResponsesResponse$nextToken": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
        "ServerSideEncryptionConfiguration$kmsKeyId": "<p>The customer managed key used for encryption. For more information about setting up a customer managed key for Amazon Q in Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html\">Enable Amazon Q in Connect for your instance</a>. For information about valid ID values, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\">Key identifiers (KeyId)</a>.</p>",
        "StartImportJobRequest$clientToken": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "UpdateContentRequest$revisionId": "<p>The <code>revisionId</code> of the content resource to update, taken from an earlier call to <code>GetContent</code>, <code>GetContentSummary</code>, <code>SearchContent</code>, or <code>ListContents</code>. If included, this argument acts as an optimistic lock to ensure content was not modified since it was last read. If it has been modified, this API throws a <code>PreconditionFailedException</code>.</p>"
      }
    },
    "NotifyRecommendationsReceivedError": {
      "base": "<p>An error occurred when creating a recommendation.</p>",
      "refs": {
        "NotifyRecommendationsReceivedErrorList$member": null
      }
    },
    "NotifyRecommendationsReceivedErrorList": {
      "base": null,
      "refs": {
        "NotifyRecommendationsReceivedResponse$errors": "<p>The identifiers of recommendations that are causing errors.</p>"
      }
    },
    "NotifyRecommendationsReceivedErrorMessage": {
      "base": null,
      "refs": {
        "NotifyRecommendationsReceivedError$message": "<p>A recommendation is causing an error.</p>"
      }
    },
    "NotifyRecommendationsReceivedRequest": {
      "base": null,
      "refs": {
      }
    },
    "NotifyRecommendationsReceivedResponse": {
      "base": null,
      "refs": {
      }
    },
    "ObjectFieldsList": {
      "base": null,
      "refs": {
        "AppIntegrationsConfiguration$objectFields": "<p>The fields from the source that are made available to your agents in Amazon Q in Connect. Optional if ObjectConfiguration is included in the provided DataIntegration. </p> <ul> <li> <p> For <a href=\"https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"> Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>. </p> </li> <li> <p>For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"> ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>. </p> </li> <li> <p>For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"> Zendesk</a>, you must include at least <code>id</code>, <code>title</code>, <code>updated_at</code>, and <code>draft</code>. </p> </li> </ul> <p>Make sure to include additional fields. These fields are indexed and used to source recommendations. </p>"
      }
    },
    "OrCondition": {
      "base": "<p>A list of conditions which would be applied together with an <code>OR</code> condition.</p>",
      "refs": {
        "OrConditions$member": null
      }
    },
    "OrConditions": {
      "base": null,
      "refs": {
        "TagFilter$orConditions": "<p>A list of conditions which would be applied together with an <code>OR</code> condition.</p>"
      }
    },
    "Order": {
      "base": null,
      "refs": {
        "QuickResponseOrderField$order": "<p>The order at which the quick responses are sorted by.</p>"
      }
    },
    "Origin": {
      "base": null,
      "refs": {
        "AIAgentData$origin": "<p>Specifies the origin of the AI Agent. <code>SYSTEM</code> for a default AI Agent created by Q in Connect or <code>CUSTOMER</code> for an AI Agent created by calling AI Agent creation APIs. </p>",
        "AIAgentSummary$origin": "<p>The origin of the AI Agent. <code>SYSTEM</code> for a default AI Agent created by Q in Connect or <code>CUSTOMER</code> for an AI Agent created by calling AI Agent creation APIs.</p>",
        "AIPromptData$origin": "<p>The origin of the AI Prompt. <code>SYSTEM</code> for a default AI Prompt created by Q in Connect or <code>CUSTOMER</code> for an AI Prompt created by calling AI Prompt creation APIs. </p>",
        "AIPromptSummary$origin": "<p>The origin of the AI Prompt. <code>SYSTEM</code> for a default AI Prompt created by Q in Connect or <code>CUSTOMER</code> for an AI Prompt created by calling AI Prompt creation APIs. </p>",
        "ListAIAgentVersionsRequest$origin": "<p>The origin of the AI Agent versions to be listed. <code>SYSTEM</code> for a default AI Agent created by Q in Connect or <code>CUSTOMER</code> for an AI Agent created by calling AI Agent creation APIs. </p>",
        "ListAIAgentsRequest$origin": "<p>The origin of the AI Agents to be listed. <code>SYSTEM</code> for a default AI Agent created by Q in Connect or <code>CUSTOMER</code> for an AI Agent created by calling AI Agent creation APIs. </p>",
        "ListAIPromptVersionsRequest$origin": "<p>The origin of the AI Prompt versions to be listed. <code>SYSTEM</code> for a default AI Agent created by Q in Connect or <code>CUSTOMER</code> for an AI Agent created by calling AI Agent creation APIs. </p>",
        "ListAIPromptsRequest$origin": "<p>The origin of the AI Prompts to be listed. <code>SYSTEM</code> for a default AI Agent created by Q in Connect or <code>CUSTOMER</code> for an AI Agent created by calling AI Agent creation APIs. </p>"
      }
    },
    "ParsingConfiguration": {
      "base": "<p>Settings for parsing document contents. By default, the service converts the contents of each document into text before splitting it into chunks. To improve processing of PDF files with tables and images, you can configure the data source to convert the pages of text into images and use a model to describe the contents of each page.</p>",
      "refs": {
        "VectorIngestionConfiguration$parsingConfiguration": "<p>A custom parser for data source documents.</p>"
      }
    },
    "ParsingPrompt": {
      "base": "<p>Instructions for interpreting the contents of a document.</p>",
      "refs": {
        "BedrockFoundationModelConfigurationForParsing$parsingPrompt": "<p>Instructions for interpreting the contents of a document.</p>"
      }
    },
    "ParsingPromptText": {
      "base": null,
      "refs": {
        "ParsingPrompt$parsingPromptText": "<p>Instructions for interpreting the contents of a document.</p>"
      }
    },
    "ParsingStrategy": {
      "base": null,
      "refs": {
        "ParsingConfiguration$parsingStrategy": "<p>The parsing strategy for the data source.</p>"
      }
    },
    "PreconditionFailedException": {
      "base": "<p>The provided <code>revisionId</code> does not match, indicating the content has been modified since it was last read.</p>",
      "refs": {
      }
    },
    "Priority": {
      "base": null,
      "refs": {
        "QuickResponseQueryField$priority": "<p>The importance of the attribute field when calculating query result relevancy scores. The value set for this parameter affects the ordering of search results.</p>"
      }
    },
    "PutFeedbackRequest": {
      "base": null,
      "refs": {
      }
    },
    "PutFeedbackResponse": {
      "base": null,
      "refs": {
      }
    },
    "QueryAssistantRequest": {
      "base": null,
      "refs": {
      }
    },
    "QueryAssistantResponse": {
      "base": null,
      "refs": {
      }
    },
    "QueryCondition": {
      "base": "<p>Information about how to query content.</p>",
      "refs": {
        "QueryConditionExpression$member": null
      }
    },
    "QueryConditionComparisonOperator": {
      "base": null,
      "refs": {
        "QueryConditionItem$comparator": "<p>The comparison operator for query condition to query on.</p>"
      }
    },
    "QueryConditionExpression": {
      "base": null,
      "refs": {
        "QueryAssistantRequest$queryCondition": "<p>Information about how to query content.</p>"
      }
    },
    "QueryConditionFieldName": {
      "base": null,
      "refs": {
        "QueryConditionItem$field": "<p> The name of the field for query condition to query on.</p>"
      }
    },
    "QueryConditionItem": {
      "base": "<p>The condition for the query.</p>",
      "refs": {
        "QueryCondition$single": "<p>The condition for the query.</p>"
      }
    },
    "QueryInputData": {
      "base": "<p>Input information for the query.</p>",
      "refs": {
        "QueryAssistantRequest$queryInputData": "<p>Information about the query.</p>"
      }
    },
    "QueryRecommendationTriggerData": {
      "base": "<p>Data associated with the QUERY RecommendationTriggerType.</p>",
      "refs": {
        "RecommendationTriggerData$query": "<p>Data associated with the QUERY RecommendationTriggerType.</p>"
      }
    },
    "QueryResultType": {
      "base": null,
      "refs": {
        "ResultData$type": "<p>The type of the query result.</p>"
      }
    },
    "QueryResultsList": {
      "base": null,
      "refs": {
        "QueryAssistantResponse$results": "<p>The results of the query.</p>"
      }
    },
    "QueryText": {
      "base": null,
      "refs": {
        "QueryAssistantRequest$queryText": "<p>The text to search for.</p>",
        "QueryRecommendationTriggerData$text": "<p>The text associated with the recommendation trigger.</p>",
        "QueryTextInputData$text": "<p>The text to search for.</p>"
      }
    },
    "QueryTextInputData": {
      "base": "<p>Information about the text to search for.</p>",
      "refs": {
        "QueryInputData$queryTextInputData": "<p>Input information for the query.</p>"
      }
    },
    "QuickResponseContent": {
      "base": null,
      "refs": {
        "QuickResponseContentProvider$content": "<p>The content of the quick response.</p>",
        "QuickResponseDataProvider$content": "<p>The content of the quick response.</p>"
      }
    },
    "QuickResponseContentProvider": {
      "base": "<p>The container quick response content.</p>",
      "refs": {
        "QuickResponseContents$markdown": null,
        "QuickResponseContents$plainText": null
      }
    },
    "QuickResponseContents": {
      "base": "<p>The content of the quick response stored in different media types.</p>",
      "refs": {
        "QuickResponseData$contents": "<p>The contents of the quick response.</p>",
        "QuickResponseSearchResultData$contents": "<p>The contents of the quick response.</p>"
      }
    },
    "QuickResponseData": {
      "base": "<p>Information about the quick response.</p>",
      "refs": {
        "CreateQuickResponseResponse$quickResponse": "<p>The quick response.</p>",
        "GetQuickResponseResponse$quickResponse": "<p>The quick response.</p>",
        "UpdateQuickResponseResponse$quickResponse": "<p>The quick response.</p>"
      }
    },
    "QuickResponseDataProvider": {
      "base": "<p>The container of quick response data.</p>",
      "refs": {
        "CreateQuickResponseRequest$content": "<p>The content of the quick response.</p>",
        "UpdateQuickResponseRequest$content": "<p>The updated content of the quick response.</p>"
      }
    },
    "QuickResponseDescription": {
      "base": null,
      "refs": {
        "CreateQuickResponseRequest$description": "<p>The description of the quick response.</p>",
        "QuickResponseData$description": "<p>The description of the quick response.</p>",
        "QuickResponseSearchResultData$description": "<p>The description of the quick response.</p>",
        "QuickResponseSummary$description": "<p>The description of the quick response.</p>",
        "UpdateQuickResponseRequest$description": "<p>The updated description of the quick response.</p>"
      }
    },
    "QuickResponseFilterField": {
      "base": "<p>The quick response fields to filter the quick response query results by.</p> <p>The following is the list of supported field names.</p> <ul> <li> <p>name</p> </li> <li> <p>description</p> </li> <li> <p>shortcutKey</p> </li> <li> <p>isActive</p> </li> <li> <p>channels</p> </li> <li> <p>language</p> </li> <li> <p>contentType</p> </li> <li> <p>createdTime</p> </li> <li> <p>lastModifiedTime</p> </li> <li> <p>lastModifiedBy</p> </li> <li> <p>groupingConfiguration.criteria</p> </li> <li> <p>groupingConfiguration.values</p> </li> </ul>",
      "refs": {
        "QuickResponseFilterFieldList$member": null
      }
    },
    "QuickResponseFilterFieldList": {
      "base": null,
      "refs": {
        "QuickResponseSearchExpression$filters": "<p>The configuration of filtering rules applied to quick response query results.</p>"
      }
    },
    "QuickResponseFilterOperator": {
      "base": null,
      "refs": {
        "QuickResponseFilterField$operator": "<p>The operator to use for filtering.</p>"
      }
    },
    "QuickResponseFilterValue": {
      "base": null,
      "refs": {
        "QuickResponseFilterValueList$member": null
      }
    },
    "QuickResponseFilterValueList": {
      "base": null,
      "refs": {
        "QuickResponseFilterField$values": "<p>The values of attribute field to filter the quick response by.</p>"
      }
    },
    "QuickResponseName": {
      "base": null,
      "refs": {
        "CreateQuickResponseRequest$name": "<p>The name of the quick response.</p>",
        "QuickResponseData$name": "<p>The name of the quick response.</p>",
        "QuickResponseSearchResultData$name": "<p>The name of the quick response.</p>",
        "QuickResponseSummary$name": "<p>The name of the quick response.</p>",
        "UpdateQuickResponseRequest$name": "<p>The name of the quick response.</p>"
      }
    },
    "QuickResponseOrderField": {
      "base": "<p>The quick response fields to order the quick response query results by.</p> <p>The following is the list of supported field names.</p> <ul> <li> <p>name</p> </li> <li> <p>description</p> </li> <li> <p>shortcutKey</p> </li> <li> <p>isActive</p> </li> <li> <p>channels</p> </li> <li> <p>language</p> </li> <li> <p>contentType</p> </li> <li> <p>createdTime</p> </li> <li> <p>lastModifiedTime</p> </li> <li> <p>lastModifiedBy</p> </li> <li> <p>groupingConfiguration.criteria</p> </li> <li> <p>groupingConfiguration.values</p> </li> </ul>",
      "refs": {
        "QuickResponseSearchExpression$orderOnField": "<p>The quick response attribute fields on which the query results are ordered.</p>"
      }
    },
    "QuickResponseQueryField": {
      "base": "<p>The quick response fields to query quick responses by.</p> <p>The following is the list of supported field names.</p> <ul> <li> <p>content</p> </li> <li> <p>name</p> </li> <li> <p>description</p> </li> <li> <p>shortcutKey</p> </li> </ul>",
      "refs": {
        "QuickResponseQueryFieldList$member": null
      }
    },
    "QuickResponseQueryFieldList": {
      "base": null,
      "refs": {
        "QuickResponseSearchExpression$queries": "<p>The quick response query expressions.</p>"
      }
    },
    "QuickResponseQueryOperator": {
      "base": null,
      "refs": {
        "QuickResponseQueryField$operator": "<p>The operator to use for matching attribute field values in the query.</p>"
      }
    },
    "QuickResponseQueryValue": {
      "base": null,
      "refs": {
        "QuickResponseQueryValueList$member": null
      }
    },
    "QuickResponseQueryValueList": {
      "base": null,
      "refs": {
        "QuickResponseQueryField$values": "<p>The values of the attribute to query the quick responses by.</p>"
      }
    },
    "QuickResponseSearchExpression": {
      "base": "<p>Information about the import job.</p>",
      "refs": {
        "SearchQuickResponsesRequest$searchExpression": "<p>The search expression for querying the quick response.</p>"
      }
    },
    "QuickResponseSearchResultData": {
      "base": "<p>The result of quick response search.</p>",
      "refs": {
        "QuickResponseSearchResultsList$member": null
      }
    },
    "QuickResponseSearchResultsList": {
      "base": null,
      "refs": {
        "SearchQuickResponsesResponse$results": "<p>The results of the quick response search.</p>"
      }
    },
    "QuickResponseStatus": {
      "base": null,
      "refs": {
        "QuickResponseData$status": "<p>The status of the quick response data.</p>",
        "QuickResponseSearchResultData$status": "<p>The resource status of the quick response.</p>",
        "QuickResponseSummary$status": "<p>The resource status of the quick response.</p>"
      }
    },
    "QuickResponseSummary": {
      "base": "<p>The summary information about the quick response.</p>",
      "refs": {
        "QuickResponseSummaryList$member": null
      }
    },
    "QuickResponseSummaryList": {
      "base": null,
      "refs": {
        "ListQuickResponsesResponse$quickResponseSummaries": "<p>Summary information about the quick responses.</p>"
      }
    },
    "QuickResponseType": {
      "base": null,
      "refs": {
        "CreateQuickResponseRequest$contentType": "<p>The media type of the quick response content.</p> <ul> <li> <p>Use <code>application/x.quickresponse;format=plain</code> for a quick response written in plain text.</p> </li> <li> <p>Use <code>application/x.quickresponse;format=markdown</code> for a quick response written in richtext.</p> </li> </ul>",
        "QuickResponseData$contentType": "<p>The media type of the quick response content.</p> <ul> <li> <p>Use <code>application/x.quickresponse;format=plain</code> for quick response written in plain text.</p> </li> <li> <p>Use <code>application/x.quickresponse;format=markdown</code> for quick response written in richtext.</p> </li> </ul>",
        "QuickResponseSearchResultData$contentType": "<p>The media type of the quick response content.</p> <ul> <li> <p>Use <code>application/x.quickresponse;format=plain</code> for quick response written in plain text.</p> </li> <li> <p>Use <code>application/x.quickresponse;format=markdown</code> for quick response written in richtext.</p> </li> </ul>",
        "QuickResponseSummary$contentType": "<p>The media type of the quick response content.</p> <ul> <li> <p>Use <code>application/x.quickresponse;format=plain</code> for quick response written in plain text.</p> </li> <li> <p>Use <code>application/x.quickresponse;format=markdown</code> for quick response written in richtext.</p> </li> </ul>",
        "UpdateQuickResponseRequest$contentType": "<p>The media type of the quick response content.</p> <ul> <li> <p>Use <code>application/x.quickresponse;format=plain</code> for quick response written in plain text.</p> </li> <li> <p>Use <code>application/x.quickresponse;format=markdown</code> for quick response written in richtext.</p> </li> </ul>"
      }
    },
    "RankingData": {
      "base": "<p>Details about the source content ranking data.</p>",
      "refs": {
        "ContentDataDetails$rankingData": "<p>Details about the content ranking data.</p>",
        "GenerativeDataDetails$rankingData": "<p>Details about the generative content ranking data.</p>",
        "SourceContentDataDetails$rankingData": "<p>Details about the source content ranking data.</p>"
      }
    },
    "RecommendationData": {
      "base": "<p>Information about the recommendation.</p>",
      "refs": {
        "RecommendationList$member": null
      }
    },
    "RecommendationId": {
      "base": null,
      "refs": {
        "NotifyRecommendationsReceivedError$recommendationId": "<p>The identifier of the recommendation that is in error.</p>",
        "RecommendationData$recommendationId": "<p>The identifier of the recommendation.</p>",
        "RecommendationIdList$member": null
      }
    },
    "RecommendationIdList": {
      "base": null,
      "refs": {
        "NotifyRecommendationsReceivedRequest$recommendationIds": "<p>The identifiers of the recommendations.</p>",
        "NotifyRecommendationsReceivedResponse$recommendationIds": "<p>The identifiers of the recommendations.</p>",
        "RecommendationTrigger$recommendationIds": "<p>The identifiers of the recommendations.</p>"
      }
    },
    "RecommendationList": {
      "base": null,
      "refs": {
        "GetRecommendationsResponse$recommendations": "<p>The recommendations.</p>"
      }
    },
    "RecommendationSourceType": {
      "base": null,
      "refs": {
        "RecommendationTrigger$source": "<p>The source of the recommendation trigger.</p> <ul> <li> <p>ISSUE_DETECTION: The corresponding recommendations were triggered by a Contact Lens issue.</p> </li> <li> <p>RULE_EVALUATION: The corresponding recommendations were triggered by a Contact Lens rule.</p> </li> </ul>"
      }
    },
    "RecommendationTrigger": {
      "base": "<p>A recommendation trigger provides context on the event that produced the referenced recommendations. Recommendations are only referenced in <code>recommendationIds</code> by a single RecommendationTrigger.</p>",
      "refs": {
        "RecommendationTriggerList$member": null
      }
    },
    "RecommendationTriggerData": {
      "base": "<p>A union type containing information related to the trigger.</p>",
      "refs": {
        "RecommendationTrigger$data": "<p>A union type containing information related to the trigger.</p>"
      }
    },
    "RecommendationTriggerList": {
      "base": null,
      "refs": {
        "GetRecommendationsResponse$triggers": "<p>The triggers corresponding to recommendations.</p>"
      }
    },
    "RecommendationTriggerType": {
      "base": null,
      "refs": {
        "RecommendationTrigger$type": "<p>The type of recommendation trigger.</p>"
      }
    },
    "RecommendationType": {
      "base": null,
      "refs": {
        "RecommendationData$type": "<p>The type of recommendation.</p>"
      }
    },
    "ReferenceType": {
      "base": null,
      "refs": {
        "ContentReference$referenceType": "<p>The type of reference content.</p>"
      }
    },
    "Relevance": {
      "base": null,
      "refs": {
        "GenerativeContentFeedbackData$relevance": "<p>The relevance of the feedback.</p>"
      }
    },
    "RelevanceLevel": {
      "base": null,
      "refs": {
        "RankingData$relevanceLevel": "<p>The relevance score of the content.</p>",
        "RecommendationData$relevanceLevel": "<p>The relevance level of the recommendation.</p>"
      }
    },
    "RelevanceScore": {
      "base": null,
      "refs": {
        "RankingData$relevanceScore": "<p>The relevance level of the recommendation.</p>",
        "RecommendationData$relevanceScore": "<p>The relevance score of the recommendation.</p>",
        "ResultData$relevanceScore": "<p>The relevance score of the results.</p>"
      }
    },
    "RemoveAssistantAIAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveAssistantAIAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "RemoveKnowledgeBaseTemplateUriRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveKnowledgeBaseTemplateUriResponse": {
      "base": null,
      "refs": {
      }
    },
    "RenderingConfiguration": {
      "base": "<p>Information about how to render the content.</p>",
      "refs": {
        "CreateKnowledgeBaseRequest$renderingConfiguration": "<p>Information about how to render the content.</p>",
        "KnowledgeBaseData$renderingConfiguration": "<p>Information about how to render the content.</p>",
        "KnowledgeBaseSummary$renderingConfiguration": "<p>Information about how to render the content.</p>"
      }
    },
    "RequestTimeoutException": {
      "base": "<p>The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future.</p>",
      "refs": {
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The specified resource does not exist.</p>",
      "refs": {
      }
    },
    "ResultData": {
      "base": "<p>Information about the result.</p>",
      "refs": {
        "QueryResultsList$member": null
      }
    },
    "RuntimeSessionData": {
      "base": "<p>The list of key-value pairs that are stored on the session.</p>",
      "refs": {
        "RuntimeSessionDataList$member": null
      }
    },
    "RuntimeSessionDataList": {
      "base": null,
      "refs": {
        "UpdateSessionDataRequest$data": "<p>The data stored on the Amazon Q in Connect Session.</p>",
        "UpdateSessionDataResponse$data": "<p>Data stored in the session.</p>"
      }
    },
    "RuntimeSessionDataValue": {
      "base": "<p>A union type that specifies the data stored on the session.</p>",
      "refs": {
        "RuntimeSessionData$value": "<p>The value of the data stored on the session.</p>"
      }
    },
    "SearchContentRequest": {
      "base": null,
      "refs": {
      }
    },
    "SearchContentResponse": {
      "base": null,
      "refs": {
      }
    },
    "SearchExpression": {
      "base": "<p>The search expression.</p>",
      "refs": {
        "SearchContentRequest$searchExpression": "<p>The search expression to filter results.</p>",
        "SearchSessionsRequest$searchExpression": "<p>The search expression to filter results.</p>"
      }
    },
    "SearchQuickResponsesRequest": {
      "base": null,
      "refs": {
      }
    },
    "SearchQuickResponsesResponse": {
      "base": null,
      "refs": {
      }
    },
    "SearchSessionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "SearchSessionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "SeedUrl": {
      "base": "<p>A URL for crawling.</p>",
      "refs": {
        "SeedUrls$member": null
      }
    },
    "SeedUrls": {
      "base": null,
      "refs": {
        "UrlConfiguration$seedUrls": "<p>List of URLs for crawling.</p>"
      }
    },
    "SemanticChunkingConfiguration": {
      "base": "<p>Settings for semantic document chunking for a data source. Semantic chunking splits a document into smaller documents based on groups of similar content derived from the text with natural language processing.</p>",
      "refs": {
        "ChunkingConfiguration$semanticChunkingConfiguration": "<p>Settings for semantic document chunking for a data source. Semantic chunking splits a document into smaller documents based on groups of similar content derived from the text with natural language processing.</p>"
      }
    },
    "SemanticChunkingConfigurationBreakpointPercentileThresholdInteger": {
      "base": null,
      "refs": {
        "SemanticChunkingConfiguration$breakpointPercentileThreshold": "<p>The dissimilarity threshold for splitting chunks.</p>"
      }
    },
    "SemanticChunkingConfigurationBufferSizeInteger": {
      "base": null,
      "refs": {
        "SemanticChunkingConfiguration$bufferSize": "<p>The buffer size.</p>"
      }
    },
    "SemanticChunkingConfigurationMaxTokensInteger": {
      "base": null,
      "refs": {
        "SemanticChunkingConfiguration$maxTokens": "<p>The maximum number of tokens that a chunk can contain.</p>"
      }
    },
    "SensitiveString": {
      "base": null,
      "refs": {
        "DocumentText$text": "<p>Text in the document.</p>",
        "GenerativeDataDetails$completion": "<p>The LLM response.</p>",
        "IntentDetectedDataDetails$intent": "<p>The detected intent.</p>"
      }
    },
    "ServerSideEncryptionConfiguration": {
      "base": "<p>The configuration information for the customer managed key used for encryption.</p>",
      "refs": {
        "AssistantData$serverSideEncryptionConfiguration": "<p>The configuration information for the customer managed key used for encryption. </p> <p>This KMS key must have a policy that allows <code>kms:CreateGrant</code>, <code>kms:DescribeKey</code>, <code>kms:Decrypt</code>, and <code>kms:GenerateDataKey*</code> permissions to the IAM identity using the key to invoke Amazon Q in Connect. To use Amazon Q in Connect with chat, the key policy must also allow <code>kms:Decrypt</code>, <code>kms:GenerateDataKey*</code>, and <code>kms:DescribeKey</code> permissions to the <code>connect.amazonaws.com</code> service principal. </p> <p>For more information about setting up a customer managed key for Amazon Q in Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html\">Enable Amazon Q in Connect for your instance</a>.</p>",
        "AssistantSummary$serverSideEncryptionConfiguration": "<p>The configuration information for the customer managed key used for encryption. </p> <p>This KMS key must have a policy that allows <code>kms:CreateGrant</code>, <code>kms:DescribeKey</code>, <code>kms:Decrypt</code>, and <code>kms:GenerateDataKey*</code> permissions to the IAM identity using the key to invoke Amazon Q in Connect. To use Amazon Q in Connect with chat, the key policy must also allow <code>kms:Decrypt</code>, <code>kms:GenerateDataKey*</code>, and <code>kms:DescribeKey</code> permissions to the <code>connect.amazonaws.com</code> service principal. </p> <p>For more information about setting up a customer managed key for Amazon Q in Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html\">Enable Amazon Q in Connect for your instance</a>.</p>",
        "CreateAssistantRequest$serverSideEncryptionConfiguration": "<p>The configuration information for the customer managed key used for encryption. </p> <p>The customer managed key must have a policy that allows <code>kms:CreateGrant</code>, <code> kms:DescribeKey</code>, <code>kms:Decrypt</code>, and <code>kms:GenerateDataKey*</code> permissions to the IAM identity using the key to invoke Amazon Q in Connect. To use Amazon Q in Connect with chat, the key policy must also allow <code>kms:Decrypt</code>, <code>kms:GenerateDataKey*</code>, and <code>kms:DescribeKey</code> permissions to the <code>connect.amazonaws.com</code> service principal. </p> <p>For more information about setting up a customer managed key for Amazon Q in Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html\">Enable Amazon Q in Connect for your instance</a>.</p>",
        "CreateKnowledgeBaseRequest$serverSideEncryptionConfiguration": "<p>The configuration information for the customer managed key used for encryption. </p> <p>This KMS key must have a policy that allows <code>kms:CreateGrant</code>, <code>kms:DescribeKey</code>, <code>kms:Decrypt</code>, and <code>kms:GenerateDataKey*</code> permissions to the IAM identity using the key to invoke Amazon Q in Connect.</p> <p>For more information about setting up a customer managed key for Amazon Q in Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html\">Enable Amazon Q in Connect for your instance</a>.</p>",
        "KnowledgeBaseData$serverSideEncryptionConfiguration": "<p>The configuration information for the customer managed key used for encryption. </p> <p>This KMS key must have a policy that allows <code>kms:CreateGrant</code>, <code>kms:DescribeKey</code>, <code>kms:Decrypt</code>, and <code>kms:GenerateDataKey*</code> permissions to the IAM identity using the key to invoke Amazon Q in Connect. </p> <p>For more information about setting up a customer managed key for Amazon Q in Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html\">Enable Amazon Q in Connect for your instance</a>.</p>",
        "KnowledgeBaseSummary$serverSideEncryptionConfiguration": "<p>The configuration information for the customer managed key used for encryption. </p> <p>This KMS key must have a policy that allows <code>kms:CreateGrant</code>, <code>kms:DescribeKey</code>, <code>kms:Decrypt</code>, and <code>kms:GenerateDataKey*</code> permissions to the IAM identity using the key to invoke Amazon Q in Connect. </p> <p>For more information about setting up a customer managed key for Amazon Q in Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html\">Enable Amazon Q in Connect for your instance</a>.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.</p>",
      "refs": {
      }
    },
    "SessionData": {
      "base": "<p>Information about the session.</p>",
      "refs": {
        "CreateSessionResponse$session": "<p>The session.</p>",
        "GetSessionResponse$session": "<p>The session.</p>",
        "UpdateSessionResponse$session": null
      }
    },
    "SessionDataNamespace": {
      "base": null,
      "refs": {
        "UpdateSessionDataRequest$namespace": "<p>The namespace into which the session data is stored. Supported namespaces are: Custom</p>",
        "UpdateSessionDataResponse$namespace": "<p>The namespace into which the session data is stored. Supported namespaces are: Custom</p>"
      }
    },
    "SessionIntegrationConfiguration": {
      "base": "<p>The configuration information for the session integration.</p>",
      "refs": {
        "SessionData$integrationConfiguration": "<p>The configuration information for the session integration.</p>"
      }
    },
    "SessionSummaries": {
      "base": null,
      "refs": {
        "SearchSessionsResponse$sessionSummaries": "<p>Summary information about the sessions.</p>"
      }
    },
    "SessionSummary": {
      "base": "<p>Summary information about the session.</p>",
      "refs": {
        "SessionSummaries$member": null
      }
    },
    "ShortCutKey": {
      "base": null,
      "refs": {
        "CreateQuickResponseRequest$shortcutKey": "<p>The shortcut key of the quick response. The value should be unique across the knowledge base. </p>",
        "QuickResponseData$shortcutKey": "<p>The shortcut key of the quick response. The value should be unique across the knowledge base.</p>",
        "QuickResponseSearchResultData$shortcutKey": "<p>The shortcut key of the quick response. The value should be unique across the knowledge base.</p>",
        "UpdateQuickResponseRequest$shortcutKey": "<p>The shortcut key of the quick response. The value should be unique across the knowledge base.</p>"
      }
    },
    "SourceConfiguration": {
      "base": "<p>Configuration information about the external data source.</p>",
      "refs": {
        "CreateKnowledgeBaseRequest$sourceConfiguration": "<p>The source of the knowledge base content. Only set this argument for EXTERNAL knowledge bases.</p>",
        "KnowledgeBaseData$sourceConfiguration": "<p>Source configuration information about the knowledge base.</p>",
        "KnowledgeBaseSummary$sourceConfiguration": "<p>Configuration information about the external data source.</p>"
      }
    },
    "SourceContentDataDetails": {
      "base": "<p>Details about the source content data.</p>",
      "refs": {
        "DataDetails$sourceContentData": "<p>Details about the content data.</p>"
      }
    },
    "SourceContentType": {
      "base": null,
      "refs": {
        "SourceContentDataDetails$type": "<p>The type of the source content.</p>"
      }
    },
    "StartContentUploadRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartContentUploadResponse": {
      "base": null,
      "refs": {
      }
    },
    "StartImportJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartImportJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "Status": {
      "base": null,
      "refs": {
        "AIAgentData$status": "<p>The status of the AI Agent.</p>",
        "AIAgentSummary$status": "<p>The status of the AI Agent.</p>",
        "AIPromptData$status": "<p>The status of the AI Prompt.</p>",
        "AIPromptSummary$status": "<p>The status of the AI Prompt.</p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "AccessDeniedException$message": null,
        "ConflictException$message": null,
        "ContentReference$sourceURL": "<p>The web URL of the source content.</p>",
        "PreconditionFailedException$message": null,
        "RequestTimeoutException$message": null,
        "ResourceNotFoundException$message": null,
        "ResourceNotFoundException$resourceName": "<p>The specified resource name.</p>",
        "ServiceQuotaExceededException$message": null,
        "ThrottlingException$message": null,
        "TooManyTagsException$message": null,
        "TooManyTagsException$resourceName": "<p>The specified resource name.</p>",
        "ValidationException$message": null
      }
    },
    "SyncStatus": {
      "base": null,
      "refs": {
        "KnowledgeBaseData$ingestionStatus": "<p>Status of ingestion on data source.</p>"
      }
    },
    "SyntheticTimestamp_epoch_seconds": {
      "base": null,
      "refs": {
        "ContentData$urlExpiry": "<p>The expiration time of the URL as an epoch timestamp.</p>",
        "ImportJobData$createdTime": "<p>The timestamp when the import job was created.</p>",
        "ImportJobData$lastModifiedTime": "<p>The timestamp when the import job data was last modified.</p>",
        "ImportJobData$urlExpiry": "<p>The expiration time of the URL as an epoch timestamp.</p>",
        "ImportJobSummary$createdTime": "<p>The timestamp when the import job was created.</p>",
        "ImportJobSummary$lastModifiedTime": "<p>The timestamp when the import job was last modified.</p>",
        "KnowledgeBaseData$lastContentModificationTime": "<p>An epoch timestamp indicating the most recent content modification inside the knowledge base. If no content exists in a knowledge base, this value is unset.</p>",
        "QuickResponseData$createdTime": "<p>The timestamp when the quick response was created.</p>",
        "QuickResponseData$lastModifiedTime": "<p>The timestamp when the quick response data was last modified.</p>",
        "QuickResponseSearchResultData$createdTime": "<p>The timestamp when the quick response was created.</p>",
        "QuickResponseSearchResultData$lastModifiedTime": "<p>The timestamp when the quick response search result data was last modified.</p>",
        "QuickResponseSummary$createdTime": "<p>The timestamp when the quick response was created.</p>",
        "QuickResponseSummary$lastModifiedTime": "<p>The timestamp when the quick response summary was last modified.</p>",
        "StartContentUploadResponse$urlExpiry": "<p>The expiration time of the URL as an epoch timestamp.</p>"
      }
    },
    "TagCondition": {
      "base": "<p>A leaf node condition which can be used to specify a tag condition. </p>",
      "refs": {
        "AndConditions$member": null,
        "OrCondition$tagCondition": "<p>A leaf node condition which can be used to specify a tag condition.</p>",
        "TagFilter$tagCondition": "<p>A leaf node condition which can be used to specify a tag condition.</p>"
      }
    },
    "TagFilter": {
      "base": "<p>An object that can be used to specify Tag conditions.</p>",
      "refs": {
        "CreateSessionRequest$tagFilter": "<p>An object that can be used to specify Tag conditions. </p>",
        "KnowledgeBaseAssociationConfigurationData$contentTagFilter": null,
        "SessionData$tagFilter": "<p>An object that can be used to specify Tag conditions.</p>",
        "UpdateSessionRequest$tagFilter": "<p>An object that can be used to specify Tag conditions.</p>"
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "TagCondition$key": "<p>The tag key in the tag condition.</p>",
        "TagKeyList$member": null,
        "Tags$key": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>The tag keys.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "TagCondition$value": "<p>The tag value in the tag condition.</p>",
        "Tags$value": null
      }
    },
    "Tags": {
      "base": null,
      "refs": {
        "AIAgentData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "AIAgentSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "AIPromptData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "AIPromptSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "AssistantAssociationData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "AssistantAssociationSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "AssistantData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "AssistantSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "ContentAssociationData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "ContentAssociationSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "ContentData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "ContentSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateAIAgentRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateAIPromptRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateAssistantAssociationRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateAssistantRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateContentAssociationRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateContentRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateKnowledgeBaseRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateQuickResponseRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "CreateSessionRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "KnowledgeBaseData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "KnowledgeBaseSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "ListTagsForResourceResponse$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "QuickResponseData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "QuickResponseSearchResultData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "QuickResponseSummary$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "SessionData$tags": "<p>The tags used to organize, track, or control access for this resource.</p>",
        "TagResourceRequest$tags": "<p>The tags used to organize, track, or control access for this resource.</p>"
      }
    },
    "TargetType": {
      "base": null,
      "refs": {
        "PutFeedbackRequest$targetType": "<p>The type of the feedback target.</p>",
        "PutFeedbackResponse$targetType": "<p>The type of the feedback target.</p>"
      }
    },
    "TextAIPrompt": {
      "base": null,
      "refs": {
        "TextFullAIPromptEditTemplateConfiguration$text": "<p>The YAML text for the AI Prompt template.</p>"
      }
    },
    "TextData": {
      "base": "<p>Details about the source content text data.</p>",
      "refs": {
        "ContentDataDetails$textData": "<p>Details about the content text data.</p>",
        "SourceContentDataDetails$textData": "<p> Details about the source content text data.</p>"
      }
    },
    "TextFullAIPromptEditTemplateConfiguration": {
      "base": "<p>The configuration for a prompt template that supports full textual prompt configuration using a YAML prompt.</p>",
      "refs": {
        "AIPromptTemplateConfiguration$textFullAIPromptEditTemplateConfiguration": "<p>The configuration for a prompt template that supports full textual prompt configuration using a YAML prompt.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>The throttling limit has been exceeded.</p>",
      "refs": {
      }
    },
    "TimeToLive": {
      "base": "<p>Expiration time in minutes</p>",
      "refs": {
        "StartContentUploadRequest$presignedUrlTimeToLive": "<p>The expected expiration time of the generated presigned URL, specified in minutes.</p>"
      }
    },
    "Timestamp": {
      "base": null,
      "refs": {
        "AIAgentData$modifiedTime": "<p>The time the AI Agent was last modified.</p>",
        "AIAgentSummary$modifiedTime": "<p>The time the AI Agent was last modified.</p>",
        "AIPromptData$modifiedTime": "<p>The time the AI Prompt was last modified.</p>",
        "AIPromptSummary$modifiedTime": "<p>The time the AI Prompt was last modified.</p>",
        "CreateAIAgentVersionRequest$modifiedTime": "<p>The modification time of the AI Agent should be tracked for version creation. This field should be specified to avoid version creation when simultaneous update to the underlying AI Agent are possible. The value should be the modifiedTime returned from the request to create or update an AI Agent so that version creation can fail if an update to the AI Agent post the specified modification time has been made.</p>",
        "CreateAIPromptVersionRequest$modifiedTime": "<p>The time the AI Prompt was last modified.</p>"
      }
    },
    "TooManyTagsException": {
      "base": "<p>Amazon Q in Connect throws this exception if you have too many tags in your tag set.</p>",
      "refs": {
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAIAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAIAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAIPromptRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAIPromptResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAssistantAIAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAssistantAIAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateContentRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateContentResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateKnowledgeBaseTemplateUriRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateKnowledgeBaseTemplateUriResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateQuickResponseRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateQuickResponseResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSessionDataRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSessionDataResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSessionRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSessionResponse": {
      "base": null,
      "refs": {
      }
    },
    "UploadId": {
      "base": null,
      "refs": {
        "CreateContentRequest$uploadId": "<p>A pointer to the uploaded asset. This value is returned by <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a>.</p>",
        "ImportJobData$uploadId": "<p>A pointer to the uploaded asset. This value is returned by <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a>.</p>",
        "ImportJobSummary$uploadId": "<p>A pointer to the uploaded asset. This value is returned by <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a>.</p>",
        "StartContentUploadResponse$uploadId": "<p>The identifier of the upload.</p>",
        "StartImportJobRequest$uploadId": "<p>A pointer to the uploaded asset. This value is returned by <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a>.</p>",
        "UpdateContentRequest$uploadId": "<p>A pointer to the uploaded asset. This value is returned by <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a>. </p>"
      }
    },
    "Uri": {
      "base": null,
      "refs": {
        "ContentData$linkOutUri": "<p>The URI of the content.</p>",
        "CreateContentRequest$overrideLinkOutUri": "<p>The URI you want to use for the article. If the knowledge base has a templateUri, setting this argument overrides it for this piece of content.</p>",
        "RenderingConfiguration$templateUri": "<p>A URI template containing exactly one variable in <code>${variableName} </code>format. This can only be set for <code>EXTERNAL</code> knowledge bases. For Salesforce, ServiceNow, and Zendesk, the variable must be one of the following:</p> <ul> <li> <p>Salesforce: <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, or <code>IsDeleted</code> </p> </li> <li> <p>ServiceNow: <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, or <code>active</code> </p> </li> <li> <p>Zendesk: <code>id</code>, <code>title</code>, <code>updated_at</code>, or <code>draft</code> </p> </li> </ul> <p>The variable is replaced with the actual value for a piece of content when calling <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_GetContent.html\">GetContent</a>. </p>",
        "UpdateContentRequest$overrideLinkOutUri": "<p>The URI for the article. If the knowledge base has a templateUri, setting this argument overrides it for this piece of content. To remove an existing <code>overrideLinkOurUri</code>, exclude this argument and set <code>removeOverrideLinkOutUri</code> to true.</p>",
        "UpdateKnowledgeBaseTemplateUriRequest$templateUri": "<p>The template URI to update.</p>"
      }
    },
    "Url": {
      "base": null,
      "refs": {
        "ContentData$url": "<p>The URL of the content.</p>",
        "ImportJobData$failedRecordReport": "<p>The link to download the information of resource data that failed to be imported.</p>",
        "ImportJobData$url": "<p>The download link to the resource file that is uploaded to the import job.</p>",
        "StartContentUploadResponse$url": "<p>The URL of the upload.</p>"
      }
    },
    "UrlConfiguration": {
      "base": "<p>The configuration of the URL/URLs for the web content that you want to crawl. You should be authorized to crawl the URLs.</p>",
      "refs": {
        "WebCrawlerConfiguration$urlConfiguration": "<p>The configuration of the URL/URLs for the web content that you want to crawl. You should be authorized to crawl the URLs.</p>"
      }
    },
    "UrlFilterList": {
      "base": null,
      "refs": {
        "WebCrawlerConfiguration$exclusionFilters": "<p>A list of one or more exclusion regular expression patterns to exclude certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.</p>",
        "WebCrawlerConfiguration$inclusionFilters": "<p>A list of one or more inclusion regular expression patterns to include certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.</p>"
      }
    },
    "UrlFilterPattern": {
      "base": null,
      "refs": {
        "UrlFilterList$member": null
      }
    },
    "Uuid": {
      "base": null,
      "refs": {
        "AIAgentData$aiAgentId": "<p>The identifier of the AI Agent.</p>",
        "AIAgentData$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "AIAgentSummary$aiAgentId": "<p>The identifier of the AI Agent.</p>",
        "AIAgentSummary$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "AIPromptData$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI prompt.</p>",
        "AIPromptData$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "AIPromptSummary$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI prompt.</p>",
        "AIPromptSummary$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "AssistantAssociationData$assistantAssociationId": "<p>The identifier of the assistant association.</p>",
        "AssistantAssociationData$assistantId": "<p>The identifier of the Amazon Q in Connect assistant.</p>",
        "AssistantAssociationInputData$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base.</p>",
        "AssistantAssociationSummary$assistantAssociationId": "<p>The identifier of the assistant association.</p>",
        "AssistantAssociationSummary$assistantId": "<p>The identifier of the Amazon Q in Connect assistant.</p>",
        "AssistantData$assistantId": "<p>The identifier of the Amazon Q in Connect assistant.</p>",
        "AssistantSummary$assistantId": "<p>The identifier of the Amazon Q in Connect assistant.</p>",
        "AssociationConfiguration$associationId": "<p>The identifier of the association for this Association Configuration.</p>",
        "ContentAssociationData$contentAssociationId": "<p>The identifier of the content association. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ContentAssociationData$contentId": "<p>The identifier of the content.</p>",
        "ContentAssociationData$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "ContentAssociationSummary$contentAssociationId": "<p>The identifier of the content association. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ContentAssociationSummary$contentId": "<p>The identifier of the content.</p>",
        "ContentAssociationSummary$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "ContentData$contentId": "<p>The identifier of the content.</p>",
        "ContentData$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "ContentReference$contentId": "<p>The identifier of the content.</p>",
        "ContentReference$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base.</p>",
        "ContentSummary$contentId": "<p>The identifier of the content.</p>",
        "ContentSummary$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base.</p>",
        "DeleteImportJobRequest$importJobId": "<p>The identifier of the import job to be deleted.</p>",
        "GenerativeReference$generationId": "<p> The identifier of the LLM model. </p>",
        "GetImportJobRequest$importJobId": "<p>The identifier of the import job to retrieve.</p>",
        "ImportJobData$importJobId": "<p>The identifier of the import job.</p>",
        "ImportJobData$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "ImportJobSummary$importJobId": "<p>The identifier of the import job.</p>",
        "ImportJobSummary$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "IntentDetectedDataDetails$intentId": "<p>The identifier of the detected intent.</p>",
        "IntentInputData$intentId": "<p>The identifier of the Amazon Q intent.</p>",
        "KnowledgeBaseAssociationData$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "KnowledgeBaseData$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "KnowledgeBaseSummary$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "PutFeedbackRequest$targetId": "<p>The identifier of the feedback target.</p>",
        "PutFeedbackResponse$assistantId": "<p>The identifier of the Amazon Q in Connect assistant.</p>",
        "PutFeedbackResponse$targetId": "<p>The identifier of the feedback target.</p>",
        "QuickResponseData$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "QuickResponseData$quickResponseId": "<p>The identifier of the quick response.</p>",
        "QuickResponseSearchResultData$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "QuickResponseSearchResultData$quickResponseId": "<p>The identifier of the quick response.</p>",
        "QuickResponseSummary$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "QuickResponseSummary$quickResponseId": "<p>The identifier of the quick response.</p>",
        "RecommendationTrigger$id": "<p>The identifier of the recommendation trigger.</p>",
        "ResultData$resultId": "<p>The identifier of the result data.</p>",
        "SessionData$sessionId": "<p>The identifier of the session.</p>",
        "SessionSummary$assistantId": "<p>The identifier of the Amazon Q in Connect assistant.</p>",
        "SessionSummary$sessionId": "<p>The identifier of the session.</p>",
        "SourceContentDataDetails$id": "<p>The identifier of the source content.</p>",
        "UpdateSessionDataResponse$sessionId": "<p>The identifier of the session.</p>"
      }
    },
    "UuidOrArn": {
      "base": null,
      "refs": {
        "CreateAIAgentRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "CreateAIAgentVersionRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "CreateAIPromptRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "CreateAIPromptVersionRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "CreateAssistantAssociationRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "CreateContentAssociationRequest$contentId": "<p>The identifier of the content.</p>",
        "CreateContentAssociationRequest$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "CreateContentRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "CreateQuickResponseRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "CreateSessionRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAIAgentRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAIAgentVersionRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAIPromptRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAIPromptVersionRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAssistantAssociationRequest$assistantAssociationId": "<p>The identifier of the assistant association. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAssistantAssociationRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAssistantRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteContentAssociationRequest$contentAssociationId": "<p>The identifier of the content association. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteContentAssociationRequest$contentId": "<p>The identifier of the content.</p>",
        "DeleteContentAssociationRequest$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "DeleteContentRequest$contentId": "<p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteContentRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteImportJobRequest$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "DeleteKnowledgeBaseRequest$knowledgeBaseId": "<p>The knowledge base to delete content from. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteQuickResponseRequest$knowledgeBaseId": "<p>The knowledge base from which the quick response is deleted. The identifier of the knowledge base.</p>",
        "DeleteQuickResponseRequest$quickResponseId": "<p>The identifier of the quick response to delete.</p>",
        "GetAIAgentRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetAIPromptRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetAssistantAssociationRequest$assistantAssociationId": "<p>The identifier of the assistant association. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetAssistantAssociationRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetAssistantRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetContentAssociationRequest$contentAssociationId": "<p>The identifier of the content association. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetContentAssociationRequest$contentId": "<p>The identifier of the content.</p>",
        "GetContentAssociationRequest$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "GetContentRequest$contentId": "<p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetContentRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetContentSummaryRequest$contentId": "<p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetContentSummaryRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetImportJobRequest$knowledgeBaseId": "<p>The identifier of the knowledge base that the import job belongs to.</p>",
        "GetKnowledgeBaseRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetQuickResponseRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should be a QUICK_RESPONSES type knowledge base.</p>",
        "GetQuickResponseRequest$quickResponseId": "<p>The identifier of the quick response.</p>",
        "GetRecommendationsRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetRecommendationsRequest$sessionId": "<p>The identifier of the session. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetSessionRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetSessionRequest$sessionId": "<p>The identifier of the session. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListAIAgentVersionsRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListAIAgentsRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListAIPromptVersionsRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListAIPromptsRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListAssistantAssociationsRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListContentAssociationsRequest$contentId": "<p>The identifier of the content.</p>",
        "ListContentAssociationsRequest$knowledgeBaseId": "<p>The identifier of the knowledge base.</p>",
        "ListContentsRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListImportJobsRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "ListQuickResponsesRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "NotifyRecommendationsReceivedRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "NotifyRecommendationsReceivedRequest$sessionId": "<p>The identifier of the session. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "PutFeedbackRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant.</p>",
        "PutFeedbackResponse$assistantArn": "<p>The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.</p>",
        "QueryAssistantRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "QueryAssistantRequest$sessionId": "<p>The identifier of the Amazon Q in Connect session. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "RemoveAssistantAIAgentRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "RemoveKnowledgeBaseTemplateUriRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "SearchContentRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "SearchQuickResponsesRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should be a QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "SearchSessionsRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "StartContentUploadRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "StartImportJobRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p> <ul> <li> <p>For importing Amazon Q in Connect quick responses, this should be a <code>QUICK_RESPONSES</code> type knowledge base.</p> </li> </ul>",
        "UpdateAIAgentRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateAIPromptRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateAssistantAIAgentRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateContentRequest$contentId": "<p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateContentRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN</p>",
        "UpdateKnowledgeBaseTemplateUriRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateQuickResponseRequest$knowledgeBaseId": "<p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateQuickResponseRequest$quickResponseId": "<p>The identifier of the quick response.</p>",
        "UpdateSessionDataRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateSessionDataRequest$sessionId": "<p>The identifier of the session. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateSessionRequest$assistantId": "<p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "UpdateSessionRequest$sessionId": "<p>The identifier of the session. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>"
      }
    },
    "UuidOrArnOrEitherWithQualifier": {
      "base": null,
      "refs": {
        "CreateAIAgentVersionRequest$aiAgentId": "<p>The identifier of the Amazon Q in Connect AI Agent.</p>",
        "CreateAIPromptVersionRequest$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI prompt.</p>",
        "DeleteAIAgentRequest$aiAgentId": "<p>The identifier of the Amazon Q in Connect AI Agent. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAIAgentVersionRequest$aiAgentId": "<p>The identifier of the Amazon Q in Connect AI Agent. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAIPromptRequest$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI prompt. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "DeleteAIPromptVersionRequest$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI prompt.</p>",
        "GetAIAgentRequest$aiAgentId": "<p>The identifier of the Amazon Q in Connect AI Agent (with or without a version qualifier). Can be either the ID or the ARN. URLs cannot contain the ARN.</p>",
        "GetAIPromptRequest$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI prompt.</p>",
        "ListAIAgentVersionsRequest$aiAgentId": "<p>The identifier of the Amazon Q in Connect AI Agent for which versions are to be listed.</p>",
        "ListAIPromptVersionsRequest$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI prompt for which versions are to be listed.</p>",
        "UpdateAIAgentRequest$aiAgentId": "<p>The identifier of the Amazon Q in Connect AI Agent.</p>",
        "UpdateAIPromptRequest$aiPromptId": "<p>The identifier of the Amazon Q in Connect AI Prompt.</p>"
      }
    },
    "UuidWithQualifier": {
      "base": null,
      "refs": {
        "AIAgentConfigurationData$aiAgentId": "<p>The ID of the AI Agent to be configured.</p>",
        "AnswerRecommendationAIAgentConfiguration$answerGenerationAIPromptId": "<p>The AI Prompt identifier for the Answer Generation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>",
        "AnswerRecommendationAIAgentConfiguration$intentLabelingGenerationAIPromptId": "<p>The AI Prompt identifier for the Intent Labeling prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>",
        "AnswerRecommendationAIAgentConfiguration$queryReformulationAIPromptId": "<p>The AI Prompt identifier for the Query Reformulation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>",
        "ManualSearchAIAgentConfiguration$answerGenerationAIPromptId": "<p>The AI Prompt identifier for the Answer Generation prompt used by the MANUAL_SEARCH AI Agent.</p>"
      }
    },
    "ValidationException": {
      "base": "<p>The input fails to satisfy the constraints specified by a service.</p>",
      "refs": {
      }
    },
    "VectorIngestionConfiguration": {
      "base": "<p>Contains details about how to ingest the documents in a data source.</p>",
      "refs": {
        "CreateKnowledgeBaseRequest$vectorIngestionConfiguration": "<p>Contains details about how to ingest the documents in a data source.</p>",
        "KnowledgeBaseData$vectorIngestionConfiguration": "<p>Contains details about how to ingest the documents in a data source.</p>",
        "KnowledgeBaseSummary$vectorIngestionConfiguration": "<p>Contains details about how to ingest the documents in a data source.</p>"
      }
    },
    "Version": {
      "base": null,
      "refs": {
        "AIAgentVersionSummary$versionNumber": "<p>The version number for this AI Agent version.</p>",
        "AIPromptVersionSummary$versionNumber": "<p>The version number for this AI Prompt version.</p>",
        "CreateAIAgentVersionResponse$versionNumber": "<p>The version number of the AI Agent version.</p>",
        "CreateAIPromptVersionResponse$versionNumber": "<p>The version number of the AI Prompt version.</p>",
        "DeleteAIAgentVersionRequest$versionNumber": "<p>The version number of the AI Agent version.</p>",
        "DeleteAIPromptVersionRequest$versionNumber": "<p>The version number of the AI Prompt version to be deleted.</p>",
        "GetAIAgentResponse$versionNumber": "<p>The version number of the AI Agent version (returned if an AI Agent version was specified via use of a qualifier for the <code>aiAgentId</code> on the request). </p>",
        "GetAIPromptResponse$versionNumber": "<p>The version number of the AI Prompt version (returned if an AI Prompt version was specified via use of a qualifier for the <code>aiPromptId</code> on the request). </p>"
      }
    },
    "VisibilityStatus": {
      "base": null,
      "refs": {
        "AIAgentData$visibilityStatus": "<p>The visibility status of the AI Agent.</p>",
        "AIAgentSummary$visibilityStatus": "<p>The visibility status of the AI Agent.</p>",
        "AIPromptData$visibilityStatus": "<p>The visibility status of the AI Prompt.</p>",
        "AIPromptSummary$visibilityStatus": "<p>The visibility status of the AI Prompt.</p>",
        "CreateAIAgentRequest$visibilityStatus": "<p>The visibility status of the AI Agent.</p>",
        "CreateAIPromptRequest$visibilityStatus": "<p>The visibility status of the AI Prompt.</p>",
        "UpdateAIAgentRequest$visibilityStatus": "<p>The visbility status of the Amazon Q in Connect AI Agent.</p>",
        "UpdateAIPromptRequest$visibilityStatus": "<p>The visibility status of the Amazon Q in Connect AI prompt.</p>"
      }
    },
    "WaitTimeSeconds": {
      "base": null,
      "refs": {
        "GetRecommendationsRequest$waitTimeSeconds": "<p>The duration (in seconds) for which the call waits for a recommendation to be made available before returning. If a recommendation is available, the call returns sooner than <code>WaitTimeSeconds</code>. If no messages are available and the wait time expires, the call returns successfully with an empty list.</p>"
      }
    },
    "WebCrawlerConfiguration": {
      "base": "<p>The configuration details for the web data source.</p>",
      "refs": {
        "ManagedSourceConfiguration$webCrawlerConfiguration": "<p>Configuration data for web crawler data source.</p>"
      }
    },
    "WebCrawlerLimits": {
      "base": "<p>The configuration of crawl limits for the web URLs.</p>",
      "refs": {
        "WebCrawlerConfiguration$crawlerLimits": "<p>The configuration of crawl limits for the web URLs.</p>"
      }
    },
    "WebCrawlerLimitsRateLimitInteger": {
      "base": null,
      "refs": {
        "WebCrawlerLimits$rateLimit": "<p>Rate of web URLs retrieved per minute.</p>"
      }
    },
    "WebScopeType": {
      "base": null,
      "refs": {
        "WebCrawlerConfiguration$scope": "<p>The scope of what is crawled for your URLs. You can choose to crawl only web pages that belong to the same host or primary domain. For example, only web pages that contain the seed URL <code>https://docs.aws.amazon.com/bedrock/latest/userguide/</code> and no other domains. You can choose to include sub domains in addition to the host or primary domain. For example, web pages that contain <code>aws.amazon.com</code> can also include sub domain <code>docs.aws.amazon.com</code>.</p>"
      }
    },
    "WebUrl": {
      "base": null,
      "refs": {
        "SeedUrl$url": "<p>URL for crawling</p>"
      }
    }
  }
}
