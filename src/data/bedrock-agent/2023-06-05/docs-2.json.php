<?php
// This file was auto-generated from sdk-root/src/data/bedrock-agent/2023-06-05/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>An example service, deployed with the Octane Service creator, which will echo the string</p>', 'operations' => [ 'AssociateAgentKnowledgeBase' => '<p>Associate a Knowledge Base to an existing Amazon Bedrock Agent</p>', 'CreateAgent' => '<p>Creates an Amazon Bedrock Agent</p>', 'CreateAgentActionGroup' => '<p>Creates an Action Group for existing Amazon Bedrock Agent</p>', 'CreateAgentAlias' => '<p>Creates an Alias for an existing Amazon Bedrock Agent</p>', 'CreateDataSource' => '<p>Create a new data source</p>', 'CreateKnowledgeBase' => '<p>Create a new knowledge base</p>', 'DeleteAgent' => '<p>Deletes an Agent for existing Amazon Bedrock Agent</p>', 'DeleteAgentActionGroup' => '<p>Deletes an Action Group for existing Amazon Bedrock Agent.</p>', 'DeleteAgentAlias' => '<p>Deletes an Alias for a Amazon Bedrock Agent</p>', 'DeleteAgentVersion' => '<p>Deletes an Agent version for existing Amazon Bedrock Agent</p>', 'DeleteDataSource' => '<p>Delete an existing data source</p>', 'DeleteKnowledgeBase' => '<p>Delete an existing knowledge base</p>', 'DisassociateAgentKnowledgeBase' => '<p>Disassociate an existing Knowledge Base from an Amazon Bedrock Agent</p>', 'GetAgent' => '<p>Gets an Agent for existing Amazon Bedrock Agent</p>', 'GetAgentActionGroup' => '<p>Gets an Action Group for existing Amazon Bedrock Agent Version</p>', 'GetAgentAlias' => '<p>Describes an Alias for a Amazon Bedrock Agent</p>', 'GetAgentKnowledgeBase' => '<p>Gets a knowledge base associated to an existing Amazon Bedrock Agent Version</p>', 'GetAgentVersion' => '<p>Gets an Agent version for existing Amazon Bedrock Agent</p>', 'GetDataSource' => '<p>Get an existing data source</p>', 'GetIngestionJob' => '<p>Get an ingestion job</p>', 'GetKnowledgeBase' => '<p>Get an existing knowledge base</p>', 'ListAgentActionGroups' => '<p>Lists an Action Group for existing Amazon Bedrock Agent Version</p>', 'ListAgentAliases' => '<p>Lists all the Aliases for an Amazon Bedrock Agent</p>', 'ListAgentKnowledgeBases' => '<p>List of Knowledge Bases associated to an existing Amazon Bedrock Agent Version</p>', 'ListAgentVersions' => '<p>Lists Agent Versions</p>', 'ListAgents' => '<p>Lists Agents</p>', 'ListDataSources' => '<p>List data sources</p>', 'ListIngestionJobs' => '<p>List ingestion jobs</p>', 'ListKnowledgeBases' => '<p>List Knowledge Bases</p>', 'ListTagsForResource' => '<p>List tags for a resource</p>', 'PrepareAgent' => '<p>Prepares an existing Amazon Bedrock Agent to receive runtime requests</p>', 'StartIngestionJob' => '<p>Start a new ingestion job</p>', 'TagResource' => '<p>Tag a resource</p>', 'UntagResource' => '<p>Untag a resource</p>', 'UpdateAgent' => '<p>Updates an existing Amazon Bedrock Agent</p>', 'UpdateAgentActionGroup' => '<p>Updates an existing Action Group for Amazon Bedrock Agent</p>', 'UpdateAgentAlias' => '<p>Updates an existing Alias for an Amazon Bedrock Agent</p>', 'UpdateAgentKnowledgeBase' => '<p>Updates an existing Knowledge Base associated to an Amazon Bedrock Agent</p>', 'UpdateDataSource' => '<p>Update an existing data source</p>', 'UpdateKnowledgeBase' => '<p>Update an existing knowledge base</p>', ], 'shapes' => [ 'APISchema' => [ 'base' => '<p>Contains information about the API Schema for the Action Group</p>', 'refs' => [ 'AgentActionGroup$apiSchema' => NULL, 'CreateAgentActionGroupRequest$apiSchema' => NULL, 'UpdateAgentActionGroupRequest$apiSchema' => NULL, ], ], 'AccessDeniedException' => [ 'base' => '<p>This exception is thrown when a request is denied per access permissions</p>', 'refs' => [], ], 'ActionGroupExecutor' => [ 'base' => '<p>Type of Executors for an Action Group</p>', 'refs' => [ 'AgentActionGroup$actionGroupExecutor' => NULL, 'CreateAgentActionGroupRequest$actionGroupExecutor' => NULL, 'UpdateAgentActionGroupRequest$actionGroupExecutor' => NULL, ], ], 'ActionGroupSignature' => [ 'base' => '<p>Action Group Signature for a BuiltIn Action</p>', 'refs' => [ 'AgentActionGroup$parentActionSignature' => NULL, 'CreateAgentActionGroupRequest$parentActionGroupSignature' => NULL, 'UpdateAgentActionGroupRequest$parentActionGroupSignature' => NULL, ], ], 'ActionGroupState' => [ 'base' => '<p>State of the action group</p>', 'refs' => [ 'ActionGroupSummary$actionGroupState' => NULL, 'AgentActionGroup$actionGroupState' => NULL, 'CreateAgentActionGroupRequest$actionGroupState' => NULL, 'UpdateAgentActionGroupRequest$actionGroupState' => NULL, ], ], 'ActionGroupSummaries' => [ 'base' => '<p>List of ActionGroup Summaries</p>', 'refs' => [ 'ListAgentActionGroupsResponse$actionGroupSummaries' => NULL, ], ], 'ActionGroupSummary' => [ 'base' => '<p>ActionGroup Summary</p>', 'refs' => [ 'ActionGroupSummaries$member' => NULL, ], ], 'Agent' => [ 'base' => '<p>Contains the information of an agent</p>', 'refs' => [ 'CreateAgentResponse$agent' => NULL, 'GetAgentResponse$agent' => NULL, 'UpdateAgentResponse$agent' => NULL, ], ], 'AgentActionGroup' => [ 'base' => '<p>Contains the information of an Agent Action Group</p>', 'refs' => [ 'CreateAgentActionGroupResponse$agentActionGroup' => NULL, 'GetAgentActionGroupResponse$agentActionGroup' => NULL, 'UpdateAgentActionGroupResponse$agentActionGroup' => NULL, ], ], 'AgentAlias' => [ 'base' => '<p>Contains the information of an agent alias</p>', 'refs' => [ 'CreateAgentAliasResponse$agentAlias' => NULL, 'GetAgentAliasResponse$agentAlias' => NULL, 'UpdateAgentAliasResponse$agentAlias' => NULL, ], ], 'AgentAliasArn' => [ 'base' => '<p>Arn representation of the Agent Alias.</p>', 'refs' => [ 'AgentAlias$agentAliasArn' => NULL, ], ], 'AgentAliasHistoryEvent' => [ 'base' => '<p>History event for an alias for an Agent.</p>', 'refs' => [ 'AgentAliasHistoryEvents$member' => NULL, ], ], 'AgentAliasHistoryEvents' => [ 'base' => '<p>The list of history events for an alias for an Agent.</p>', 'refs' => [ 'AgentAlias$agentAliasHistoryEvents' => NULL, ], ], 'AgentAliasId' => [ 'base' => '<p>Id for an Agent Alias generated at the server side.</p>', 'refs' => [ 'AgentAlias$agentAliasId' => NULL, 'AgentAliasSummary$agentAliasId' => NULL, 'DeleteAgentAliasRequest$agentAliasId' => '<p>Id generated at the server side when an Agent Alias is created</p>', 'DeleteAgentAliasResponse$agentAliasId' => NULL, 'GetAgentAliasRequest$agentAliasId' => '<p>Id generated at the server side when an Agent Alias is created</p>', 'UpdateAgentAliasRequest$agentAliasId' => '<p>Id generated at the server side when an Agent Alias is created</p>', ], ], 'AgentAliasRoutingConfiguration' => [ 'base' => '<p>Routing configuration for an Agent alias.</p>', 'refs' => [ 'AgentAlias$routingConfiguration' => NULL, 'AgentAliasHistoryEvent$routingConfiguration' => NULL, 'AgentAliasSummary$routingConfiguration' => NULL, 'CreateAgentAliasRequest$routingConfiguration' => NULL, 'UpdateAgentAliasRequest$routingConfiguration' => NULL, ], ], 'AgentAliasRoutingConfigurationListItem' => [ 'base' => '<p>Details about the routing configuration for an Agent alias.</p>', 'refs' => [ 'AgentAliasRoutingConfiguration$member' => NULL, ], ], 'AgentAliasStatus' => [ 'base' => '<p>The statuses an Agent Alias can be in.</p>', 'refs' => [ 'AgentAlias$agentAliasStatus' => NULL, 'AgentAliasSummary$agentAliasStatus' => NULL, 'DeleteAgentAliasResponse$agentAliasStatus' => NULL, ], ], 'AgentAliasSummaries' => [ 'base' => '<p>The list of summaries of all the aliases for an Agent.</p>', 'refs' => [ 'ListAgentAliasesResponse$agentAliasSummaries' => NULL, ], ], 'AgentAliasSummary' => [ 'base' => '<p>Summary of an alias for an Agent.</p>', 'refs' => [ 'AgentAliasSummaries$member' => NULL, ], ], 'AgentArn' => [ 'base' => '<p>Arn representation of the Agent.</p>', 'refs' => [ 'Agent$agentArn' => NULL, 'AgentVersion$agentArn' => NULL, ], ], 'AgentKnowledgeBase' => [ 'base' => '<p>Contains the information of an Agent Knowledge Base.</p>', 'refs' => [ 'AssociateAgentKnowledgeBaseResponse$agentKnowledgeBase' => NULL, 'GetAgentKnowledgeBaseResponse$agentKnowledgeBase' => NULL, 'UpdateAgentKnowledgeBaseResponse$agentKnowledgeBase' => NULL, ], ], 'AgentKnowledgeBaseSummaries' => [ 'base' => '<p>List of Agent Knowledge Base Summaries</p>', 'refs' => [ 'ListAgentKnowledgeBasesResponse$agentKnowledgeBaseSummaries' => NULL, ], ], 'AgentKnowledgeBaseSummary' => [ 'base' => '<p>Agent Knowledge Base Summary</p>', 'refs' => [ 'AgentKnowledgeBaseSummaries$member' => NULL, ], ], 'AgentRoleArn' => [ 'base' => '<p>ARN of a IAM role.</p>', 'refs' => [ 'Agent$agentResourceRoleArn' => NULL, 'AgentVersion$agentResourceRoleArn' => NULL, 'CreateAgentRequest$agentResourceRoleArn' => NULL, 'UpdateAgentRequest$agentResourceRoleArn' => NULL, ], ], 'AgentStatus' => [ 'base' => '<p>Schema Type for Action APIs.</p>', 'refs' => [ 'Agent$agentStatus' => NULL, 'AgentSummary$agentStatus' => NULL, 'AgentVersion$agentStatus' => NULL, 'AgentVersionSummary$agentStatus' => NULL, 'DeleteAgentResponse$agentStatus' => NULL, 'DeleteAgentVersionResponse$agentStatus' => NULL, 'PrepareAgentResponse$agentStatus' => NULL, ], ], 'AgentSummaries' => [ 'base' => '<p>List of AgentSummary.</p>', 'refs' => [ 'ListAgentsResponse$agentSummaries' => NULL, ], ], 'AgentSummary' => [ 'base' => '<p>Summary of Agent.</p>', 'refs' => [ 'AgentSummaries$member' => NULL, ], ], 'AgentVersion' => [ 'base' => '<p>Contains the information of an agent version.</p>', 'refs' => [ 'GetAgentVersionResponse$agentVersion' => NULL, ], ], 'AgentVersionSummaries' => [ 'base' => '<p>List of AgentVersionSummary.</p>', 'refs' => [ 'ListAgentVersionsResponse$agentVersionSummaries' => NULL, ], ], 'AgentVersionSummary' => [ 'base' => '<p>Summary of agent version.</p>', 'refs' => [ 'AgentVersionSummaries$member' => NULL, ], ], 'AssociateAgentKnowledgeBaseRequest' => [ 'base' => '<p>Associate Agent Knowledge Base Request</p>', 'refs' => [], ], 'AssociateAgentKnowledgeBaseResponse' => [ 'base' => '<p>Associate Agent Knowledge Base Response</p>', 'refs' => [], ], 'BasePromptTemplate' => [ 'base' => '<p>Base Prompt Template.</p>', 'refs' => [ 'PromptConfiguration$basePromptTemplate' => NULL, ], ], 'BedrockEmbeddingModelArn' => [ 'base' => '<p>Arn of a Bedrock model.</p>', 'refs' => [ 'VectorKnowledgeBaseConfiguration$embeddingModelArn' => NULL, ], ], 'Boolean' => [ 'base' => NULL, 'refs' => [ 'DeleteAgentActionGroupRequest$skipResourceInUseCheck' => '<p>Skips checking if resource is in use when set to true. Defaults to false</p>', 'DeleteAgentRequest$skipResourceInUseCheck' => '<p>Skips checking if resource is in use when set to true. Defaults to false</p>', 'DeleteAgentVersionRequest$skipResourceInUseCheck' => '<p>Skips checking if resource is in use when set to true. Defaults to false</p>', ], ], 'ChunkingConfiguration' => [ 'base' => '<p>Configures chunking strategy</p>', 'refs' => [ 'VectorIngestionConfiguration$chunkingConfiguration' => NULL, ], ], 'ChunkingStrategy' => [ 'base' => '<p>The type of chunking strategy</p>', 'refs' => [ 'ChunkingConfiguration$chunkingStrategy' => NULL, ], ], 'ClientToken' => [ 'base' => '<p>Client specified token used for idempotency checks</p>', 'refs' => [ 'Agent$clientToken' => NULL, 'AgentActionGroup$clientToken' => NULL, 'AgentAlias$clientToken' => NULL, 'CreateAgentActionGroupRequest$clientToken' => NULL, 'CreateAgentAliasRequest$clientToken' => NULL, 'CreateAgentRequest$clientToken' => NULL, 'CreateDataSourceRequest$clientToken' => NULL, 'CreateKnowledgeBaseRequest$clientToken' => NULL, 'StartIngestionJobRequest$clientToken' => NULL, ], ], 'ConflictException' => [ 'base' => '<p>This exception is thrown when there is a conflict performing an operation</p>', 'refs' => [], ], 'CreateAgentActionGroupRequest' => [ 'base' => '<p>Create Action Group Request</p>', 'refs' => [], ], 'CreateAgentActionGroupResponse' => [ 'base' => '<p>Create Action Group Response</p>', 'refs' => [], ], 'CreateAgentAliasRequest' => [ 'base' => '<p>Create Agent Alias Request</p>', 'refs' => [], ], 'CreateAgentAliasResponse' => [ 'base' => '<p>Create Agent Alias Response</p>', 'refs' => [], ], 'CreateAgentRequest' => [ 'base' => '<p>Create Agent Request</p>', 'refs' => [], ], 'CreateAgentResponse' => [ 'base' => '<p>Create Agent Response</p>', 'refs' => [], ], 'CreateDataSourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateDataSourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateKnowledgeBaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateKnowledgeBaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreationMode' => [ 'base' => '<p>Creation Mode for Prompt Configuration.</p>', 'refs' => [ 'PromptConfiguration$promptCreationMode' => NULL, 'PromptConfiguration$parserMode' => NULL, ], ], 'DataSource' => [ 'base' => '<p>Contains the information of a data source.</p>', 'refs' => [ 'CreateDataSourceResponse$dataSource' => NULL, 'GetDataSourceResponse$dataSource' => NULL, 'UpdateDataSourceResponse$dataSource' => NULL, ], ], 'DataSourceConfiguration' => [ 'base' => '<p>Specifies a raw data source location to ingest.</p>', 'refs' => [ 'CreateDataSourceRequest$dataSourceConfiguration' => NULL, 'DataSource$dataSourceConfiguration' => NULL, 'UpdateDataSourceRequest$dataSourceConfiguration' => NULL, ], ], 'DataSourceStatus' => [ 'base' => '<p>The status of a data source.</p>', 'refs' => [ 'DataSource$status' => NULL, 'DataSourceSummary$status' => NULL, 'DeleteDataSourceResponse$status' => NULL, ], ], 'DataSourceSummaries' => [ 'base' => '<p>list of data source summaries</p>', 'refs' => [ 'ListDataSourcesResponse$dataSourceSummaries' => NULL, ], ], 'DataSourceSummary' => [ 'base' => '<p>Summary information of a data source.</p>', 'refs' => [ 'DataSourceSummaries$member' => NULL, ], ], 'DataSourceType' => [ 'base' => '<p>The type of the data source location.</p>', 'refs' => [ 'DataSourceConfiguration$type' => NULL, ], ], 'DateTimestamp' => [ 'base' => '<p>Time Stamp.</p>', 'refs' => [ 'ActionGroupSummary$updatedAt' => NULL, 'Agent$createdAt' => NULL, 'Agent$updatedAt' => NULL, 'Agent$preparedAt' => NULL, 'AgentActionGroup$createdAt' => NULL, 'AgentActionGroup$updatedAt' => NULL, 'AgentAlias$createdAt' => NULL, 'AgentAlias$updatedAt' => NULL, 'AgentAliasHistoryEvent$endDate' => NULL, 'AgentAliasHistoryEvent$startDate' => NULL, 'AgentAliasSummary$createdAt' => NULL, 'AgentAliasSummary$updatedAt' => NULL, 'AgentKnowledgeBase$createdAt' => NULL, 'AgentKnowledgeBase$updatedAt' => NULL, 'AgentKnowledgeBaseSummary$updatedAt' => NULL, 'AgentSummary$updatedAt' => NULL, 'AgentVersion$createdAt' => NULL, 'AgentVersion$updatedAt' => NULL, 'AgentVersionSummary$createdAt' => NULL, 'AgentVersionSummary$updatedAt' => NULL, 'DataSource$createdAt' => NULL, 'DataSource$updatedAt' => NULL, 'DataSourceSummary$updatedAt' => NULL, 'IngestionJob$startedAt' => NULL, 'IngestionJob$updatedAt' => NULL, 'IngestionJobSummary$startedAt' => NULL, 'IngestionJobSummary$updatedAt' => NULL, 'KnowledgeBase$createdAt' => NULL, 'KnowledgeBase$updatedAt' => NULL, 'KnowledgeBaseSummary$updatedAt' => NULL, 'PrepareAgentResponse$preparedAt' => NULL, ], ], 'DeleteAgentActionGroupRequest' => [ 'base' => '<p>Delete Action Group Request</p>', 'refs' => [], ], 'DeleteAgentActionGroupResponse' => [ 'base' => '<p>Delete Action Group Response</p>', 'refs' => [], ], 'DeleteAgentAliasRequest' => [ 'base' => '<p>Delete Agent Alias Request</p>', 'refs' => [], ], 'DeleteAgentAliasResponse' => [ 'base' => '<p>Delete Agent Alias Response</p>', 'refs' => [], ], 'DeleteAgentRequest' => [ 'base' => '<p>Delete Agent Request</p>', 'refs' => [], ], 'DeleteAgentResponse' => [ 'base' => '<p>Delete Agent Response</p>', 'refs' => [], ], 'DeleteAgentVersionRequest' => [ 'base' => '<p>Delete Agent Version Request</p>', 'refs' => [], ], 'DeleteAgentVersionResponse' => [ 'base' => '<p>Delete Agent Version Response</p>', 'refs' => [], ], 'DeleteDataSourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteDataSourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteKnowledgeBaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteKnowledgeBaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'Description' => [ 'base' => '<p>Description of the Resource.</p>', 'refs' => [ 'ActionGroupSummary$description' => NULL, 'Agent$description' => NULL, 'AgentActionGroup$description' => NULL, 'AgentAlias$description' => NULL, 'AgentAliasSummary$description' => NULL, 'AgentKnowledgeBase$description' => NULL, 'AgentKnowledgeBaseSummary$description' => NULL, 'AgentSummary$description' => NULL, 'AgentVersion$description' => NULL, 'AgentVersionSummary$description' => NULL, 'AssociateAgentKnowledgeBaseRequest$description' => NULL, 'CreateAgentActionGroupRequest$description' => NULL, 'CreateAgentAliasRequest$description' => NULL, 'CreateAgentRequest$description' => NULL, 'CreateDataSourceRequest$description' => NULL, 'CreateKnowledgeBaseRequest$description' => NULL, 'DataSource$description' => NULL, 'DataSourceSummary$description' => NULL, 'IngestionJob$description' => NULL, 'IngestionJobSummary$description' => NULL, 'KnowledgeBase$description' => NULL, 'KnowledgeBaseSummary$description' => NULL, 'StartIngestionJobRequest$description' => NULL, 'UpdateAgentActionGroupRequest$description' => NULL, 'UpdateAgentAliasRequest$description' => NULL, 'UpdateAgentKnowledgeBaseRequest$description' => NULL, 'UpdateAgentRequest$description' => NULL, 'UpdateDataSourceRequest$description' => NULL, 'UpdateKnowledgeBaseRequest$description' => NULL, ], ], 'DisassociateAgentKnowledgeBaseRequest' => [ 'base' => '<p>Disassociate Agent Knowledge Base Request</p>', 'refs' => [], ], 'DisassociateAgentKnowledgeBaseResponse' => [ 'base' => '<p>Disassociate Agent Knowledge Base Response</p>', 'refs' => [], ], 'DraftVersion' => [ 'base' => '<p>Draft Agent Version.</p>', 'refs' => [ 'Agent$agentVersion' => NULL, 'AssociateAgentKnowledgeBaseRequest$agentVersion' => '<p>Draft Version of the Agent.</p>', 'CreateAgentActionGroupRequest$agentVersion' => '<p>Draft Version of the Agent.</p>', 'DeleteAgentActionGroupRequest$agentVersion' => '<p>Draft Version of the Agent.</p>', 'DisassociateAgentKnowledgeBaseRequest$agentVersion' => '<p>Draft Version of the Agent.</p>', 'UpdateAgentActionGroupRequest$agentVersion' => '<p>Draft Version of the Agent.</p>', 'UpdateAgentKnowledgeBaseRequest$agentVersion' => '<p>Draft Version of the Agent.</p>', ], ], 'FailureReason' => [ 'base' => '<p>Failure Reason for Error.</p>', 'refs' => [ 'FailureReasons$member' => NULL, ], ], 'FailureReasons' => [ 'base' => '<p>Failure Reasons for Error.</p>', 'refs' => [ 'Agent$failureReasons' => NULL, 'AgentVersion$failureReasons' => NULL, 'IngestionJob$failureReasons' => NULL, 'KnowledgeBase$failureReasons' => NULL, ], ], 'FieldName' => [ 'base' => '<p>Name of the field</p>', 'refs' => [ 'OpenSearchServerlessFieldMapping$vectorField' => NULL, 'OpenSearchServerlessFieldMapping$textField' => NULL, 'OpenSearchServerlessFieldMapping$metadataField' => NULL, 'PineconeFieldMapping$textField' => NULL, 'PineconeFieldMapping$metadataField' => NULL, 'RedisEnterpriseCloudFieldMapping$vectorField' => NULL, 'RedisEnterpriseCloudFieldMapping$textField' => NULL, 'RedisEnterpriseCloudFieldMapping$metadataField' => NULL, ], ], 'FixedSizeChunkingConfiguration' => [ 'base' => '<p>Configures fixed size chunking strategy</p>', 'refs' => [ 'ChunkingConfiguration$fixedSizeChunkingConfiguration' => NULL, ], ], 'FixedSizeChunkingConfigurationMaxTokensInteger' => [ 'base' => NULL, 'refs' => [ 'FixedSizeChunkingConfiguration$maxTokens' => '<p>The maximum number of tokens per chunk.</p>', ], ], 'FixedSizeChunkingConfigurationOverlapPercentageInteger' => [ 'base' => NULL, 'refs' => [ 'FixedSizeChunkingConfiguration$overlapPercentage' => '<p>The overlap percentage between adjacent chunks.</p>', ], ], 'GetAgentActionGroupRequest' => [ 'base' => '<p>Get Action Group Request</p>', 'refs' => [], ], 'GetAgentActionGroupResponse' => [ 'base' => '<p>Get Action Group Response</p>', 'refs' => [], ], 'GetAgentAliasRequest' => [ 'base' => '<p>Get Agent Alias Request</p>', 'refs' => [], ], 'GetAgentAliasResponse' => [ 'base' => '<p>Get Agent Alias Response</p>', 'refs' => [], ], 'GetAgentKnowledgeBaseRequest' => [ 'base' => '<p>Get Agent Knowledge Base Request</p>', 'refs' => [], ], 'GetAgentKnowledgeBaseResponse' => [ 'base' => '<p>Get Agent Knowledge Base Response</p>', 'refs' => [], ], 'GetAgentRequest' => [ 'base' => '<p>Get Agent Request</p>', 'refs' => [], ], 'GetAgentResponse' => [ 'base' => '<p>Get Agent Response</p>', 'refs' => [], ], 'GetAgentVersionRequest' => [ 'base' => '<p>Get Agent Version Request</p>', 'refs' => [], ], 'GetAgentVersionResponse' => [ 'base' => '<p>Get Agent Version Response</p>', 'refs' => [], ], 'GetDataSourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetDataSourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetIngestionJobRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetIngestionJobResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetKnowledgeBaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetKnowledgeBaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'Id' => [ 'base' => '<p>Identifier for a resource.</p>', 'refs' => [ 'ActionGroupSummary$actionGroupId' => NULL, 'Agent$agentId' => NULL, 'AgentActionGroup$agentId' => NULL, 'AgentActionGroup$actionGroupId' => NULL, 'AgentAlias$agentId' => NULL, 'AgentKnowledgeBase$agentId' => NULL, 'AgentKnowledgeBase$knowledgeBaseId' => NULL, 'AgentKnowledgeBaseSummary$knowledgeBaseId' => NULL, 'AgentSummary$agentId' => NULL, 'AgentVersion$agentId' => NULL, 'AssociateAgentKnowledgeBaseRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'AssociateAgentKnowledgeBaseRequest$knowledgeBaseId' => NULL, 'CreateAgentActionGroupRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'CreateAgentAliasRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'CreateDataSourceRequest$knowledgeBaseId' => NULL, 'DataSource$knowledgeBaseId' => NULL, 'DataSource$dataSourceId' => NULL, 'DataSourceSummary$knowledgeBaseId' => NULL, 'DataSourceSummary$dataSourceId' => NULL, 'DeleteAgentActionGroupRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'DeleteAgentActionGroupRequest$actionGroupId' => '<p>Id generated at the server side when an Agent ActionGroup is created</p>', 'DeleteAgentAliasRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'DeleteAgentAliasResponse$agentId' => NULL, 'DeleteAgentRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'DeleteAgentResponse$agentId' => NULL, 'DeleteAgentVersionRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'DeleteAgentVersionResponse$agentId' => NULL, 'DeleteDataSourceRequest$knowledgeBaseId' => NULL, 'DeleteDataSourceRequest$dataSourceId' => NULL, 'DeleteDataSourceResponse$knowledgeBaseId' => NULL, 'DeleteDataSourceResponse$dataSourceId' => NULL, 'DeleteKnowledgeBaseRequest$knowledgeBaseId' => NULL, 'DeleteKnowledgeBaseResponse$knowledgeBaseId' => NULL, 'DisassociateAgentKnowledgeBaseRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'DisassociateAgentKnowledgeBaseRequest$knowledgeBaseId' => '<p>Id generated at the server side when a Knowledge Base is associated to an Agent</p>', 'GetAgentActionGroupRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'GetAgentActionGroupRequest$actionGroupId' => '<p>Id generated at the server side when an Agent Action Group is created</p>', 'GetAgentAliasRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'GetAgentKnowledgeBaseRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'GetAgentKnowledgeBaseRequest$knowledgeBaseId' => '<p>Id generated at the server side when a Knowledge Base is associated</p>', 'GetAgentRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'GetAgentVersionRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'GetDataSourceRequest$knowledgeBaseId' => NULL, 'GetDataSourceRequest$dataSourceId' => NULL, 'GetIngestionJobRequest$knowledgeBaseId' => NULL, 'GetIngestionJobRequest$dataSourceId' => NULL, 'GetIngestionJobRequest$ingestionJobId' => NULL, 'GetKnowledgeBaseRequest$knowledgeBaseId' => NULL, 'IngestionJob$knowledgeBaseId' => NULL, 'IngestionJob$dataSourceId' => NULL, 'IngestionJob$ingestionJobId' => NULL, 'IngestionJobSummary$knowledgeBaseId' => NULL, 'IngestionJobSummary$dataSourceId' => NULL, 'IngestionJobSummary$ingestionJobId' => NULL, 'KnowledgeBase$knowledgeBaseId' => NULL, 'KnowledgeBaseSummary$knowledgeBaseId' => NULL, 'ListAgentActionGroupsRequest$agentId' => '<p>Id generated at the server side when an Agent is Listed</p>', 'ListAgentAliasesRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'ListAgentKnowledgeBasesRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'ListAgentVersionsRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'ListDataSourcesRequest$knowledgeBaseId' => NULL, 'ListIngestionJobsRequest$knowledgeBaseId' => NULL, 'ListIngestionJobsRequest$dataSourceId' => NULL, 'PrepareAgentRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'PrepareAgentResponse$agentId' => NULL, 'StartIngestionJobRequest$knowledgeBaseId' => NULL, 'StartIngestionJobRequest$dataSourceId' => NULL, 'UpdateAgentActionGroupRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'UpdateAgentActionGroupRequest$actionGroupId' => '<p>Id generated at the server side when an Action Group is created under Agent</p>', 'UpdateAgentAliasRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'UpdateAgentKnowledgeBaseRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'UpdateAgentKnowledgeBaseRequest$knowledgeBaseId' => '<p>Id generated at the server side when a Knowledge Base is associated to an Agent</p>', 'UpdateAgentRequest$agentId' => '<p>Id generated at the server side when an Agent is created</p>', 'UpdateDataSourceRequest$knowledgeBaseId' => NULL, 'UpdateDataSourceRequest$dataSourceId' => NULL, 'UpdateKnowledgeBaseRequest$knowledgeBaseId' => NULL, ], ], 'InferenceConfiguration' => [ 'base' => '<p>Configuration for inference in prompt configuration</p>', 'refs' => [ 'PromptConfiguration$inferenceConfiguration' => NULL, ], ], 'IngestionJob' => [ 'base' => '<p>Contains the information of an ingestion job.</p>', 'refs' => [ 'GetIngestionJobResponse$ingestionJob' => NULL, 'StartIngestionJobResponse$ingestionJob' => NULL, ], ], 'IngestionJobFilter' => [ 'base' => '<p>Filters the response returned by ListIngestionJobs operation.</p>', 'refs' => [ 'IngestionJobFilters$member' => NULL, ], ], 'IngestionJobFilterAttribute' => [ 'base' => '<p>The name of the field to filter ingestion jobs.</p>', 'refs' => [ 'IngestionJobFilter$attribute' => NULL, ], ], 'IngestionJobFilterOperator' => [ 'base' => '<p>The operator used to filter ingestion jobs.</p>', 'refs' => [ 'IngestionJobFilter$operator' => NULL, ], ], 'IngestionJobFilterValue' => [ 'base' => '<p>The value used to filter ingestion jobs.</p>', 'refs' => [ 'IngestionJobFilterValues$member' => NULL, ], ], 'IngestionJobFilterValues' => [ 'base' => '<p>The list of values used to filter ingestion jobs.</p>', 'refs' => [ 'IngestionJobFilter$values' => NULL, ], ], 'IngestionJobFilters' => [ 'base' => '<p>List of IngestionJobFilters</p>', 'refs' => [ 'ListIngestionJobsRequest$filters' => NULL, ], ], 'IngestionJobSortBy' => [ 'base' => '<p>Sorts the response returned by ListIngestionJobs operation.</p>', 'refs' => [ 'ListIngestionJobsRequest$sortBy' => NULL, ], ], 'IngestionJobSortByAttribute' => [ 'base' => '<p>The name of the field to sort ingestion jobs.</p>', 'refs' => [ 'IngestionJobSortBy$attribute' => NULL, ], ], 'IngestionJobStatistics' => [ 'base' => '<p>The document level statistics of an ingestion job</p>', 'refs' => [ 'IngestionJob$statistics' => NULL, 'IngestionJobSummary$statistics' => NULL, ], ], 'IngestionJobStatus' => [ 'base' => '<p>The status of an ingestion job.</p>', 'refs' => [ 'IngestionJob$status' => NULL, 'IngestionJobSummary$status' => NULL, ], ], 'IngestionJobSummaries' => [ 'base' => '<p>List of IngestionJobSummaries</p>', 'refs' => [ 'ListIngestionJobsResponse$ingestionJobSummaries' => NULL, ], ], 'IngestionJobSummary' => [ 'base' => '<p>Summary information of an ingestion job.</p>', 'refs' => [ 'IngestionJobSummaries$member' => NULL, ], ], 'Instruction' => [ 'base' => '<p>Instruction for the agent.</p>', 'refs' => [ 'Agent$instruction' => NULL, 'AgentVersion$instruction' => NULL, 'CreateAgentRequest$instruction' => NULL, 'UpdateAgentRequest$instruction' => NULL, ], ], 'InternalServerException' => [ 'base' => '<p>This exception is thrown if there was an unexpected error during processing of request</p>', 'refs' => [], ], 'KmsKeyArn' => [ 'base' => '<p>A KMS key ARN</p>', 'refs' => [ 'Agent$customerEncryptionKeyArn' => NULL, 'AgentVersion$customerEncryptionKeyArn' => NULL, 'CreateAgentRequest$customerEncryptionKeyArn' => NULL, 'ServerSideEncryptionConfiguration$kmsKeyArn' => NULL, 'UpdateAgentRequest$customerEncryptionKeyArn' => NULL, ], ], 'KnowledgeBase' => [ 'base' => '<p>Contains the information of a knowledge base.</p>', 'refs' => [ 'CreateKnowledgeBaseResponse$knowledgeBase' => NULL, 'GetKnowledgeBaseResponse$knowledgeBase' => NULL, 'UpdateKnowledgeBaseResponse$knowledgeBase' => NULL, ], ], 'KnowledgeBaseArn' => [ 'base' => '<p>ARN of a KnowledgeBase</p>', 'refs' => [ 'KnowledgeBase$knowledgeBaseArn' => NULL, ], ], 'KnowledgeBaseConfiguration' => [ 'base' => '<p>Configures a bedrock knowledge base.</p>', 'refs' => [ 'CreateKnowledgeBaseRequest$knowledgeBaseConfiguration' => NULL, 'KnowledgeBase$knowledgeBaseConfiguration' => NULL, 'UpdateKnowledgeBaseRequest$knowledgeBaseConfiguration' => NULL, ], ], 'KnowledgeBaseRoleArn' => [ 'base' => '<p>ARN of a IAM role.</p>', 'refs' => [ 'CreateKnowledgeBaseRequest$roleArn' => NULL, 'KnowledgeBase$roleArn' => NULL, 'UpdateKnowledgeBaseRequest$roleArn' => NULL, ], ], 'KnowledgeBaseState' => [ 'base' => '<p>State of the knowledge base; whether it is enabled or disabled</p>', 'refs' => [ 'AgentKnowledgeBase$knowledgeBaseState' => NULL, 'AgentKnowledgeBaseSummary$knowledgeBaseState' => NULL, 'AssociateAgentKnowledgeBaseRequest$knowledgeBaseState' => NULL, 'UpdateAgentKnowledgeBaseRequest$knowledgeBaseState' => NULL, ], ], 'KnowledgeBaseStatus' => [ 'base' => '<p>The status of a knowledge base.</p>', 'refs' => [ 'DeleteKnowledgeBaseResponse$status' => NULL, 'KnowledgeBase$status' => NULL, 'KnowledgeBaseSummary$status' => NULL, ], ], 'KnowledgeBaseStorageType' => [ 'base' => '<p>The storage type of a knowledge base.</p>', 'refs' => [ 'StorageConfiguration$type' => NULL, ], ], 'KnowledgeBaseSummaries' => [ 'base' => '<p>List of KnowledgeBaseSummaries</p>', 'refs' => [ 'ListKnowledgeBasesResponse$knowledgeBaseSummaries' => NULL, ], ], 'KnowledgeBaseSummary' => [ 'base' => '<p>Summary information of a knowledge base.</p>', 'refs' => [ 'KnowledgeBaseSummaries$member' => NULL, ], ], 'KnowledgeBaseType' => [ 'base' => '<p>The type of a knowledge base.</p>', 'refs' => [ 'KnowledgeBaseConfiguration$type' => NULL, ], ], 'LambdaArn' => [ 'base' => '<p>ARN of a Lambda.</p>', 'refs' => [ 'ActionGroupExecutor$lambda' => NULL, 'PromptOverrideConfiguration$overrideLambda' => NULL, ], ], 'ListAgentActionGroupsRequest' => [ 'base' => '<p>List Action Groups Request</p>', 'refs' => [], ], 'ListAgentActionGroupsResponse' => [ 'base' => '<p>List Action Groups Response</p>', 'refs' => [], ], 'ListAgentAliasesRequest' => [ 'base' => '<p>List Agent Aliases Request</p>', 'refs' => [], ], 'ListAgentAliasesResponse' => [ 'base' => '<p>List Agent Aliases Response</p>', 'refs' => [], ], 'ListAgentKnowledgeBasesRequest' => [ 'base' => '<p>List Agent Knowledge Bases Request</p>', 'refs' => [], ], 'ListAgentKnowledgeBasesResponse' => [ 'base' => '<p>List Agent Knowledge Bases Response</p>', 'refs' => [], ], 'ListAgentVersionsRequest' => [ 'base' => '<p>List Agent Versions Request</p>', 'refs' => [], ], 'ListAgentVersionsResponse' => [ 'base' => '<p>List Agent Versions Response</p>', 'refs' => [], ], 'ListAgentsRequest' => [ 'base' => '<p>List Agent Request</p>', 'refs' => [], ], 'ListAgentsResponse' => [ 'base' => '<p>List Agent Response</p>', 'refs' => [], ], 'ListDataSourcesRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListDataSourcesResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListIngestionJobsRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListIngestionJobsResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListKnowledgeBasesRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListKnowledgeBasesResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListTagsForResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListTagsForResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'MaxResults' => [ 'base' => '<p>Max Results.</p>', 'refs' => [ 'ListAgentActionGroupsRequest$maxResults' => NULL, 'ListAgentAliasesRequest$maxResults' => NULL, 'ListAgentKnowledgeBasesRequest$maxResults' => NULL, 'ListAgentVersionsRequest$maxResults' => NULL, 'ListAgentsRequest$maxResults' => NULL, 'ListDataSourcesRequest$maxResults' => NULL, 'ListIngestionJobsRequest$maxResults' => NULL, 'ListKnowledgeBasesRequest$maxResults' => NULL, ], ], 'MaximumLength' => [ 'base' => '<p>Maximum length of output</p>', 'refs' => [ 'InferenceConfiguration$maximumLength' => NULL, ], ], 'ModelIdentifier' => [ 'base' => '<p>ARN or name of a Bedrock model.</p>', 'refs' => [ 'Agent$foundationModel' => NULL, 'AgentVersion$foundationModel' => NULL, 'CreateAgentRequest$foundationModel' => NULL, 'UpdateAgentRequest$foundationModel' => NULL, ], ], 'Name' => [ 'base' => '<p>Name for a resource.</p>', 'refs' => [ 'ActionGroupSummary$actionGroupName' => NULL, 'Agent$agentName' => NULL, 'AgentActionGroup$actionGroupName' => NULL, 'AgentAlias$agentAliasName' => NULL, 'AgentAliasSummary$agentAliasName' => NULL, 'AgentSummary$agentName' => NULL, 'AgentVersion$agentName' => NULL, 'AgentVersionSummary$agentName' => NULL, 'CreateAgentActionGroupRequest$actionGroupName' => NULL, 'CreateAgentAliasRequest$agentAliasName' => NULL, 'CreateAgentRequest$agentName' => NULL, 'CreateDataSourceRequest$name' => NULL, 'CreateKnowledgeBaseRequest$name' => NULL, 'DataSource$name' => NULL, 'DataSourceSummary$name' => NULL, 'KnowledgeBase$name' => NULL, 'KnowledgeBaseSummary$name' => NULL, 'UpdateAgentActionGroupRequest$actionGroupName' => NULL, 'UpdateAgentAliasRequest$agentAliasName' => NULL, 'UpdateAgentRequest$agentName' => NULL, 'UpdateDataSourceRequest$name' => NULL, 'UpdateKnowledgeBaseRequest$name' => NULL, ], ], 'NextToken' => [ 'base' => '<p>Opaque continuation token of previous paginated response.</p>', 'refs' => [ 'ListAgentActionGroupsRequest$nextToken' => NULL, 'ListAgentActionGroupsResponse$nextToken' => NULL, 'ListAgentAliasesRequest$nextToken' => NULL, 'ListAgentAliasesResponse$nextToken' => NULL, 'ListAgentKnowledgeBasesRequest$nextToken' => NULL, 'ListAgentKnowledgeBasesResponse$nextToken' => NULL, 'ListAgentVersionsRequest$nextToken' => NULL, 'ListAgentVersionsResponse$nextToken' => NULL, 'ListAgentsRequest$nextToken' => NULL, 'ListAgentsResponse$nextToken' => NULL, 'ListDataSourcesRequest$nextToken' => NULL, 'ListDataSourcesResponse$nextToken' => NULL, 'ListIngestionJobsRequest$nextToken' => NULL, 'ListIngestionJobsResponse$nextToken' => NULL, 'ListKnowledgeBasesRequest$nextToken' => NULL, 'ListKnowledgeBasesResponse$nextToken' => NULL, ], ], 'NonBlankString' => [ 'base' => '<p>Non Blank String</p>', 'refs' => [ 'AccessDeniedException$message' => NULL, 'ConflictException$message' => NULL, 'InternalServerException$message' => NULL, 'ResourceNotFoundException$message' => NULL, 'ServiceQuotaExceededException$message' => NULL, 'ThrottlingException$message' => NULL, 'ValidationException$message' => NULL, 'ValidationExceptionField$name' => NULL, 'ValidationExceptionField$message' => NULL, ], ], 'NumericalVersion' => [ 'base' => '<p>Numerical Agent Version.</p>', 'refs' => [ 'AgentVersion$version' => NULL, 'DeleteAgentVersionRequest$agentVersion' => NULL, 'DeleteAgentVersionResponse$agentVersion' => NULL, 'GetAgentVersionRequest$agentVersion' => NULL, ], ], 'OpenSearchServerlessCollectionArn' => [ 'base' => '<p>Arn of an OpenSearch Serverless collection.</p>', 'refs' => [ 'OpenSearchServerlessConfiguration$collectionArn' => NULL, ], ], 'OpenSearchServerlessConfiguration' => [ 'base' => '<p>Contains the configurations to use OpenSearch Serverless to store knowledge base data.</p>', 'refs' => [ 'StorageConfiguration$opensearchServerlessConfiguration' => NULL, ], ], 'OpenSearchServerlessFieldMapping' => [ 'base' => '<p>A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names</p>', 'refs' => [ 'OpenSearchServerlessConfiguration$fieldMapping' => NULL, ], ], 'OpenSearchServerlessIndexName' => [ 'base' => '<p>Arn of an OpenSearch Serverless index.</p>', 'refs' => [ 'OpenSearchServerlessConfiguration$vectorIndexName' => NULL, ], ], 'Payload' => [ 'base' => '<p>String OpenAPI Payload</p>', 'refs' => [ 'APISchema$payload' => NULL, ], ], 'PineconeConfiguration' => [ 'base' => '<p>Contains the configurations to use Pinecone to store knowledge base data.</p>', 'refs' => [ 'StorageConfiguration$pineconeConfiguration' => NULL, ], ], 'PineconeConnectionString' => [ 'base' => '<p>Pinecone connection string</p>', 'refs' => [ 'PineconeConfiguration$connectionString' => NULL, ], ], 'PineconeFieldMapping' => [ 'base' => '<p>A mapping of Bedrock Knowledge Base fields to Pinecone field names</p>', 'refs' => [ 'PineconeConfiguration$fieldMapping' => NULL, ], ], 'PineconeNamespace' => [ 'base' => '<p>Pinecone namespace</p>', 'refs' => [ 'PineconeConfiguration$namespace' => NULL, ], ], 'PrepareAgentRequest' => [ 'base' => '<p>PrepareAgent Request</p>', 'refs' => [], ], 'PrepareAgentResponse' => [ 'base' => '<p>PrepareAgent Response</p>', 'refs' => [], ], 'PrimitiveLong' => [ 'base' => NULL, 'refs' => [ 'IngestionJobStatistics$numberOfDocumentsScanned' => '<p>Number of scanned documents</p>', 'IngestionJobStatistics$numberOfNewDocumentsIndexed' => '<p>Number of indexed documents</p>', 'IngestionJobStatistics$numberOfModifiedDocumentsIndexed' => '<p>Number of modified documents indexed</p>', 'IngestionJobStatistics$numberOfDocumentsDeleted' => '<p>Number of deleted documents</p>', 'IngestionJobStatistics$numberOfDocumentsFailed' => '<p>Number of failed documents</p>', ], ], 'PromptConfiguration' => [ 'base' => '<p>BasePromptConfiguration per Prompt Type.</p>', 'refs' => [ 'PromptConfigurations$member' => NULL, ], ], 'PromptConfigurations' => [ 'base' => '<p>List of BasePromptConfiguration</p>', 'refs' => [ 'PromptOverrideConfiguration$promptConfigurations' => NULL, ], ], 'PromptOverrideConfiguration' => [ 'base' => '<p>Configuration for prompt override.</p>', 'refs' => [ 'Agent$promptOverrideConfiguration' => NULL, 'AgentVersion$promptOverrideConfiguration' => NULL, 'CreateAgentRequest$promptOverrideConfiguration' => NULL, 'UpdateAgentRequest$promptOverrideConfiguration' => NULL, ], ], 'PromptState' => [ 'base' => '<p>Prompt State.</p>', 'refs' => [ 'PromptConfiguration$promptState' => NULL, ], ], 'PromptType' => [ 'base' => '<p>Prompt Type.</p>', 'refs' => [ 'PromptConfiguration$promptType' => NULL, ], ], 'RecommendedAction' => [ 'base' => '<p>The recommended action users can take to resolve an error in failureReasons.</p>', 'refs' => [ 'RecommendedActions$member' => NULL, ], ], 'RecommendedActions' => [ 'base' => '<p>The recommended actions users can take to resolve an error in failureReasons.</p>', 'refs' => [ 'Agent$recommendedActions' => NULL, 'AgentVersion$recommendedActions' => NULL, ], ], 'RedisEnterpriseCloudConfiguration' => [ 'base' => '<p>Contains the configurations to use Redis Enterprise Cloud to store knowledge base data.</p>', 'refs' => [ 'StorageConfiguration$redisEnterpriseCloudConfiguration' => NULL, ], ], 'RedisEnterpriseCloudEndpoint' => [ 'base' => '<p>Redis enterprise cloud endpoint</p>', 'refs' => [ 'RedisEnterpriseCloudConfiguration$endpoint' => NULL, ], ], 'RedisEnterpriseCloudFieldMapping' => [ 'base' => '<p>A mapping of Bedrock Knowledge Base fields to Redis Cloud field names</p>', 'refs' => [ 'RedisEnterpriseCloudConfiguration$fieldMapping' => NULL, ], ], 'RedisEnterpriseCloudIndexName' => [ 'base' => '<p>Name of a redis enterprise cloud index</p>', 'refs' => [ 'RedisEnterpriseCloudConfiguration$vectorIndexName' => NULL, ], ], 'ResourceNotFoundException' => [ 'base' => '<p>This exception is thrown when a resource referenced by the operation does not exist</p>', 'refs' => [], ], 'S3BucketArn' => [ 'base' => '<p>A S3 bucket ARN</p>', 'refs' => [ 'S3DataSourceConfiguration$bucketArn' => NULL, ], ], 'S3BucketName' => [ 'base' => '<p>A bucket in S3.</p>', 'refs' => [ 'S3Identifier$s3BucketName' => NULL, ], ], 'S3DataSourceConfiguration' => [ 'base' => '<p>Configures an S3 data source location.</p>', 'refs' => [ 'DataSourceConfiguration$s3Configuration' => NULL, ], ], 'S3Identifier' => [ 'base' => '<p>The identifier for the S3 resource.</p>', 'refs' => [ 'APISchema$s3' => NULL, ], ], 'S3ObjectKey' => [ 'base' => '<p>A object key in S3.</p>', 'refs' => [ 'S3Identifier$s3ObjectKey' => NULL, ], ], 'S3Prefix' => [ 'base' => '<p>Prefix for s3 object.</p>', 'refs' => [ 'S3Prefixes$member' => NULL, ], ], 'S3Prefixes' => [ 'base' => '<p>A list of S3 prefixes.</p>', 'refs' => [ 'S3DataSourceConfiguration$inclusionPrefixes' => NULL, ], ], 'SecretArn' => [ 'base' => '<p>Arn of a SecretsManager Secret.</p>', 'refs' => [ 'PineconeConfiguration$credentialsSecretArn' => NULL, 'RedisEnterpriseCloudConfiguration$credentialsSecretArn' => NULL, ], ], 'ServerSideEncryptionConfiguration' => [ 'base' => '<p>Server-side encryption configuration.</p>', 'refs' => [ 'CreateDataSourceRequest$serverSideEncryptionConfiguration' => NULL, 'DataSource$serverSideEncryptionConfiguration' => NULL, 'UpdateDataSourceRequest$serverSideEncryptionConfiguration' => NULL, ], ], 'ServiceQuotaExceededException' => [ 'base' => '<p>This exception is thrown when a request is made beyond the service quota</p>', 'refs' => [], ], 'SessionTTL' => [ 'base' => '<p>Max Session Time.</p>', 'refs' => [ 'Agent$idleSessionTTLInSeconds' => NULL, 'AgentVersion$idleSessionTTLInSeconds' => NULL, 'CreateAgentRequest$idleSessionTTLInSeconds' => NULL, 'UpdateAgentRequest$idleSessionTTLInSeconds' => NULL, ], ], 'SortOrder' => [ 'base' => '<p>Order to sort results by.</p>', 'refs' => [ 'IngestionJobSortBy$order' => NULL, ], ], 'StartIngestionJobRequest' => [ 'base' => NULL, 'refs' => [], ], 'StartIngestionJobResponse' => [ 'base' => NULL, 'refs' => [], ], 'StopSequences' => [ 'base' => '<p>List of stop sequences</p>', 'refs' => [ 'InferenceConfiguration$stopSequences' => NULL, ], ], 'StorageConfiguration' => [ 'base' => '<p>Configures the physical storage of ingested data in a knowledge base.</p>', 'refs' => [ 'CreateKnowledgeBaseRequest$storageConfiguration' => NULL, 'KnowledgeBase$storageConfiguration' => NULL, 'UpdateKnowledgeBaseRequest$storageConfiguration' => NULL, ], ], 'String' => [ 'base' => NULL, 'refs' => [ 'StopSequences$member' => NULL, ], ], 'TagKey' => [ 'base' => '<p>Key of a tag</p>', 'refs' => [ 'TagKeyList$member' => NULL, 'TagsMap$key' => NULL, ], ], 'TagKeyList' => [ 'base' => '<p>List of Tag Keys</p>', 'refs' => [ 'UntagResourceRequest$tagKeys' => NULL, ], ], 'TagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'TagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'TagValue' => [ 'base' => '<p>Value of a tag</p>', 'refs' => [ 'TagsMap$value' => NULL, ], ], 'TaggableResourcesArn' => [ 'base' => '<p>ARN of Taggable resources: [Agent, AgentAlias, Knowledge-Base]</p>', 'refs' => [ 'ListTagsForResourceRequest$resourceArn' => NULL, 'TagResourceRequest$resourceArn' => NULL, 'UntagResourceRequest$resourceArn' => NULL, ], ], 'TagsMap' => [ 'base' => '<p>A map of tag keys and values</p>', 'refs' => [ 'CreateAgentAliasRequest$tags' => NULL, 'CreateAgentRequest$tags' => NULL, 'CreateKnowledgeBaseRequest$tags' => NULL, 'ListTagsForResourceResponse$tags' => NULL, 'TagResourceRequest$tags' => NULL, ], ], 'Temperature' => [ 'base' => '<p>Controls randomness, higher values increase diversity</p>', 'refs' => [ 'InferenceConfiguration$temperature' => NULL, ], ], 'ThrottlingException' => [ 'base' => '<p>This exception is thrown when the number of requests exceeds the limit</p>', 'refs' => [], ], 'TopK' => [ 'base' => '<p>Sample from the k most likely next tokens</p>', 'refs' => [ 'InferenceConfiguration$topK' => NULL, ], ], 'TopP' => [ 'base' => '<p>Cumulative probability cutoff for token selection</p>', 'refs' => [ 'InferenceConfiguration$topP' => NULL, ], ], 'UntagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'UntagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateAgentActionGroupRequest' => [ 'base' => '<p>Update Action Group Request</p>', 'refs' => [], ], 'UpdateAgentActionGroupResponse' => [ 'base' => '<p>Update Action Group Response</p>', 'refs' => [], ], 'UpdateAgentAliasRequest' => [ 'base' => '<p>Update Agent Alias Request</p>', 'refs' => [], ], 'UpdateAgentAliasResponse' => [ 'base' => '<p>Update Agent Alias Response</p>', 'refs' => [], ], 'UpdateAgentKnowledgeBaseRequest' => [ 'base' => '<p>Update Agent Knowledge Base Request</p>', 'refs' => [], ], 'UpdateAgentKnowledgeBaseResponse' => [ 'base' => '<p>Update Agent Knowledge Base Response</p>', 'refs' => [], ], 'UpdateAgentRequest' => [ 'base' => '<p>Update Agent Request</p>', 'refs' => [], ], 'UpdateAgentResponse' => [ 'base' => '<p>Update Agent Response</p>', 'refs' => [], ], 'UpdateDataSourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateDataSourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateKnowledgeBaseRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateKnowledgeBaseResponse' => [ 'base' => NULL, 'refs' => [], ], 'ValidationException' => [ 'base' => '<p>This exception is thrown when the request\'s input validation fails</p>', 'refs' => [], ], 'ValidationExceptionField' => [ 'base' => '<p>Stores information about a field passed inside a request that resulted in an exception</p>', 'refs' => [ 'ValidationExceptionFieldList$member' => NULL, ], ], 'ValidationExceptionFieldList' => [ 'base' => '<p>list of ValidationExceptionField</p>', 'refs' => [ 'ValidationException$fieldList' => NULL, ], ], 'VectorIngestionConfiguration' => [ 'base' => '<p>Configures ingestion for a vector knowledge base</p>', 'refs' => [ 'CreateDataSourceRequest$vectorIngestionConfiguration' => NULL, 'DataSource$vectorIngestionConfiguration' => NULL, 'UpdateDataSourceRequest$vectorIngestionConfiguration' => NULL, ], ], 'VectorKnowledgeBaseConfiguration' => [ 'base' => '<p>Configurations for a vector knowledge base.</p>', 'refs' => [ 'KnowledgeBaseConfiguration$vectorKnowledgeBaseConfiguration' => NULL, ], ], 'Version' => [ 'base' => '<p>Agent Version.</p>', 'refs' => [ 'AgentActionGroup$agentVersion' => NULL, 'AgentAliasRoutingConfigurationListItem$agentVersion' => NULL, 'AgentKnowledgeBase$agentVersion' => NULL, 'AgentSummary$latestAgentVersion' => NULL, 'AgentVersionSummary$agentVersion' => NULL, 'GetAgentActionGroupRequest$agentVersion' => '<p>Version number generated when a version is created</p>', 'GetAgentKnowledgeBaseRequest$agentVersion' => '<p>Version number generated when a version is created</p>', 'ListAgentActionGroupsRequest$agentVersion' => '<p>Id generated at the server side when an Agent is Listed</p>', 'ListAgentKnowledgeBasesRequest$agentVersion' => '<p>Version number generated when a version is created</p>', 'PrepareAgentResponse$agentVersion' => NULL, ], ], ],];
